
MLX90614_Library.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000080cc  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000067c  08008190  08008190  00018190  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800880c  0800880c  0002021c  2**0
                  CONTENTS
  4 .ARM          00000000  0800880c  0800880c  0002021c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800880c  0800880c  0002021c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800880c  0800880c  0001880c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008810  08008810  00018810  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000021c  20000000  08008814  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000021c  08008a30  0002021c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000038c  08008a30  0002038c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002021c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004e6b  00000000  00000000  00020244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001480  00000000  00000000  000250af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000698  00000000  00000000  00026530  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000005e0  00000000  00000000  00026bc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019ef1  00000000  00000000  000271a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000076b4  00000000  00000000  00041099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ea12  00000000  00000000  0004874d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000d715f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002914  00000000  00000000  000d71b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000021c 	.word	0x2000021c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08008174 	.word	0x08008174

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000220 	.word	0x20000220
 8000104:	08008174 	.word	0x08008174

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 fd47 	bl	8001ed0 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 fc97 	bl	8001d80 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 fd39 	bl	8001ed0 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 fd2f 	bl	8001ed0 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 fcbf 	bl	8001e04 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 fcb5 	bl	8001e04 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_fadd>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	46c6      	mov	lr, r8
 80004ac:	0243      	lsls	r3, r0, #9
 80004ae:	0a5b      	lsrs	r3, r3, #9
 80004b0:	024e      	lsls	r6, r1, #9
 80004b2:	0045      	lsls	r5, r0, #1
 80004b4:	004f      	lsls	r7, r1, #1
 80004b6:	00da      	lsls	r2, r3, #3
 80004b8:	0fc4      	lsrs	r4, r0, #31
 80004ba:	469c      	mov	ip, r3
 80004bc:	0a70      	lsrs	r0, r6, #9
 80004be:	4690      	mov	r8, r2
 80004c0:	b500      	push	{lr}
 80004c2:	0e2d      	lsrs	r5, r5, #24
 80004c4:	0e3f      	lsrs	r7, r7, #24
 80004c6:	0fc9      	lsrs	r1, r1, #31
 80004c8:	09b6      	lsrs	r6, r6, #6
 80004ca:	428c      	cmp	r4, r1
 80004cc:	d04b      	beq.n	8000566 <__aeabi_fadd+0xbe>
 80004ce:	1bea      	subs	r2, r5, r7
 80004d0:	2a00      	cmp	r2, #0
 80004d2:	dd36      	ble.n	8000542 <__aeabi_fadd+0x9a>
 80004d4:	2f00      	cmp	r7, #0
 80004d6:	d061      	beq.n	800059c <__aeabi_fadd+0xf4>
 80004d8:	2dff      	cmp	r5, #255	; 0xff
 80004da:	d100      	bne.n	80004de <__aeabi_fadd+0x36>
 80004dc:	e0ad      	b.n	800063a <__aeabi_fadd+0x192>
 80004de:	2380      	movs	r3, #128	; 0x80
 80004e0:	04db      	lsls	r3, r3, #19
 80004e2:	431e      	orrs	r6, r3
 80004e4:	2a1b      	cmp	r2, #27
 80004e6:	dc00      	bgt.n	80004ea <__aeabi_fadd+0x42>
 80004e8:	e0d3      	b.n	8000692 <__aeabi_fadd+0x1ea>
 80004ea:	2001      	movs	r0, #1
 80004ec:	4643      	mov	r3, r8
 80004ee:	1a18      	subs	r0, r3, r0
 80004f0:	0143      	lsls	r3, r0, #5
 80004f2:	d400      	bmi.n	80004f6 <__aeabi_fadd+0x4e>
 80004f4:	e08c      	b.n	8000610 <__aeabi_fadd+0x168>
 80004f6:	0180      	lsls	r0, r0, #6
 80004f8:	0987      	lsrs	r7, r0, #6
 80004fa:	0038      	movs	r0, r7
 80004fc:	f002 fc3c 	bl	8002d78 <__clzsi2>
 8000500:	3805      	subs	r0, #5
 8000502:	4087      	lsls	r7, r0
 8000504:	4285      	cmp	r5, r0
 8000506:	dc00      	bgt.n	800050a <__aeabi_fadd+0x62>
 8000508:	e0b6      	b.n	8000678 <__aeabi_fadd+0x1d0>
 800050a:	1a2d      	subs	r5, r5, r0
 800050c:	48b3      	ldr	r0, [pc, #716]	; (80007dc <__aeabi_fadd+0x334>)
 800050e:	4038      	ands	r0, r7
 8000510:	0743      	lsls	r3, r0, #29
 8000512:	d004      	beq.n	800051e <__aeabi_fadd+0x76>
 8000514:	230f      	movs	r3, #15
 8000516:	4003      	ands	r3, r0
 8000518:	2b04      	cmp	r3, #4
 800051a:	d000      	beq.n	800051e <__aeabi_fadd+0x76>
 800051c:	3004      	adds	r0, #4
 800051e:	0143      	lsls	r3, r0, #5
 8000520:	d400      	bmi.n	8000524 <__aeabi_fadd+0x7c>
 8000522:	e078      	b.n	8000616 <__aeabi_fadd+0x16e>
 8000524:	1c6a      	adds	r2, r5, #1
 8000526:	2dfe      	cmp	r5, #254	; 0xfe
 8000528:	d065      	beq.n	80005f6 <__aeabi_fadd+0x14e>
 800052a:	0180      	lsls	r0, r0, #6
 800052c:	0a43      	lsrs	r3, r0, #9
 800052e:	469c      	mov	ip, r3
 8000530:	b2d2      	uxtb	r2, r2
 8000532:	4663      	mov	r3, ip
 8000534:	05d0      	lsls	r0, r2, #23
 8000536:	4318      	orrs	r0, r3
 8000538:	07e4      	lsls	r4, r4, #31
 800053a:	4320      	orrs	r0, r4
 800053c:	bc80      	pop	{r7}
 800053e:	46b8      	mov	r8, r7
 8000540:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000542:	2a00      	cmp	r2, #0
 8000544:	d035      	beq.n	80005b2 <__aeabi_fadd+0x10a>
 8000546:	1b7a      	subs	r2, r7, r5
 8000548:	2d00      	cmp	r5, #0
 800054a:	d000      	beq.n	800054e <__aeabi_fadd+0xa6>
 800054c:	e0af      	b.n	80006ae <__aeabi_fadd+0x206>
 800054e:	4643      	mov	r3, r8
 8000550:	2b00      	cmp	r3, #0
 8000552:	d100      	bne.n	8000556 <__aeabi_fadd+0xae>
 8000554:	e0a7      	b.n	80006a6 <__aeabi_fadd+0x1fe>
 8000556:	1e53      	subs	r3, r2, #1
 8000558:	2a01      	cmp	r2, #1
 800055a:	d100      	bne.n	800055e <__aeabi_fadd+0xb6>
 800055c:	e12f      	b.n	80007be <__aeabi_fadd+0x316>
 800055e:	2aff      	cmp	r2, #255	; 0xff
 8000560:	d069      	beq.n	8000636 <__aeabi_fadd+0x18e>
 8000562:	001a      	movs	r2, r3
 8000564:	e0aa      	b.n	80006bc <__aeabi_fadd+0x214>
 8000566:	1be9      	subs	r1, r5, r7
 8000568:	2900      	cmp	r1, #0
 800056a:	dd70      	ble.n	800064e <__aeabi_fadd+0x1a6>
 800056c:	2f00      	cmp	r7, #0
 800056e:	d037      	beq.n	80005e0 <__aeabi_fadd+0x138>
 8000570:	2dff      	cmp	r5, #255	; 0xff
 8000572:	d062      	beq.n	800063a <__aeabi_fadd+0x192>
 8000574:	2380      	movs	r3, #128	; 0x80
 8000576:	04db      	lsls	r3, r3, #19
 8000578:	431e      	orrs	r6, r3
 800057a:	291b      	cmp	r1, #27
 800057c:	dc00      	bgt.n	8000580 <__aeabi_fadd+0xd8>
 800057e:	e0b0      	b.n	80006e2 <__aeabi_fadd+0x23a>
 8000580:	2001      	movs	r0, #1
 8000582:	4440      	add	r0, r8
 8000584:	0143      	lsls	r3, r0, #5
 8000586:	d543      	bpl.n	8000610 <__aeabi_fadd+0x168>
 8000588:	3501      	adds	r5, #1
 800058a:	2dff      	cmp	r5, #255	; 0xff
 800058c:	d033      	beq.n	80005f6 <__aeabi_fadd+0x14e>
 800058e:	2301      	movs	r3, #1
 8000590:	4a93      	ldr	r2, [pc, #588]	; (80007e0 <__aeabi_fadd+0x338>)
 8000592:	4003      	ands	r3, r0
 8000594:	0840      	lsrs	r0, r0, #1
 8000596:	4010      	ands	r0, r2
 8000598:	4318      	orrs	r0, r3
 800059a:	e7b9      	b.n	8000510 <__aeabi_fadd+0x68>
 800059c:	2e00      	cmp	r6, #0
 800059e:	d100      	bne.n	80005a2 <__aeabi_fadd+0xfa>
 80005a0:	e083      	b.n	80006aa <__aeabi_fadd+0x202>
 80005a2:	1e51      	subs	r1, r2, #1
 80005a4:	2a01      	cmp	r2, #1
 80005a6:	d100      	bne.n	80005aa <__aeabi_fadd+0x102>
 80005a8:	e0d8      	b.n	800075c <__aeabi_fadd+0x2b4>
 80005aa:	2aff      	cmp	r2, #255	; 0xff
 80005ac:	d045      	beq.n	800063a <__aeabi_fadd+0x192>
 80005ae:	000a      	movs	r2, r1
 80005b0:	e798      	b.n	80004e4 <__aeabi_fadd+0x3c>
 80005b2:	27fe      	movs	r7, #254	; 0xfe
 80005b4:	1c6a      	adds	r2, r5, #1
 80005b6:	4217      	tst	r7, r2
 80005b8:	d000      	beq.n	80005bc <__aeabi_fadd+0x114>
 80005ba:	e086      	b.n	80006ca <__aeabi_fadd+0x222>
 80005bc:	2d00      	cmp	r5, #0
 80005be:	d000      	beq.n	80005c2 <__aeabi_fadd+0x11a>
 80005c0:	e0b7      	b.n	8000732 <__aeabi_fadd+0x28a>
 80005c2:	4643      	mov	r3, r8
 80005c4:	2b00      	cmp	r3, #0
 80005c6:	d100      	bne.n	80005ca <__aeabi_fadd+0x122>
 80005c8:	e0f3      	b.n	80007b2 <__aeabi_fadd+0x30a>
 80005ca:	2200      	movs	r2, #0
 80005cc:	2e00      	cmp	r6, #0
 80005ce:	d0b0      	beq.n	8000532 <__aeabi_fadd+0x8a>
 80005d0:	1b98      	subs	r0, r3, r6
 80005d2:	0143      	lsls	r3, r0, #5
 80005d4:	d400      	bmi.n	80005d8 <__aeabi_fadd+0x130>
 80005d6:	e0fa      	b.n	80007ce <__aeabi_fadd+0x326>
 80005d8:	4643      	mov	r3, r8
 80005da:	000c      	movs	r4, r1
 80005dc:	1af0      	subs	r0, r6, r3
 80005de:	e797      	b.n	8000510 <__aeabi_fadd+0x68>
 80005e0:	2e00      	cmp	r6, #0
 80005e2:	d100      	bne.n	80005e6 <__aeabi_fadd+0x13e>
 80005e4:	e0c8      	b.n	8000778 <__aeabi_fadd+0x2d0>
 80005e6:	1e4a      	subs	r2, r1, #1
 80005e8:	2901      	cmp	r1, #1
 80005ea:	d100      	bne.n	80005ee <__aeabi_fadd+0x146>
 80005ec:	e0ae      	b.n	800074c <__aeabi_fadd+0x2a4>
 80005ee:	29ff      	cmp	r1, #255	; 0xff
 80005f0:	d023      	beq.n	800063a <__aeabi_fadd+0x192>
 80005f2:	0011      	movs	r1, r2
 80005f4:	e7c1      	b.n	800057a <__aeabi_fadd+0xd2>
 80005f6:	2300      	movs	r3, #0
 80005f8:	22ff      	movs	r2, #255	; 0xff
 80005fa:	469c      	mov	ip, r3
 80005fc:	e799      	b.n	8000532 <__aeabi_fadd+0x8a>
 80005fe:	21fe      	movs	r1, #254	; 0xfe
 8000600:	1c6a      	adds	r2, r5, #1
 8000602:	4211      	tst	r1, r2
 8000604:	d077      	beq.n	80006f6 <__aeabi_fadd+0x24e>
 8000606:	2aff      	cmp	r2, #255	; 0xff
 8000608:	d0f5      	beq.n	80005f6 <__aeabi_fadd+0x14e>
 800060a:	0015      	movs	r5, r2
 800060c:	4446      	add	r6, r8
 800060e:	0870      	lsrs	r0, r6, #1
 8000610:	0743      	lsls	r3, r0, #29
 8000612:	d000      	beq.n	8000616 <__aeabi_fadd+0x16e>
 8000614:	e77e      	b.n	8000514 <__aeabi_fadd+0x6c>
 8000616:	08c3      	lsrs	r3, r0, #3
 8000618:	2dff      	cmp	r5, #255	; 0xff
 800061a:	d00e      	beq.n	800063a <__aeabi_fadd+0x192>
 800061c:	025b      	lsls	r3, r3, #9
 800061e:	0a5b      	lsrs	r3, r3, #9
 8000620:	469c      	mov	ip, r3
 8000622:	b2ea      	uxtb	r2, r5
 8000624:	e785      	b.n	8000532 <__aeabi_fadd+0x8a>
 8000626:	2e00      	cmp	r6, #0
 8000628:	d007      	beq.n	800063a <__aeabi_fadd+0x192>
 800062a:	2280      	movs	r2, #128	; 0x80
 800062c:	03d2      	lsls	r2, r2, #15
 800062e:	4213      	tst	r3, r2
 8000630:	d003      	beq.n	800063a <__aeabi_fadd+0x192>
 8000632:	4210      	tst	r0, r2
 8000634:	d101      	bne.n	800063a <__aeabi_fadd+0x192>
 8000636:	000c      	movs	r4, r1
 8000638:	0003      	movs	r3, r0
 800063a:	2b00      	cmp	r3, #0
 800063c:	d0db      	beq.n	80005f6 <__aeabi_fadd+0x14e>
 800063e:	2080      	movs	r0, #128	; 0x80
 8000640:	03c0      	lsls	r0, r0, #15
 8000642:	4318      	orrs	r0, r3
 8000644:	0240      	lsls	r0, r0, #9
 8000646:	0a43      	lsrs	r3, r0, #9
 8000648:	469c      	mov	ip, r3
 800064a:	22ff      	movs	r2, #255	; 0xff
 800064c:	e771      	b.n	8000532 <__aeabi_fadd+0x8a>
 800064e:	2900      	cmp	r1, #0
 8000650:	d0d5      	beq.n	80005fe <__aeabi_fadd+0x156>
 8000652:	1b7a      	subs	r2, r7, r5
 8000654:	2d00      	cmp	r5, #0
 8000656:	d160      	bne.n	800071a <__aeabi_fadd+0x272>
 8000658:	4643      	mov	r3, r8
 800065a:	2b00      	cmp	r3, #0
 800065c:	d024      	beq.n	80006a8 <__aeabi_fadd+0x200>
 800065e:	1e53      	subs	r3, r2, #1
 8000660:	2a01      	cmp	r2, #1
 8000662:	d073      	beq.n	800074c <__aeabi_fadd+0x2a4>
 8000664:	2aff      	cmp	r2, #255	; 0xff
 8000666:	d0e7      	beq.n	8000638 <__aeabi_fadd+0x190>
 8000668:	001a      	movs	r2, r3
 800066a:	2a1b      	cmp	r2, #27
 800066c:	dc00      	bgt.n	8000670 <__aeabi_fadd+0x1c8>
 800066e:	e085      	b.n	800077c <__aeabi_fadd+0x2d4>
 8000670:	2001      	movs	r0, #1
 8000672:	003d      	movs	r5, r7
 8000674:	1980      	adds	r0, r0, r6
 8000676:	e785      	b.n	8000584 <__aeabi_fadd+0xdc>
 8000678:	2320      	movs	r3, #32
 800067a:	003a      	movs	r2, r7
 800067c:	1b45      	subs	r5, r0, r5
 800067e:	0038      	movs	r0, r7
 8000680:	3501      	adds	r5, #1
 8000682:	40ea      	lsrs	r2, r5
 8000684:	1b5d      	subs	r5, r3, r5
 8000686:	40a8      	lsls	r0, r5
 8000688:	1e43      	subs	r3, r0, #1
 800068a:	4198      	sbcs	r0, r3
 800068c:	2500      	movs	r5, #0
 800068e:	4310      	orrs	r0, r2
 8000690:	e73e      	b.n	8000510 <__aeabi_fadd+0x68>
 8000692:	2320      	movs	r3, #32
 8000694:	0030      	movs	r0, r6
 8000696:	1a9b      	subs	r3, r3, r2
 8000698:	0031      	movs	r1, r6
 800069a:	4098      	lsls	r0, r3
 800069c:	40d1      	lsrs	r1, r2
 800069e:	1e43      	subs	r3, r0, #1
 80006a0:	4198      	sbcs	r0, r3
 80006a2:	4308      	orrs	r0, r1
 80006a4:	e722      	b.n	80004ec <__aeabi_fadd+0x44>
 80006a6:	000c      	movs	r4, r1
 80006a8:	0003      	movs	r3, r0
 80006aa:	0015      	movs	r5, r2
 80006ac:	e7b4      	b.n	8000618 <__aeabi_fadd+0x170>
 80006ae:	2fff      	cmp	r7, #255	; 0xff
 80006b0:	d0c1      	beq.n	8000636 <__aeabi_fadd+0x18e>
 80006b2:	2380      	movs	r3, #128	; 0x80
 80006b4:	4640      	mov	r0, r8
 80006b6:	04db      	lsls	r3, r3, #19
 80006b8:	4318      	orrs	r0, r3
 80006ba:	4680      	mov	r8, r0
 80006bc:	2a1b      	cmp	r2, #27
 80006be:	dd51      	ble.n	8000764 <__aeabi_fadd+0x2bc>
 80006c0:	2001      	movs	r0, #1
 80006c2:	000c      	movs	r4, r1
 80006c4:	003d      	movs	r5, r7
 80006c6:	1a30      	subs	r0, r6, r0
 80006c8:	e712      	b.n	80004f0 <__aeabi_fadd+0x48>
 80006ca:	4643      	mov	r3, r8
 80006cc:	1b9f      	subs	r7, r3, r6
 80006ce:	017b      	lsls	r3, r7, #5
 80006d0:	d42b      	bmi.n	800072a <__aeabi_fadd+0x282>
 80006d2:	2f00      	cmp	r7, #0
 80006d4:	d000      	beq.n	80006d8 <__aeabi_fadd+0x230>
 80006d6:	e710      	b.n	80004fa <__aeabi_fadd+0x52>
 80006d8:	2300      	movs	r3, #0
 80006da:	2400      	movs	r4, #0
 80006dc:	2200      	movs	r2, #0
 80006de:	469c      	mov	ip, r3
 80006e0:	e727      	b.n	8000532 <__aeabi_fadd+0x8a>
 80006e2:	2320      	movs	r3, #32
 80006e4:	0032      	movs	r2, r6
 80006e6:	0030      	movs	r0, r6
 80006e8:	40ca      	lsrs	r2, r1
 80006ea:	1a59      	subs	r1, r3, r1
 80006ec:	4088      	lsls	r0, r1
 80006ee:	1e43      	subs	r3, r0, #1
 80006f0:	4198      	sbcs	r0, r3
 80006f2:	4310      	orrs	r0, r2
 80006f4:	e745      	b.n	8000582 <__aeabi_fadd+0xda>
 80006f6:	2d00      	cmp	r5, #0
 80006f8:	d14a      	bne.n	8000790 <__aeabi_fadd+0x2e8>
 80006fa:	4643      	mov	r3, r8
 80006fc:	2b00      	cmp	r3, #0
 80006fe:	d063      	beq.n	80007c8 <__aeabi_fadd+0x320>
 8000700:	2200      	movs	r2, #0
 8000702:	2e00      	cmp	r6, #0
 8000704:	d100      	bne.n	8000708 <__aeabi_fadd+0x260>
 8000706:	e714      	b.n	8000532 <__aeabi_fadd+0x8a>
 8000708:	0030      	movs	r0, r6
 800070a:	4440      	add	r0, r8
 800070c:	0143      	lsls	r3, r0, #5
 800070e:	d400      	bmi.n	8000712 <__aeabi_fadd+0x26a>
 8000710:	e77e      	b.n	8000610 <__aeabi_fadd+0x168>
 8000712:	4b32      	ldr	r3, [pc, #200]	; (80007dc <__aeabi_fadd+0x334>)
 8000714:	3501      	adds	r5, #1
 8000716:	4018      	ands	r0, r3
 8000718:	e77a      	b.n	8000610 <__aeabi_fadd+0x168>
 800071a:	2fff      	cmp	r7, #255	; 0xff
 800071c:	d08c      	beq.n	8000638 <__aeabi_fadd+0x190>
 800071e:	2380      	movs	r3, #128	; 0x80
 8000720:	4641      	mov	r1, r8
 8000722:	04db      	lsls	r3, r3, #19
 8000724:	4319      	orrs	r1, r3
 8000726:	4688      	mov	r8, r1
 8000728:	e79f      	b.n	800066a <__aeabi_fadd+0x1c2>
 800072a:	4643      	mov	r3, r8
 800072c:	000c      	movs	r4, r1
 800072e:	1af7      	subs	r7, r6, r3
 8000730:	e6e3      	b.n	80004fa <__aeabi_fadd+0x52>
 8000732:	4642      	mov	r2, r8
 8000734:	2a00      	cmp	r2, #0
 8000736:	d000      	beq.n	800073a <__aeabi_fadd+0x292>
 8000738:	e775      	b.n	8000626 <__aeabi_fadd+0x17e>
 800073a:	2e00      	cmp	r6, #0
 800073c:	d000      	beq.n	8000740 <__aeabi_fadd+0x298>
 800073e:	e77a      	b.n	8000636 <__aeabi_fadd+0x18e>
 8000740:	2380      	movs	r3, #128	; 0x80
 8000742:	03db      	lsls	r3, r3, #15
 8000744:	2400      	movs	r4, #0
 8000746:	469c      	mov	ip, r3
 8000748:	22ff      	movs	r2, #255	; 0xff
 800074a:	e6f2      	b.n	8000532 <__aeabi_fadd+0x8a>
 800074c:	0030      	movs	r0, r6
 800074e:	4440      	add	r0, r8
 8000750:	2501      	movs	r5, #1
 8000752:	0143      	lsls	r3, r0, #5
 8000754:	d400      	bmi.n	8000758 <__aeabi_fadd+0x2b0>
 8000756:	e75b      	b.n	8000610 <__aeabi_fadd+0x168>
 8000758:	2502      	movs	r5, #2
 800075a:	e718      	b.n	800058e <__aeabi_fadd+0xe6>
 800075c:	4643      	mov	r3, r8
 800075e:	2501      	movs	r5, #1
 8000760:	1b98      	subs	r0, r3, r6
 8000762:	e6c5      	b.n	80004f0 <__aeabi_fadd+0x48>
 8000764:	2320      	movs	r3, #32
 8000766:	4644      	mov	r4, r8
 8000768:	4640      	mov	r0, r8
 800076a:	40d4      	lsrs	r4, r2
 800076c:	1a9a      	subs	r2, r3, r2
 800076e:	4090      	lsls	r0, r2
 8000770:	1e43      	subs	r3, r0, #1
 8000772:	4198      	sbcs	r0, r3
 8000774:	4320      	orrs	r0, r4
 8000776:	e7a4      	b.n	80006c2 <__aeabi_fadd+0x21a>
 8000778:	000d      	movs	r5, r1
 800077a:	e74d      	b.n	8000618 <__aeabi_fadd+0x170>
 800077c:	2320      	movs	r3, #32
 800077e:	4641      	mov	r1, r8
 8000780:	4640      	mov	r0, r8
 8000782:	40d1      	lsrs	r1, r2
 8000784:	1a9a      	subs	r2, r3, r2
 8000786:	4090      	lsls	r0, r2
 8000788:	1e43      	subs	r3, r0, #1
 800078a:	4198      	sbcs	r0, r3
 800078c:	4308      	orrs	r0, r1
 800078e:	e770      	b.n	8000672 <__aeabi_fadd+0x1ca>
 8000790:	4642      	mov	r2, r8
 8000792:	2a00      	cmp	r2, #0
 8000794:	d100      	bne.n	8000798 <__aeabi_fadd+0x2f0>
 8000796:	e74f      	b.n	8000638 <__aeabi_fadd+0x190>
 8000798:	2e00      	cmp	r6, #0
 800079a:	d100      	bne.n	800079e <__aeabi_fadd+0x2f6>
 800079c:	e74d      	b.n	800063a <__aeabi_fadd+0x192>
 800079e:	2280      	movs	r2, #128	; 0x80
 80007a0:	03d2      	lsls	r2, r2, #15
 80007a2:	4213      	tst	r3, r2
 80007a4:	d100      	bne.n	80007a8 <__aeabi_fadd+0x300>
 80007a6:	e748      	b.n	800063a <__aeabi_fadd+0x192>
 80007a8:	4210      	tst	r0, r2
 80007aa:	d000      	beq.n	80007ae <__aeabi_fadd+0x306>
 80007ac:	e745      	b.n	800063a <__aeabi_fadd+0x192>
 80007ae:	0003      	movs	r3, r0
 80007b0:	e743      	b.n	800063a <__aeabi_fadd+0x192>
 80007b2:	2e00      	cmp	r6, #0
 80007b4:	d090      	beq.n	80006d8 <__aeabi_fadd+0x230>
 80007b6:	000c      	movs	r4, r1
 80007b8:	4684      	mov	ip, r0
 80007ba:	2200      	movs	r2, #0
 80007bc:	e6b9      	b.n	8000532 <__aeabi_fadd+0x8a>
 80007be:	4643      	mov	r3, r8
 80007c0:	000c      	movs	r4, r1
 80007c2:	1af0      	subs	r0, r6, r3
 80007c4:	3501      	adds	r5, #1
 80007c6:	e693      	b.n	80004f0 <__aeabi_fadd+0x48>
 80007c8:	4684      	mov	ip, r0
 80007ca:	2200      	movs	r2, #0
 80007cc:	e6b1      	b.n	8000532 <__aeabi_fadd+0x8a>
 80007ce:	2800      	cmp	r0, #0
 80007d0:	d000      	beq.n	80007d4 <__aeabi_fadd+0x32c>
 80007d2:	e71d      	b.n	8000610 <__aeabi_fadd+0x168>
 80007d4:	2300      	movs	r3, #0
 80007d6:	2400      	movs	r4, #0
 80007d8:	469c      	mov	ip, r3
 80007da:	e6aa      	b.n	8000532 <__aeabi_fadd+0x8a>
 80007dc:	fbffffff 	.word	0xfbffffff
 80007e0:	7dffffff 	.word	0x7dffffff

080007e4 <__aeabi_fdiv>:
 80007e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007e6:	464f      	mov	r7, r9
 80007e8:	4646      	mov	r6, r8
 80007ea:	46d6      	mov	lr, sl
 80007ec:	0245      	lsls	r5, r0, #9
 80007ee:	b5c0      	push	{r6, r7, lr}
 80007f0:	0047      	lsls	r7, r0, #1
 80007f2:	1c0c      	adds	r4, r1, #0
 80007f4:	0a6d      	lsrs	r5, r5, #9
 80007f6:	0e3f      	lsrs	r7, r7, #24
 80007f8:	0fc6      	lsrs	r6, r0, #31
 80007fa:	2f00      	cmp	r7, #0
 80007fc:	d100      	bne.n	8000800 <__aeabi_fdiv+0x1c>
 80007fe:	e070      	b.n	80008e2 <__aeabi_fdiv+0xfe>
 8000800:	2fff      	cmp	r7, #255	; 0xff
 8000802:	d100      	bne.n	8000806 <__aeabi_fdiv+0x22>
 8000804:	e075      	b.n	80008f2 <__aeabi_fdiv+0x10e>
 8000806:	00eb      	lsls	r3, r5, #3
 8000808:	2580      	movs	r5, #128	; 0x80
 800080a:	04ed      	lsls	r5, r5, #19
 800080c:	431d      	orrs	r5, r3
 800080e:	2300      	movs	r3, #0
 8000810:	4699      	mov	r9, r3
 8000812:	469a      	mov	sl, r3
 8000814:	3f7f      	subs	r7, #127	; 0x7f
 8000816:	0260      	lsls	r0, r4, #9
 8000818:	0a43      	lsrs	r3, r0, #9
 800081a:	4698      	mov	r8, r3
 800081c:	0063      	lsls	r3, r4, #1
 800081e:	0e1b      	lsrs	r3, r3, #24
 8000820:	0fe4      	lsrs	r4, r4, #31
 8000822:	2b00      	cmp	r3, #0
 8000824:	d04e      	beq.n	80008c4 <__aeabi_fdiv+0xe0>
 8000826:	2bff      	cmp	r3, #255	; 0xff
 8000828:	d046      	beq.n	80008b8 <__aeabi_fdiv+0xd4>
 800082a:	4642      	mov	r2, r8
 800082c:	00d0      	lsls	r0, r2, #3
 800082e:	2280      	movs	r2, #128	; 0x80
 8000830:	04d2      	lsls	r2, r2, #19
 8000832:	4302      	orrs	r2, r0
 8000834:	4690      	mov	r8, r2
 8000836:	2200      	movs	r2, #0
 8000838:	3b7f      	subs	r3, #127	; 0x7f
 800083a:	0031      	movs	r1, r6
 800083c:	1aff      	subs	r7, r7, r3
 800083e:	464b      	mov	r3, r9
 8000840:	4061      	eors	r1, r4
 8000842:	b2c9      	uxtb	r1, r1
 8000844:	4313      	orrs	r3, r2
 8000846:	2b0f      	cmp	r3, #15
 8000848:	d900      	bls.n	800084c <__aeabi_fdiv+0x68>
 800084a:	e0b5      	b.n	80009b8 <__aeabi_fdiv+0x1d4>
 800084c:	486e      	ldr	r0, [pc, #440]	; (8000a08 <__aeabi_fdiv+0x224>)
 800084e:	009b      	lsls	r3, r3, #2
 8000850:	58c3      	ldr	r3, [r0, r3]
 8000852:	469f      	mov	pc, r3
 8000854:	2300      	movs	r3, #0
 8000856:	4698      	mov	r8, r3
 8000858:	0026      	movs	r6, r4
 800085a:	4645      	mov	r5, r8
 800085c:	4692      	mov	sl, r2
 800085e:	4653      	mov	r3, sl
 8000860:	2b02      	cmp	r3, #2
 8000862:	d100      	bne.n	8000866 <__aeabi_fdiv+0x82>
 8000864:	e089      	b.n	800097a <__aeabi_fdiv+0x196>
 8000866:	2b03      	cmp	r3, #3
 8000868:	d100      	bne.n	800086c <__aeabi_fdiv+0x88>
 800086a:	e09e      	b.n	80009aa <__aeabi_fdiv+0x1c6>
 800086c:	2b01      	cmp	r3, #1
 800086e:	d018      	beq.n	80008a2 <__aeabi_fdiv+0xbe>
 8000870:	003b      	movs	r3, r7
 8000872:	337f      	adds	r3, #127	; 0x7f
 8000874:	2b00      	cmp	r3, #0
 8000876:	dd69      	ble.n	800094c <__aeabi_fdiv+0x168>
 8000878:	076a      	lsls	r2, r5, #29
 800087a:	d004      	beq.n	8000886 <__aeabi_fdiv+0xa2>
 800087c:	220f      	movs	r2, #15
 800087e:	402a      	ands	r2, r5
 8000880:	2a04      	cmp	r2, #4
 8000882:	d000      	beq.n	8000886 <__aeabi_fdiv+0xa2>
 8000884:	3504      	adds	r5, #4
 8000886:	012a      	lsls	r2, r5, #4
 8000888:	d503      	bpl.n	8000892 <__aeabi_fdiv+0xae>
 800088a:	4b60      	ldr	r3, [pc, #384]	; (8000a0c <__aeabi_fdiv+0x228>)
 800088c:	401d      	ands	r5, r3
 800088e:	003b      	movs	r3, r7
 8000890:	3380      	adds	r3, #128	; 0x80
 8000892:	2bfe      	cmp	r3, #254	; 0xfe
 8000894:	dd00      	ble.n	8000898 <__aeabi_fdiv+0xb4>
 8000896:	e070      	b.n	800097a <__aeabi_fdiv+0x196>
 8000898:	01ad      	lsls	r5, r5, #6
 800089a:	0a6d      	lsrs	r5, r5, #9
 800089c:	b2d8      	uxtb	r0, r3
 800089e:	e002      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 80008a0:	000e      	movs	r6, r1
 80008a2:	2000      	movs	r0, #0
 80008a4:	2500      	movs	r5, #0
 80008a6:	05c0      	lsls	r0, r0, #23
 80008a8:	4328      	orrs	r0, r5
 80008aa:	07f6      	lsls	r6, r6, #31
 80008ac:	4330      	orrs	r0, r6
 80008ae:	bce0      	pop	{r5, r6, r7}
 80008b0:	46ba      	mov	sl, r7
 80008b2:	46b1      	mov	r9, r6
 80008b4:	46a8      	mov	r8, r5
 80008b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008b8:	4643      	mov	r3, r8
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	d13f      	bne.n	800093e <__aeabi_fdiv+0x15a>
 80008be:	2202      	movs	r2, #2
 80008c0:	3fff      	subs	r7, #255	; 0xff
 80008c2:	e003      	b.n	80008cc <__aeabi_fdiv+0xe8>
 80008c4:	4643      	mov	r3, r8
 80008c6:	2b00      	cmp	r3, #0
 80008c8:	d12d      	bne.n	8000926 <__aeabi_fdiv+0x142>
 80008ca:	2201      	movs	r2, #1
 80008cc:	0031      	movs	r1, r6
 80008ce:	464b      	mov	r3, r9
 80008d0:	4061      	eors	r1, r4
 80008d2:	b2c9      	uxtb	r1, r1
 80008d4:	4313      	orrs	r3, r2
 80008d6:	2b0f      	cmp	r3, #15
 80008d8:	d834      	bhi.n	8000944 <__aeabi_fdiv+0x160>
 80008da:	484d      	ldr	r0, [pc, #308]	; (8000a10 <__aeabi_fdiv+0x22c>)
 80008dc:	009b      	lsls	r3, r3, #2
 80008de:	58c3      	ldr	r3, [r0, r3]
 80008e0:	469f      	mov	pc, r3
 80008e2:	2d00      	cmp	r5, #0
 80008e4:	d113      	bne.n	800090e <__aeabi_fdiv+0x12a>
 80008e6:	2304      	movs	r3, #4
 80008e8:	4699      	mov	r9, r3
 80008ea:	3b03      	subs	r3, #3
 80008ec:	2700      	movs	r7, #0
 80008ee:	469a      	mov	sl, r3
 80008f0:	e791      	b.n	8000816 <__aeabi_fdiv+0x32>
 80008f2:	2d00      	cmp	r5, #0
 80008f4:	d105      	bne.n	8000902 <__aeabi_fdiv+0x11e>
 80008f6:	2308      	movs	r3, #8
 80008f8:	4699      	mov	r9, r3
 80008fa:	3b06      	subs	r3, #6
 80008fc:	27ff      	movs	r7, #255	; 0xff
 80008fe:	469a      	mov	sl, r3
 8000900:	e789      	b.n	8000816 <__aeabi_fdiv+0x32>
 8000902:	230c      	movs	r3, #12
 8000904:	4699      	mov	r9, r3
 8000906:	3b09      	subs	r3, #9
 8000908:	27ff      	movs	r7, #255	; 0xff
 800090a:	469a      	mov	sl, r3
 800090c:	e783      	b.n	8000816 <__aeabi_fdiv+0x32>
 800090e:	0028      	movs	r0, r5
 8000910:	f002 fa32 	bl	8002d78 <__clzsi2>
 8000914:	2776      	movs	r7, #118	; 0x76
 8000916:	1f43      	subs	r3, r0, #5
 8000918:	409d      	lsls	r5, r3
 800091a:	2300      	movs	r3, #0
 800091c:	427f      	negs	r7, r7
 800091e:	4699      	mov	r9, r3
 8000920:	469a      	mov	sl, r3
 8000922:	1a3f      	subs	r7, r7, r0
 8000924:	e777      	b.n	8000816 <__aeabi_fdiv+0x32>
 8000926:	4640      	mov	r0, r8
 8000928:	f002 fa26 	bl	8002d78 <__clzsi2>
 800092c:	4642      	mov	r2, r8
 800092e:	1f43      	subs	r3, r0, #5
 8000930:	409a      	lsls	r2, r3
 8000932:	2376      	movs	r3, #118	; 0x76
 8000934:	425b      	negs	r3, r3
 8000936:	4690      	mov	r8, r2
 8000938:	1a1b      	subs	r3, r3, r0
 800093a:	2200      	movs	r2, #0
 800093c:	e77d      	b.n	800083a <__aeabi_fdiv+0x56>
 800093e:	23ff      	movs	r3, #255	; 0xff
 8000940:	2203      	movs	r2, #3
 8000942:	e77a      	b.n	800083a <__aeabi_fdiv+0x56>
 8000944:	000e      	movs	r6, r1
 8000946:	20ff      	movs	r0, #255	; 0xff
 8000948:	2500      	movs	r5, #0
 800094a:	e7ac      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 800094c:	2001      	movs	r0, #1
 800094e:	1ac0      	subs	r0, r0, r3
 8000950:	281b      	cmp	r0, #27
 8000952:	dca6      	bgt.n	80008a2 <__aeabi_fdiv+0xbe>
 8000954:	379e      	adds	r7, #158	; 0x9e
 8000956:	002a      	movs	r2, r5
 8000958:	40bd      	lsls	r5, r7
 800095a:	40c2      	lsrs	r2, r0
 800095c:	1e6b      	subs	r3, r5, #1
 800095e:	419d      	sbcs	r5, r3
 8000960:	4315      	orrs	r5, r2
 8000962:	076b      	lsls	r3, r5, #29
 8000964:	d004      	beq.n	8000970 <__aeabi_fdiv+0x18c>
 8000966:	230f      	movs	r3, #15
 8000968:	402b      	ands	r3, r5
 800096a:	2b04      	cmp	r3, #4
 800096c:	d000      	beq.n	8000970 <__aeabi_fdiv+0x18c>
 800096e:	3504      	adds	r5, #4
 8000970:	016b      	lsls	r3, r5, #5
 8000972:	d544      	bpl.n	80009fe <__aeabi_fdiv+0x21a>
 8000974:	2001      	movs	r0, #1
 8000976:	2500      	movs	r5, #0
 8000978:	e795      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 800097a:	20ff      	movs	r0, #255	; 0xff
 800097c:	2500      	movs	r5, #0
 800097e:	e792      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 8000980:	2580      	movs	r5, #128	; 0x80
 8000982:	2600      	movs	r6, #0
 8000984:	20ff      	movs	r0, #255	; 0xff
 8000986:	03ed      	lsls	r5, r5, #15
 8000988:	e78d      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 800098a:	2300      	movs	r3, #0
 800098c:	4698      	mov	r8, r3
 800098e:	2080      	movs	r0, #128	; 0x80
 8000990:	03c0      	lsls	r0, r0, #15
 8000992:	4205      	tst	r5, r0
 8000994:	d009      	beq.n	80009aa <__aeabi_fdiv+0x1c6>
 8000996:	4643      	mov	r3, r8
 8000998:	4203      	tst	r3, r0
 800099a:	d106      	bne.n	80009aa <__aeabi_fdiv+0x1c6>
 800099c:	4645      	mov	r5, r8
 800099e:	4305      	orrs	r5, r0
 80009a0:	026d      	lsls	r5, r5, #9
 80009a2:	0026      	movs	r6, r4
 80009a4:	20ff      	movs	r0, #255	; 0xff
 80009a6:	0a6d      	lsrs	r5, r5, #9
 80009a8:	e77d      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 80009aa:	2080      	movs	r0, #128	; 0x80
 80009ac:	03c0      	lsls	r0, r0, #15
 80009ae:	4305      	orrs	r5, r0
 80009b0:	026d      	lsls	r5, r5, #9
 80009b2:	20ff      	movs	r0, #255	; 0xff
 80009b4:	0a6d      	lsrs	r5, r5, #9
 80009b6:	e776      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 80009b8:	4642      	mov	r2, r8
 80009ba:	016b      	lsls	r3, r5, #5
 80009bc:	0150      	lsls	r0, r2, #5
 80009be:	4283      	cmp	r3, r0
 80009c0:	d219      	bcs.n	80009f6 <__aeabi_fdiv+0x212>
 80009c2:	221b      	movs	r2, #27
 80009c4:	2500      	movs	r5, #0
 80009c6:	3f01      	subs	r7, #1
 80009c8:	2601      	movs	r6, #1
 80009ca:	001c      	movs	r4, r3
 80009cc:	006d      	lsls	r5, r5, #1
 80009ce:	005b      	lsls	r3, r3, #1
 80009d0:	2c00      	cmp	r4, #0
 80009d2:	db01      	blt.n	80009d8 <__aeabi_fdiv+0x1f4>
 80009d4:	4298      	cmp	r0, r3
 80009d6:	d801      	bhi.n	80009dc <__aeabi_fdiv+0x1f8>
 80009d8:	1a1b      	subs	r3, r3, r0
 80009da:	4335      	orrs	r5, r6
 80009dc:	3a01      	subs	r2, #1
 80009de:	2a00      	cmp	r2, #0
 80009e0:	d1f3      	bne.n	80009ca <__aeabi_fdiv+0x1e6>
 80009e2:	1e5a      	subs	r2, r3, #1
 80009e4:	4193      	sbcs	r3, r2
 80009e6:	431d      	orrs	r5, r3
 80009e8:	003b      	movs	r3, r7
 80009ea:	337f      	adds	r3, #127	; 0x7f
 80009ec:	000e      	movs	r6, r1
 80009ee:	2b00      	cmp	r3, #0
 80009f0:	dd00      	ble.n	80009f4 <__aeabi_fdiv+0x210>
 80009f2:	e741      	b.n	8000878 <__aeabi_fdiv+0x94>
 80009f4:	e7aa      	b.n	800094c <__aeabi_fdiv+0x168>
 80009f6:	221a      	movs	r2, #26
 80009f8:	2501      	movs	r5, #1
 80009fa:	1a1b      	subs	r3, r3, r0
 80009fc:	e7e4      	b.n	80009c8 <__aeabi_fdiv+0x1e4>
 80009fe:	01ad      	lsls	r5, r5, #6
 8000a00:	2000      	movs	r0, #0
 8000a02:	0a6d      	lsrs	r5, r5, #9
 8000a04:	e74f      	b.n	80008a6 <__aeabi_fdiv+0xc2>
 8000a06:	46c0      	nop			; (mov r8, r8)
 8000a08:	080082a8 	.word	0x080082a8
 8000a0c:	f7ffffff 	.word	0xf7ffffff
 8000a10:	080082e8 	.word	0x080082e8

08000a14 <__aeabi_fmul>:
 8000a14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a16:	464f      	mov	r7, r9
 8000a18:	4646      	mov	r6, r8
 8000a1a:	46d6      	mov	lr, sl
 8000a1c:	0244      	lsls	r4, r0, #9
 8000a1e:	0045      	lsls	r5, r0, #1
 8000a20:	b5c0      	push	{r6, r7, lr}
 8000a22:	0a64      	lsrs	r4, r4, #9
 8000a24:	1c0f      	adds	r7, r1, #0
 8000a26:	0e2d      	lsrs	r5, r5, #24
 8000a28:	0fc6      	lsrs	r6, r0, #31
 8000a2a:	2d00      	cmp	r5, #0
 8000a2c:	d100      	bne.n	8000a30 <__aeabi_fmul+0x1c>
 8000a2e:	e08d      	b.n	8000b4c <__aeabi_fmul+0x138>
 8000a30:	2dff      	cmp	r5, #255	; 0xff
 8000a32:	d100      	bne.n	8000a36 <__aeabi_fmul+0x22>
 8000a34:	e092      	b.n	8000b5c <__aeabi_fmul+0x148>
 8000a36:	2300      	movs	r3, #0
 8000a38:	2080      	movs	r0, #128	; 0x80
 8000a3a:	4699      	mov	r9, r3
 8000a3c:	469a      	mov	sl, r3
 8000a3e:	00e4      	lsls	r4, r4, #3
 8000a40:	04c0      	lsls	r0, r0, #19
 8000a42:	4304      	orrs	r4, r0
 8000a44:	3d7f      	subs	r5, #127	; 0x7f
 8000a46:	0278      	lsls	r0, r7, #9
 8000a48:	0a43      	lsrs	r3, r0, #9
 8000a4a:	4698      	mov	r8, r3
 8000a4c:	007b      	lsls	r3, r7, #1
 8000a4e:	0e1b      	lsrs	r3, r3, #24
 8000a50:	0fff      	lsrs	r7, r7, #31
 8000a52:	2b00      	cmp	r3, #0
 8000a54:	d100      	bne.n	8000a58 <__aeabi_fmul+0x44>
 8000a56:	e070      	b.n	8000b3a <__aeabi_fmul+0x126>
 8000a58:	2bff      	cmp	r3, #255	; 0xff
 8000a5a:	d100      	bne.n	8000a5e <__aeabi_fmul+0x4a>
 8000a5c:	e086      	b.n	8000b6c <__aeabi_fmul+0x158>
 8000a5e:	4642      	mov	r2, r8
 8000a60:	00d0      	lsls	r0, r2, #3
 8000a62:	2280      	movs	r2, #128	; 0x80
 8000a64:	3b7f      	subs	r3, #127	; 0x7f
 8000a66:	18ed      	adds	r5, r5, r3
 8000a68:	2300      	movs	r3, #0
 8000a6a:	04d2      	lsls	r2, r2, #19
 8000a6c:	4302      	orrs	r2, r0
 8000a6e:	4690      	mov	r8, r2
 8000a70:	469c      	mov	ip, r3
 8000a72:	0031      	movs	r1, r6
 8000a74:	464b      	mov	r3, r9
 8000a76:	4079      	eors	r1, r7
 8000a78:	1c68      	adds	r0, r5, #1
 8000a7a:	2b0f      	cmp	r3, #15
 8000a7c:	d81c      	bhi.n	8000ab8 <__aeabi_fmul+0xa4>
 8000a7e:	4a76      	ldr	r2, [pc, #472]	; (8000c58 <__aeabi_fmul+0x244>)
 8000a80:	009b      	lsls	r3, r3, #2
 8000a82:	58d3      	ldr	r3, [r2, r3]
 8000a84:	469f      	mov	pc, r3
 8000a86:	0039      	movs	r1, r7
 8000a88:	4644      	mov	r4, r8
 8000a8a:	46e2      	mov	sl, ip
 8000a8c:	4653      	mov	r3, sl
 8000a8e:	2b02      	cmp	r3, #2
 8000a90:	d00f      	beq.n	8000ab2 <__aeabi_fmul+0x9e>
 8000a92:	2b03      	cmp	r3, #3
 8000a94:	d100      	bne.n	8000a98 <__aeabi_fmul+0x84>
 8000a96:	e0d7      	b.n	8000c48 <__aeabi_fmul+0x234>
 8000a98:	2b01      	cmp	r3, #1
 8000a9a:	d137      	bne.n	8000b0c <__aeabi_fmul+0xf8>
 8000a9c:	2000      	movs	r0, #0
 8000a9e:	2400      	movs	r4, #0
 8000aa0:	05c0      	lsls	r0, r0, #23
 8000aa2:	4320      	orrs	r0, r4
 8000aa4:	07c9      	lsls	r1, r1, #31
 8000aa6:	4308      	orrs	r0, r1
 8000aa8:	bce0      	pop	{r5, r6, r7}
 8000aaa:	46ba      	mov	sl, r7
 8000aac:	46b1      	mov	r9, r6
 8000aae:	46a8      	mov	r8, r5
 8000ab0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ab2:	20ff      	movs	r0, #255	; 0xff
 8000ab4:	2400      	movs	r4, #0
 8000ab6:	e7f3      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000ab8:	0c26      	lsrs	r6, r4, #16
 8000aba:	0424      	lsls	r4, r4, #16
 8000abc:	0c22      	lsrs	r2, r4, #16
 8000abe:	4644      	mov	r4, r8
 8000ac0:	0424      	lsls	r4, r4, #16
 8000ac2:	0c24      	lsrs	r4, r4, #16
 8000ac4:	4643      	mov	r3, r8
 8000ac6:	0027      	movs	r7, r4
 8000ac8:	0c1b      	lsrs	r3, r3, #16
 8000aca:	4357      	muls	r7, r2
 8000acc:	4374      	muls	r4, r6
 8000ace:	435a      	muls	r2, r3
 8000ad0:	435e      	muls	r6, r3
 8000ad2:	1912      	adds	r2, r2, r4
 8000ad4:	0c3b      	lsrs	r3, r7, #16
 8000ad6:	189b      	adds	r3, r3, r2
 8000ad8:	429c      	cmp	r4, r3
 8000ada:	d903      	bls.n	8000ae4 <__aeabi_fmul+0xd0>
 8000adc:	2280      	movs	r2, #128	; 0x80
 8000ade:	0252      	lsls	r2, r2, #9
 8000ae0:	4694      	mov	ip, r2
 8000ae2:	4466      	add	r6, ip
 8000ae4:	043f      	lsls	r7, r7, #16
 8000ae6:	041a      	lsls	r2, r3, #16
 8000ae8:	0c3f      	lsrs	r7, r7, #16
 8000aea:	19d2      	adds	r2, r2, r7
 8000aec:	0194      	lsls	r4, r2, #6
 8000aee:	1e67      	subs	r7, r4, #1
 8000af0:	41bc      	sbcs	r4, r7
 8000af2:	0c1b      	lsrs	r3, r3, #16
 8000af4:	0e92      	lsrs	r2, r2, #26
 8000af6:	199b      	adds	r3, r3, r6
 8000af8:	4314      	orrs	r4, r2
 8000afa:	019b      	lsls	r3, r3, #6
 8000afc:	431c      	orrs	r4, r3
 8000afe:	011b      	lsls	r3, r3, #4
 8000b00:	d400      	bmi.n	8000b04 <__aeabi_fmul+0xf0>
 8000b02:	e09b      	b.n	8000c3c <__aeabi_fmul+0x228>
 8000b04:	2301      	movs	r3, #1
 8000b06:	0862      	lsrs	r2, r4, #1
 8000b08:	401c      	ands	r4, r3
 8000b0a:	4314      	orrs	r4, r2
 8000b0c:	0002      	movs	r2, r0
 8000b0e:	327f      	adds	r2, #127	; 0x7f
 8000b10:	2a00      	cmp	r2, #0
 8000b12:	dd64      	ble.n	8000bde <__aeabi_fmul+0x1ca>
 8000b14:	0763      	lsls	r3, r4, #29
 8000b16:	d004      	beq.n	8000b22 <__aeabi_fmul+0x10e>
 8000b18:	230f      	movs	r3, #15
 8000b1a:	4023      	ands	r3, r4
 8000b1c:	2b04      	cmp	r3, #4
 8000b1e:	d000      	beq.n	8000b22 <__aeabi_fmul+0x10e>
 8000b20:	3404      	adds	r4, #4
 8000b22:	0123      	lsls	r3, r4, #4
 8000b24:	d503      	bpl.n	8000b2e <__aeabi_fmul+0x11a>
 8000b26:	0002      	movs	r2, r0
 8000b28:	4b4c      	ldr	r3, [pc, #304]	; (8000c5c <__aeabi_fmul+0x248>)
 8000b2a:	3280      	adds	r2, #128	; 0x80
 8000b2c:	401c      	ands	r4, r3
 8000b2e:	2afe      	cmp	r2, #254	; 0xfe
 8000b30:	dcbf      	bgt.n	8000ab2 <__aeabi_fmul+0x9e>
 8000b32:	01a4      	lsls	r4, r4, #6
 8000b34:	0a64      	lsrs	r4, r4, #9
 8000b36:	b2d0      	uxtb	r0, r2
 8000b38:	e7b2      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000b3a:	4643      	mov	r3, r8
 8000b3c:	2b00      	cmp	r3, #0
 8000b3e:	d13d      	bne.n	8000bbc <__aeabi_fmul+0x1a8>
 8000b40:	464a      	mov	r2, r9
 8000b42:	3301      	adds	r3, #1
 8000b44:	431a      	orrs	r2, r3
 8000b46:	4691      	mov	r9, r2
 8000b48:	469c      	mov	ip, r3
 8000b4a:	e792      	b.n	8000a72 <__aeabi_fmul+0x5e>
 8000b4c:	2c00      	cmp	r4, #0
 8000b4e:	d129      	bne.n	8000ba4 <__aeabi_fmul+0x190>
 8000b50:	2304      	movs	r3, #4
 8000b52:	4699      	mov	r9, r3
 8000b54:	3b03      	subs	r3, #3
 8000b56:	2500      	movs	r5, #0
 8000b58:	469a      	mov	sl, r3
 8000b5a:	e774      	b.n	8000a46 <__aeabi_fmul+0x32>
 8000b5c:	2c00      	cmp	r4, #0
 8000b5e:	d11b      	bne.n	8000b98 <__aeabi_fmul+0x184>
 8000b60:	2308      	movs	r3, #8
 8000b62:	4699      	mov	r9, r3
 8000b64:	3b06      	subs	r3, #6
 8000b66:	25ff      	movs	r5, #255	; 0xff
 8000b68:	469a      	mov	sl, r3
 8000b6a:	e76c      	b.n	8000a46 <__aeabi_fmul+0x32>
 8000b6c:	4643      	mov	r3, r8
 8000b6e:	35ff      	adds	r5, #255	; 0xff
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d10b      	bne.n	8000b8c <__aeabi_fmul+0x178>
 8000b74:	2302      	movs	r3, #2
 8000b76:	464a      	mov	r2, r9
 8000b78:	431a      	orrs	r2, r3
 8000b7a:	4691      	mov	r9, r2
 8000b7c:	469c      	mov	ip, r3
 8000b7e:	e778      	b.n	8000a72 <__aeabi_fmul+0x5e>
 8000b80:	4653      	mov	r3, sl
 8000b82:	0031      	movs	r1, r6
 8000b84:	2b02      	cmp	r3, #2
 8000b86:	d000      	beq.n	8000b8a <__aeabi_fmul+0x176>
 8000b88:	e783      	b.n	8000a92 <__aeabi_fmul+0x7e>
 8000b8a:	e792      	b.n	8000ab2 <__aeabi_fmul+0x9e>
 8000b8c:	2303      	movs	r3, #3
 8000b8e:	464a      	mov	r2, r9
 8000b90:	431a      	orrs	r2, r3
 8000b92:	4691      	mov	r9, r2
 8000b94:	469c      	mov	ip, r3
 8000b96:	e76c      	b.n	8000a72 <__aeabi_fmul+0x5e>
 8000b98:	230c      	movs	r3, #12
 8000b9a:	4699      	mov	r9, r3
 8000b9c:	3b09      	subs	r3, #9
 8000b9e:	25ff      	movs	r5, #255	; 0xff
 8000ba0:	469a      	mov	sl, r3
 8000ba2:	e750      	b.n	8000a46 <__aeabi_fmul+0x32>
 8000ba4:	0020      	movs	r0, r4
 8000ba6:	f002 f8e7 	bl	8002d78 <__clzsi2>
 8000baa:	2576      	movs	r5, #118	; 0x76
 8000bac:	1f43      	subs	r3, r0, #5
 8000bae:	409c      	lsls	r4, r3
 8000bb0:	2300      	movs	r3, #0
 8000bb2:	426d      	negs	r5, r5
 8000bb4:	4699      	mov	r9, r3
 8000bb6:	469a      	mov	sl, r3
 8000bb8:	1a2d      	subs	r5, r5, r0
 8000bba:	e744      	b.n	8000a46 <__aeabi_fmul+0x32>
 8000bbc:	4640      	mov	r0, r8
 8000bbe:	f002 f8db 	bl	8002d78 <__clzsi2>
 8000bc2:	4642      	mov	r2, r8
 8000bc4:	1f43      	subs	r3, r0, #5
 8000bc6:	409a      	lsls	r2, r3
 8000bc8:	2300      	movs	r3, #0
 8000bca:	1a2d      	subs	r5, r5, r0
 8000bcc:	4690      	mov	r8, r2
 8000bce:	469c      	mov	ip, r3
 8000bd0:	3d76      	subs	r5, #118	; 0x76
 8000bd2:	e74e      	b.n	8000a72 <__aeabi_fmul+0x5e>
 8000bd4:	2480      	movs	r4, #128	; 0x80
 8000bd6:	2100      	movs	r1, #0
 8000bd8:	20ff      	movs	r0, #255	; 0xff
 8000bda:	03e4      	lsls	r4, r4, #15
 8000bdc:	e760      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000bde:	2301      	movs	r3, #1
 8000be0:	1a9b      	subs	r3, r3, r2
 8000be2:	2b1b      	cmp	r3, #27
 8000be4:	dd00      	ble.n	8000be8 <__aeabi_fmul+0x1d4>
 8000be6:	e759      	b.n	8000a9c <__aeabi_fmul+0x88>
 8000be8:	0022      	movs	r2, r4
 8000bea:	309e      	adds	r0, #158	; 0x9e
 8000bec:	40da      	lsrs	r2, r3
 8000bee:	4084      	lsls	r4, r0
 8000bf0:	0013      	movs	r3, r2
 8000bf2:	1e62      	subs	r2, r4, #1
 8000bf4:	4194      	sbcs	r4, r2
 8000bf6:	431c      	orrs	r4, r3
 8000bf8:	0763      	lsls	r3, r4, #29
 8000bfa:	d004      	beq.n	8000c06 <__aeabi_fmul+0x1f2>
 8000bfc:	230f      	movs	r3, #15
 8000bfe:	4023      	ands	r3, r4
 8000c00:	2b04      	cmp	r3, #4
 8000c02:	d000      	beq.n	8000c06 <__aeabi_fmul+0x1f2>
 8000c04:	3404      	adds	r4, #4
 8000c06:	0163      	lsls	r3, r4, #5
 8000c08:	d51a      	bpl.n	8000c40 <__aeabi_fmul+0x22c>
 8000c0a:	2001      	movs	r0, #1
 8000c0c:	2400      	movs	r4, #0
 8000c0e:	e747      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000c10:	2080      	movs	r0, #128	; 0x80
 8000c12:	03c0      	lsls	r0, r0, #15
 8000c14:	4204      	tst	r4, r0
 8000c16:	d009      	beq.n	8000c2c <__aeabi_fmul+0x218>
 8000c18:	4643      	mov	r3, r8
 8000c1a:	4203      	tst	r3, r0
 8000c1c:	d106      	bne.n	8000c2c <__aeabi_fmul+0x218>
 8000c1e:	4644      	mov	r4, r8
 8000c20:	4304      	orrs	r4, r0
 8000c22:	0264      	lsls	r4, r4, #9
 8000c24:	0039      	movs	r1, r7
 8000c26:	20ff      	movs	r0, #255	; 0xff
 8000c28:	0a64      	lsrs	r4, r4, #9
 8000c2a:	e739      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000c2c:	2080      	movs	r0, #128	; 0x80
 8000c2e:	03c0      	lsls	r0, r0, #15
 8000c30:	4304      	orrs	r4, r0
 8000c32:	0264      	lsls	r4, r4, #9
 8000c34:	0031      	movs	r1, r6
 8000c36:	20ff      	movs	r0, #255	; 0xff
 8000c38:	0a64      	lsrs	r4, r4, #9
 8000c3a:	e731      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000c3c:	0028      	movs	r0, r5
 8000c3e:	e765      	b.n	8000b0c <__aeabi_fmul+0xf8>
 8000c40:	01a4      	lsls	r4, r4, #6
 8000c42:	2000      	movs	r0, #0
 8000c44:	0a64      	lsrs	r4, r4, #9
 8000c46:	e72b      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000c48:	2080      	movs	r0, #128	; 0x80
 8000c4a:	03c0      	lsls	r0, r0, #15
 8000c4c:	4304      	orrs	r4, r0
 8000c4e:	0264      	lsls	r4, r4, #9
 8000c50:	20ff      	movs	r0, #255	; 0xff
 8000c52:	0a64      	lsrs	r4, r4, #9
 8000c54:	e724      	b.n	8000aa0 <__aeabi_fmul+0x8c>
 8000c56:	46c0      	nop			; (mov r8, r8)
 8000c58:	08008328 	.word	0x08008328
 8000c5c:	f7ffffff 	.word	0xf7ffffff

08000c60 <__aeabi_fsub>:
 8000c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c62:	46ce      	mov	lr, r9
 8000c64:	4647      	mov	r7, r8
 8000c66:	0243      	lsls	r3, r0, #9
 8000c68:	0a5b      	lsrs	r3, r3, #9
 8000c6a:	024e      	lsls	r6, r1, #9
 8000c6c:	00da      	lsls	r2, r3, #3
 8000c6e:	4694      	mov	ip, r2
 8000c70:	0a72      	lsrs	r2, r6, #9
 8000c72:	4691      	mov	r9, r2
 8000c74:	0045      	lsls	r5, r0, #1
 8000c76:	004a      	lsls	r2, r1, #1
 8000c78:	b580      	push	{r7, lr}
 8000c7a:	0e2d      	lsrs	r5, r5, #24
 8000c7c:	001f      	movs	r7, r3
 8000c7e:	0fc4      	lsrs	r4, r0, #31
 8000c80:	0e12      	lsrs	r2, r2, #24
 8000c82:	0fc9      	lsrs	r1, r1, #31
 8000c84:	09b6      	lsrs	r6, r6, #6
 8000c86:	2aff      	cmp	r2, #255	; 0xff
 8000c88:	d05b      	beq.n	8000d42 <__aeabi_fsub+0xe2>
 8000c8a:	2001      	movs	r0, #1
 8000c8c:	4041      	eors	r1, r0
 8000c8e:	428c      	cmp	r4, r1
 8000c90:	d039      	beq.n	8000d06 <__aeabi_fsub+0xa6>
 8000c92:	1aa8      	subs	r0, r5, r2
 8000c94:	2800      	cmp	r0, #0
 8000c96:	dd5a      	ble.n	8000d4e <__aeabi_fsub+0xee>
 8000c98:	2a00      	cmp	r2, #0
 8000c9a:	d06a      	beq.n	8000d72 <__aeabi_fsub+0x112>
 8000c9c:	2dff      	cmp	r5, #255	; 0xff
 8000c9e:	d100      	bne.n	8000ca2 <__aeabi_fsub+0x42>
 8000ca0:	e0d9      	b.n	8000e56 <__aeabi_fsub+0x1f6>
 8000ca2:	2280      	movs	r2, #128	; 0x80
 8000ca4:	04d2      	lsls	r2, r2, #19
 8000ca6:	4316      	orrs	r6, r2
 8000ca8:	281b      	cmp	r0, #27
 8000caa:	dc00      	bgt.n	8000cae <__aeabi_fsub+0x4e>
 8000cac:	e0e9      	b.n	8000e82 <__aeabi_fsub+0x222>
 8000cae:	2001      	movs	r0, #1
 8000cb0:	4663      	mov	r3, ip
 8000cb2:	1a18      	subs	r0, r3, r0
 8000cb4:	0143      	lsls	r3, r0, #5
 8000cb6:	d400      	bmi.n	8000cba <__aeabi_fsub+0x5a>
 8000cb8:	e0b4      	b.n	8000e24 <__aeabi_fsub+0x1c4>
 8000cba:	0180      	lsls	r0, r0, #6
 8000cbc:	0987      	lsrs	r7, r0, #6
 8000cbe:	0038      	movs	r0, r7
 8000cc0:	f002 f85a 	bl	8002d78 <__clzsi2>
 8000cc4:	3805      	subs	r0, #5
 8000cc6:	4087      	lsls	r7, r0
 8000cc8:	4285      	cmp	r5, r0
 8000cca:	dc00      	bgt.n	8000cce <__aeabi_fsub+0x6e>
 8000ccc:	e0cc      	b.n	8000e68 <__aeabi_fsub+0x208>
 8000cce:	1a2d      	subs	r5, r5, r0
 8000cd0:	48b5      	ldr	r0, [pc, #724]	; (8000fa8 <__aeabi_fsub+0x348>)
 8000cd2:	4038      	ands	r0, r7
 8000cd4:	0743      	lsls	r3, r0, #29
 8000cd6:	d004      	beq.n	8000ce2 <__aeabi_fsub+0x82>
 8000cd8:	230f      	movs	r3, #15
 8000cda:	4003      	ands	r3, r0
 8000cdc:	2b04      	cmp	r3, #4
 8000cde:	d000      	beq.n	8000ce2 <__aeabi_fsub+0x82>
 8000ce0:	3004      	adds	r0, #4
 8000ce2:	0143      	lsls	r3, r0, #5
 8000ce4:	d400      	bmi.n	8000ce8 <__aeabi_fsub+0x88>
 8000ce6:	e0a0      	b.n	8000e2a <__aeabi_fsub+0x1ca>
 8000ce8:	1c6a      	adds	r2, r5, #1
 8000cea:	2dfe      	cmp	r5, #254	; 0xfe
 8000cec:	d100      	bne.n	8000cf0 <__aeabi_fsub+0x90>
 8000cee:	e08d      	b.n	8000e0c <__aeabi_fsub+0x1ac>
 8000cf0:	0180      	lsls	r0, r0, #6
 8000cf2:	0a47      	lsrs	r7, r0, #9
 8000cf4:	b2d2      	uxtb	r2, r2
 8000cf6:	05d0      	lsls	r0, r2, #23
 8000cf8:	4338      	orrs	r0, r7
 8000cfa:	07e4      	lsls	r4, r4, #31
 8000cfc:	4320      	orrs	r0, r4
 8000cfe:	bcc0      	pop	{r6, r7}
 8000d00:	46b9      	mov	r9, r7
 8000d02:	46b0      	mov	r8, r6
 8000d04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d06:	1aa8      	subs	r0, r5, r2
 8000d08:	4680      	mov	r8, r0
 8000d0a:	2800      	cmp	r0, #0
 8000d0c:	dd45      	ble.n	8000d9a <__aeabi_fsub+0x13a>
 8000d0e:	2a00      	cmp	r2, #0
 8000d10:	d070      	beq.n	8000df4 <__aeabi_fsub+0x194>
 8000d12:	2dff      	cmp	r5, #255	; 0xff
 8000d14:	d100      	bne.n	8000d18 <__aeabi_fsub+0xb8>
 8000d16:	e09e      	b.n	8000e56 <__aeabi_fsub+0x1f6>
 8000d18:	2380      	movs	r3, #128	; 0x80
 8000d1a:	04db      	lsls	r3, r3, #19
 8000d1c:	431e      	orrs	r6, r3
 8000d1e:	4643      	mov	r3, r8
 8000d20:	2b1b      	cmp	r3, #27
 8000d22:	dc00      	bgt.n	8000d26 <__aeabi_fsub+0xc6>
 8000d24:	e0d2      	b.n	8000ecc <__aeabi_fsub+0x26c>
 8000d26:	2001      	movs	r0, #1
 8000d28:	4460      	add	r0, ip
 8000d2a:	0143      	lsls	r3, r0, #5
 8000d2c:	d57a      	bpl.n	8000e24 <__aeabi_fsub+0x1c4>
 8000d2e:	3501      	adds	r5, #1
 8000d30:	2dff      	cmp	r5, #255	; 0xff
 8000d32:	d06b      	beq.n	8000e0c <__aeabi_fsub+0x1ac>
 8000d34:	2301      	movs	r3, #1
 8000d36:	4a9d      	ldr	r2, [pc, #628]	; (8000fac <__aeabi_fsub+0x34c>)
 8000d38:	4003      	ands	r3, r0
 8000d3a:	0840      	lsrs	r0, r0, #1
 8000d3c:	4010      	ands	r0, r2
 8000d3e:	4318      	orrs	r0, r3
 8000d40:	e7c8      	b.n	8000cd4 <__aeabi_fsub+0x74>
 8000d42:	2e00      	cmp	r6, #0
 8000d44:	d020      	beq.n	8000d88 <__aeabi_fsub+0x128>
 8000d46:	428c      	cmp	r4, r1
 8000d48:	d023      	beq.n	8000d92 <__aeabi_fsub+0x132>
 8000d4a:	0028      	movs	r0, r5
 8000d4c:	38ff      	subs	r0, #255	; 0xff
 8000d4e:	2800      	cmp	r0, #0
 8000d50:	d039      	beq.n	8000dc6 <__aeabi_fsub+0x166>
 8000d52:	1b57      	subs	r7, r2, r5
 8000d54:	2d00      	cmp	r5, #0
 8000d56:	d000      	beq.n	8000d5a <__aeabi_fsub+0xfa>
 8000d58:	e09d      	b.n	8000e96 <__aeabi_fsub+0x236>
 8000d5a:	4663      	mov	r3, ip
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	d100      	bne.n	8000d62 <__aeabi_fsub+0x102>
 8000d60:	e0db      	b.n	8000f1a <__aeabi_fsub+0x2ba>
 8000d62:	1e7b      	subs	r3, r7, #1
 8000d64:	2f01      	cmp	r7, #1
 8000d66:	d100      	bne.n	8000d6a <__aeabi_fsub+0x10a>
 8000d68:	e10d      	b.n	8000f86 <__aeabi_fsub+0x326>
 8000d6a:	2fff      	cmp	r7, #255	; 0xff
 8000d6c:	d071      	beq.n	8000e52 <__aeabi_fsub+0x1f2>
 8000d6e:	001f      	movs	r7, r3
 8000d70:	e098      	b.n	8000ea4 <__aeabi_fsub+0x244>
 8000d72:	2e00      	cmp	r6, #0
 8000d74:	d100      	bne.n	8000d78 <__aeabi_fsub+0x118>
 8000d76:	e0a7      	b.n	8000ec8 <__aeabi_fsub+0x268>
 8000d78:	1e42      	subs	r2, r0, #1
 8000d7a:	2801      	cmp	r0, #1
 8000d7c:	d100      	bne.n	8000d80 <__aeabi_fsub+0x120>
 8000d7e:	e0e6      	b.n	8000f4e <__aeabi_fsub+0x2ee>
 8000d80:	28ff      	cmp	r0, #255	; 0xff
 8000d82:	d068      	beq.n	8000e56 <__aeabi_fsub+0x1f6>
 8000d84:	0010      	movs	r0, r2
 8000d86:	e78f      	b.n	8000ca8 <__aeabi_fsub+0x48>
 8000d88:	2001      	movs	r0, #1
 8000d8a:	4041      	eors	r1, r0
 8000d8c:	42a1      	cmp	r1, r4
 8000d8e:	d000      	beq.n	8000d92 <__aeabi_fsub+0x132>
 8000d90:	e77f      	b.n	8000c92 <__aeabi_fsub+0x32>
 8000d92:	20ff      	movs	r0, #255	; 0xff
 8000d94:	4240      	negs	r0, r0
 8000d96:	4680      	mov	r8, r0
 8000d98:	44a8      	add	r8, r5
 8000d9a:	4640      	mov	r0, r8
 8000d9c:	2800      	cmp	r0, #0
 8000d9e:	d038      	beq.n	8000e12 <__aeabi_fsub+0x1b2>
 8000da0:	1b51      	subs	r1, r2, r5
 8000da2:	2d00      	cmp	r5, #0
 8000da4:	d100      	bne.n	8000da8 <__aeabi_fsub+0x148>
 8000da6:	e0ae      	b.n	8000f06 <__aeabi_fsub+0x2a6>
 8000da8:	2aff      	cmp	r2, #255	; 0xff
 8000daa:	d100      	bne.n	8000dae <__aeabi_fsub+0x14e>
 8000dac:	e0df      	b.n	8000f6e <__aeabi_fsub+0x30e>
 8000dae:	2380      	movs	r3, #128	; 0x80
 8000db0:	4660      	mov	r0, ip
 8000db2:	04db      	lsls	r3, r3, #19
 8000db4:	4318      	orrs	r0, r3
 8000db6:	4684      	mov	ip, r0
 8000db8:	291b      	cmp	r1, #27
 8000dba:	dc00      	bgt.n	8000dbe <__aeabi_fsub+0x15e>
 8000dbc:	e0d9      	b.n	8000f72 <__aeabi_fsub+0x312>
 8000dbe:	2001      	movs	r0, #1
 8000dc0:	0015      	movs	r5, r2
 8000dc2:	1980      	adds	r0, r0, r6
 8000dc4:	e7b1      	b.n	8000d2a <__aeabi_fsub+0xca>
 8000dc6:	20fe      	movs	r0, #254	; 0xfe
 8000dc8:	1c6a      	adds	r2, r5, #1
 8000dca:	4210      	tst	r0, r2
 8000dcc:	d171      	bne.n	8000eb2 <__aeabi_fsub+0x252>
 8000dce:	2d00      	cmp	r5, #0
 8000dd0:	d000      	beq.n	8000dd4 <__aeabi_fsub+0x174>
 8000dd2:	e0a6      	b.n	8000f22 <__aeabi_fsub+0x2c2>
 8000dd4:	4663      	mov	r3, ip
 8000dd6:	2b00      	cmp	r3, #0
 8000dd8:	d100      	bne.n	8000ddc <__aeabi_fsub+0x17c>
 8000dda:	e0d9      	b.n	8000f90 <__aeabi_fsub+0x330>
 8000ddc:	2200      	movs	r2, #0
 8000dde:	2e00      	cmp	r6, #0
 8000de0:	d100      	bne.n	8000de4 <__aeabi_fsub+0x184>
 8000de2:	e788      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000de4:	1b98      	subs	r0, r3, r6
 8000de6:	0143      	lsls	r3, r0, #5
 8000de8:	d400      	bmi.n	8000dec <__aeabi_fsub+0x18c>
 8000dea:	e0e1      	b.n	8000fb0 <__aeabi_fsub+0x350>
 8000dec:	4663      	mov	r3, ip
 8000dee:	000c      	movs	r4, r1
 8000df0:	1af0      	subs	r0, r6, r3
 8000df2:	e76f      	b.n	8000cd4 <__aeabi_fsub+0x74>
 8000df4:	2e00      	cmp	r6, #0
 8000df6:	d100      	bne.n	8000dfa <__aeabi_fsub+0x19a>
 8000df8:	e0b7      	b.n	8000f6a <__aeabi_fsub+0x30a>
 8000dfa:	0002      	movs	r2, r0
 8000dfc:	3a01      	subs	r2, #1
 8000dfe:	2801      	cmp	r0, #1
 8000e00:	d100      	bne.n	8000e04 <__aeabi_fsub+0x1a4>
 8000e02:	e09c      	b.n	8000f3e <__aeabi_fsub+0x2de>
 8000e04:	28ff      	cmp	r0, #255	; 0xff
 8000e06:	d026      	beq.n	8000e56 <__aeabi_fsub+0x1f6>
 8000e08:	4690      	mov	r8, r2
 8000e0a:	e788      	b.n	8000d1e <__aeabi_fsub+0xbe>
 8000e0c:	22ff      	movs	r2, #255	; 0xff
 8000e0e:	2700      	movs	r7, #0
 8000e10:	e771      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000e12:	20fe      	movs	r0, #254	; 0xfe
 8000e14:	1c6a      	adds	r2, r5, #1
 8000e16:	4210      	tst	r0, r2
 8000e18:	d064      	beq.n	8000ee4 <__aeabi_fsub+0x284>
 8000e1a:	2aff      	cmp	r2, #255	; 0xff
 8000e1c:	d0f6      	beq.n	8000e0c <__aeabi_fsub+0x1ac>
 8000e1e:	0015      	movs	r5, r2
 8000e20:	4466      	add	r6, ip
 8000e22:	0870      	lsrs	r0, r6, #1
 8000e24:	0743      	lsls	r3, r0, #29
 8000e26:	d000      	beq.n	8000e2a <__aeabi_fsub+0x1ca>
 8000e28:	e756      	b.n	8000cd8 <__aeabi_fsub+0x78>
 8000e2a:	08c3      	lsrs	r3, r0, #3
 8000e2c:	2dff      	cmp	r5, #255	; 0xff
 8000e2e:	d012      	beq.n	8000e56 <__aeabi_fsub+0x1f6>
 8000e30:	025b      	lsls	r3, r3, #9
 8000e32:	0a5f      	lsrs	r7, r3, #9
 8000e34:	b2ea      	uxtb	r2, r5
 8000e36:	e75e      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000e38:	4662      	mov	r2, ip
 8000e3a:	2a00      	cmp	r2, #0
 8000e3c:	d100      	bne.n	8000e40 <__aeabi_fsub+0x1e0>
 8000e3e:	e096      	b.n	8000f6e <__aeabi_fsub+0x30e>
 8000e40:	2e00      	cmp	r6, #0
 8000e42:	d008      	beq.n	8000e56 <__aeabi_fsub+0x1f6>
 8000e44:	2280      	movs	r2, #128	; 0x80
 8000e46:	03d2      	lsls	r2, r2, #15
 8000e48:	4213      	tst	r3, r2
 8000e4a:	d004      	beq.n	8000e56 <__aeabi_fsub+0x1f6>
 8000e4c:	4648      	mov	r0, r9
 8000e4e:	4210      	tst	r0, r2
 8000e50:	d101      	bne.n	8000e56 <__aeabi_fsub+0x1f6>
 8000e52:	000c      	movs	r4, r1
 8000e54:	464b      	mov	r3, r9
 8000e56:	2b00      	cmp	r3, #0
 8000e58:	d0d8      	beq.n	8000e0c <__aeabi_fsub+0x1ac>
 8000e5a:	2780      	movs	r7, #128	; 0x80
 8000e5c:	03ff      	lsls	r7, r7, #15
 8000e5e:	431f      	orrs	r7, r3
 8000e60:	027f      	lsls	r7, r7, #9
 8000e62:	22ff      	movs	r2, #255	; 0xff
 8000e64:	0a7f      	lsrs	r7, r7, #9
 8000e66:	e746      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000e68:	2320      	movs	r3, #32
 8000e6a:	003a      	movs	r2, r7
 8000e6c:	1b45      	subs	r5, r0, r5
 8000e6e:	0038      	movs	r0, r7
 8000e70:	3501      	adds	r5, #1
 8000e72:	40ea      	lsrs	r2, r5
 8000e74:	1b5d      	subs	r5, r3, r5
 8000e76:	40a8      	lsls	r0, r5
 8000e78:	1e43      	subs	r3, r0, #1
 8000e7a:	4198      	sbcs	r0, r3
 8000e7c:	2500      	movs	r5, #0
 8000e7e:	4310      	orrs	r0, r2
 8000e80:	e728      	b.n	8000cd4 <__aeabi_fsub+0x74>
 8000e82:	2320      	movs	r3, #32
 8000e84:	1a1b      	subs	r3, r3, r0
 8000e86:	0032      	movs	r2, r6
 8000e88:	409e      	lsls	r6, r3
 8000e8a:	40c2      	lsrs	r2, r0
 8000e8c:	0030      	movs	r0, r6
 8000e8e:	1e43      	subs	r3, r0, #1
 8000e90:	4198      	sbcs	r0, r3
 8000e92:	4310      	orrs	r0, r2
 8000e94:	e70c      	b.n	8000cb0 <__aeabi_fsub+0x50>
 8000e96:	2aff      	cmp	r2, #255	; 0xff
 8000e98:	d0db      	beq.n	8000e52 <__aeabi_fsub+0x1f2>
 8000e9a:	2380      	movs	r3, #128	; 0x80
 8000e9c:	4660      	mov	r0, ip
 8000e9e:	04db      	lsls	r3, r3, #19
 8000ea0:	4318      	orrs	r0, r3
 8000ea2:	4684      	mov	ip, r0
 8000ea4:	2f1b      	cmp	r7, #27
 8000ea6:	dd56      	ble.n	8000f56 <__aeabi_fsub+0x2f6>
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	000c      	movs	r4, r1
 8000eac:	0015      	movs	r5, r2
 8000eae:	1a30      	subs	r0, r6, r0
 8000eb0:	e700      	b.n	8000cb4 <__aeabi_fsub+0x54>
 8000eb2:	4663      	mov	r3, ip
 8000eb4:	1b9f      	subs	r7, r3, r6
 8000eb6:	017b      	lsls	r3, r7, #5
 8000eb8:	d43d      	bmi.n	8000f36 <__aeabi_fsub+0x2d6>
 8000eba:	2f00      	cmp	r7, #0
 8000ebc:	d000      	beq.n	8000ec0 <__aeabi_fsub+0x260>
 8000ebe:	e6fe      	b.n	8000cbe <__aeabi_fsub+0x5e>
 8000ec0:	2400      	movs	r4, #0
 8000ec2:	2200      	movs	r2, #0
 8000ec4:	2700      	movs	r7, #0
 8000ec6:	e716      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000ec8:	0005      	movs	r5, r0
 8000eca:	e7af      	b.n	8000e2c <__aeabi_fsub+0x1cc>
 8000ecc:	0032      	movs	r2, r6
 8000ece:	4643      	mov	r3, r8
 8000ed0:	4641      	mov	r1, r8
 8000ed2:	40da      	lsrs	r2, r3
 8000ed4:	2320      	movs	r3, #32
 8000ed6:	1a5b      	subs	r3, r3, r1
 8000ed8:	409e      	lsls	r6, r3
 8000eda:	0030      	movs	r0, r6
 8000edc:	1e43      	subs	r3, r0, #1
 8000ede:	4198      	sbcs	r0, r3
 8000ee0:	4310      	orrs	r0, r2
 8000ee2:	e721      	b.n	8000d28 <__aeabi_fsub+0xc8>
 8000ee4:	2d00      	cmp	r5, #0
 8000ee6:	d1a7      	bne.n	8000e38 <__aeabi_fsub+0x1d8>
 8000ee8:	4663      	mov	r3, ip
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	d059      	beq.n	8000fa2 <__aeabi_fsub+0x342>
 8000eee:	2200      	movs	r2, #0
 8000ef0:	2e00      	cmp	r6, #0
 8000ef2:	d100      	bne.n	8000ef6 <__aeabi_fsub+0x296>
 8000ef4:	e6ff      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000ef6:	0030      	movs	r0, r6
 8000ef8:	4460      	add	r0, ip
 8000efa:	0143      	lsls	r3, r0, #5
 8000efc:	d592      	bpl.n	8000e24 <__aeabi_fsub+0x1c4>
 8000efe:	4b2a      	ldr	r3, [pc, #168]	; (8000fa8 <__aeabi_fsub+0x348>)
 8000f00:	3501      	adds	r5, #1
 8000f02:	4018      	ands	r0, r3
 8000f04:	e78e      	b.n	8000e24 <__aeabi_fsub+0x1c4>
 8000f06:	4663      	mov	r3, ip
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d047      	beq.n	8000f9c <__aeabi_fsub+0x33c>
 8000f0c:	1e4b      	subs	r3, r1, #1
 8000f0e:	2901      	cmp	r1, #1
 8000f10:	d015      	beq.n	8000f3e <__aeabi_fsub+0x2de>
 8000f12:	29ff      	cmp	r1, #255	; 0xff
 8000f14:	d02b      	beq.n	8000f6e <__aeabi_fsub+0x30e>
 8000f16:	0019      	movs	r1, r3
 8000f18:	e74e      	b.n	8000db8 <__aeabi_fsub+0x158>
 8000f1a:	000c      	movs	r4, r1
 8000f1c:	464b      	mov	r3, r9
 8000f1e:	003d      	movs	r5, r7
 8000f20:	e784      	b.n	8000e2c <__aeabi_fsub+0x1cc>
 8000f22:	4662      	mov	r2, ip
 8000f24:	2a00      	cmp	r2, #0
 8000f26:	d18b      	bne.n	8000e40 <__aeabi_fsub+0x1e0>
 8000f28:	2e00      	cmp	r6, #0
 8000f2a:	d192      	bne.n	8000e52 <__aeabi_fsub+0x1f2>
 8000f2c:	2780      	movs	r7, #128	; 0x80
 8000f2e:	2400      	movs	r4, #0
 8000f30:	22ff      	movs	r2, #255	; 0xff
 8000f32:	03ff      	lsls	r7, r7, #15
 8000f34:	e6df      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000f36:	4663      	mov	r3, ip
 8000f38:	000c      	movs	r4, r1
 8000f3a:	1af7      	subs	r7, r6, r3
 8000f3c:	e6bf      	b.n	8000cbe <__aeabi_fsub+0x5e>
 8000f3e:	0030      	movs	r0, r6
 8000f40:	4460      	add	r0, ip
 8000f42:	2501      	movs	r5, #1
 8000f44:	0143      	lsls	r3, r0, #5
 8000f46:	d400      	bmi.n	8000f4a <__aeabi_fsub+0x2ea>
 8000f48:	e76c      	b.n	8000e24 <__aeabi_fsub+0x1c4>
 8000f4a:	2502      	movs	r5, #2
 8000f4c:	e6f2      	b.n	8000d34 <__aeabi_fsub+0xd4>
 8000f4e:	4663      	mov	r3, ip
 8000f50:	2501      	movs	r5, #1
 8000f52:	1b98      	subs	r0, r3, r6
 8000f54:	e6ae      	b.n	8000cb4 <__aeabi_fsub+0x54>
 8000f56:	2320      	movs	r3, #32
 8000f58:	4664      	mov	r4, ip
 8000f5a:	4660      	mov	r0, ip
 8000f5c:	40fc      	lsrs	r4, r7
 8000f5e:	1bdf      	subs	r7, r3, r7
 8000f60:	40b8      	lsls	r0, r7
 8000f62:	1e43      	subs	r3, r0, #1
 8000f64:	4198      	sbcs	r0, r3
 8000f66:	4320      	orrs	r0, r4
 8000f68:	e79f      	b.n	8000eaa <__aeabi_fsub+0x24a>
 8000f6a:	0005      	movs	r5, r0
 8000f6c:	e75e      	b.n	8000e2c <__aeabi_fsub+0x1cc>
 8000f6e:	464b      	mov	r3, r9
 8000f70:	e771      	b.n	8000e56 <__aeabi_fsub+0x1f6>
 8000f72:	2320      	movs	r3, #32
 8000f74:	4665      	mov	r5, ip
 8000f76:	4660      	mov	r0, ip
 8000f78:	40cd      	lsrs	r5, r1
 8000f7a:	1a59      	subs	r1, r3, r1
 8000f7c:	4088      	lsls	r0, r1
 8000f7e:	1e43      	subs	r3, r0, #1
 8000f80:	4198      	sbcs	r0, r3
 8000f82:	4328      	orrs	r0, r5
 8000f84:	e71c      	b.n	8000dc0 <__aeabi_fsub+0x160>
 8000f86:	4663      	mov	r3, ip
 8000f88:	000c      	movs	r4, r1
 8000f8a:	2501      	movs	r5, #1
 8000f8c:	1af0      	subs	r0, r6, r3
 8000f8e:	e691      	b.n	8000cb4 <__aeabi_fsub+0x54>
 8000f90:	2e00      	cmp	r6, #0
 8000f92:	d095      	beq.n	8000ec0 <__aeabi_fsub+0x260>
 8000f94:	000c      	movs	r4, r1
 8000f96:	464f      	mov	r7, r9
 8000f98:	2200      	movs	r2, #0
 8000f9a:	e6ac      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000f9c:	464b      	mov	r3, r9
 8000f9e:	000d      	movs	r5, r1
 8000fa0:	e744      	b.n	8000e2c <__aeabi_fsub+0x1cc>
 8000fa2:	464f      	mov	r7, r9
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	e6a6      	b.n	8000cf6 <__aeabi_fsub+0x96>
 8000fa8:	fbffffff 	.word	0xfbffffff
 8000fac:	7dffffff 	.word	0x7dffffff
 8000fb0:	2800      	cmp	r0, #0
 8000fb2:	d000      	beq.n	8000fb6 <__aeabi_fsub+0x356>
 8000fb4:	e736      	b.n	8000e24 <__aeabi_fsub+0x1c4>
 8000fb6:	2400      	movs	r4, #0
 8000fb8:	2700      	movs	r7, #0
 8000fba:	e69c      	b.n	8000cf6 <__aeabi_fsub+0x96>

08000fbc <__aeabi_f2iz>:
 8000fbc:	0241      	lsls	r1, r0, #9
 8000fbe:	0042      	lsls	r2, r0, #1
 8000fc0:	0fc3      	lsrs	r3, r0, #31
 8000fc2:	0a49      	lsrs	r1, r1, #9
 8000fc4:	2000      	movs	r0, #0
 8000fc6:	0e12      	lsrs	r2, r2, #24
 8000fc8:	2a7e      	cmp	r2, #126	; 0x7e
 8000fca:	dd03      	ble.n	8000fd4 <__aeabi_f2iz+0x18>
 8000fcc:	2a9d      	cmp	r2, #157	; 0x9d
 8000fce:	dd02      	ble.n	8000fd6 <__aeabi_f2iz+0x1a>
 8000fd0:	4a09      	ldr	r2, [pc, #36]	; (8000ff8 <__aeabi_f2iz+0x3c>)
 8000fd2:	1898      	adds	r0, r3, r2
 8000fd4:	4770      	bx	lr
 8000fd6:	2080      	movs	r0, #128	; 0x80
 8000fd8:	0400      	lsls	r0, r0, #16
 8000fda:	4301      	orrs	r1, r0
 8000fdc:	2a95      	cmp	r2, #149	; 0x95
 8000fde:	dc07      	bgt.n	8000ff0 <__aeabi_f2iz+0x34>
 8000fe0:	2096      	movs	r0, #150	; 0x96
 8000fe2:	1a82      	subs	r2, r0, r2
 8000fe4:	40d1      	lsrs	r1, r2
 8000fe6:	4248      	negs	r0, r1
 8000fe8:	2b00      	cmp	r3, #0
 8000fea:	d1f3      	bne.n	8000fd4 <__aeabi_f2iz+0x18>
 8000fec:	0008      	movs	r0, r1
 8000fee:	e7f1      	b.n	8000fd4 <__aeabi_f2iz+0x18>
 8000ff0:	3a96      	subs	r2, #150	; 0x96
 8000ff2:	4091      	lsls	r1, r2
 8000ff4:	e7f7      	b.n	8000fe6 <__aeabi_f2iz+0x2a>
 8000ff6:	46c0      	nop			; (mov r8, r8)
 8000ff8:	7fffffff 	.word	0x7fffffff

08000ffc <__aeabi_i2f>:
 8000ffc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ffe:	2800      	cmp	r0, #0
 8001000:	d013      	beq.n	800102a <__aeabi_i2f+0x2e>
 8001002:	17c3      	asrs	r3, r0, #31
 8001004:	18c6      	adds	r6, r0, r3
 8001006:	405e      	eors	r6, r3
 8001008:	0fc4      	lsrs	r4, r0, #31
 800100a:	0030      	movs	r0, r6
 800100c:	f001 feb4 	bl	8002d78 <__clzsi2>
 8001010:	239e      	movs	r3, #158	; 0x9e
 8001012:	0005      	movs	r5, r0
 8001014:	1a1b      	subs	r3, r3, r0
 8001016:	2b96      	cmp	r3, #150	; 0x96
 8001018:	dc0f      	bgt.n	800103a <__aeabi_i2f+0x3e>
 800101a:	2808      	cmp	r0, #8
 800101c:	dd01      	ble.n	8001022 <__aeabi_i2f+0x26>
 800101e:	3d08      	subs	r5, #8
 8001020:	40ae      	lsls	r6, r5
 8001022:	0276      	lsls	r6, r6, #9
 8001024:	0a76      	lsrs	r6, r6, #9
 8001026:	b2d8      	uxtb	r0, r3
 8001028:	e002      	b.n	8001030 <__aeabi_i2f+0x34>
 800102a:	2400      	movs	r4, #0
 800102c:	2000      	movs	r0, #0
 800102e:	2600      	movs	r6, #0
 8001030:	05c0      	lsls	r0, r0, #23
 8001032:	4330      	orrs	r0, r6
 8001034:	07e4      	lsls	r4, r4, #31
 8001036:	4320      	orrs	r0, r4
 8001038:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800103a:	2b99      	cmp	r3, #153	; 0x99
 800103c:	dd0c      	ble.n	8001058 <__aeabi_i2f+0x5c>
 800103e:	2205      	movs	r2, #5
 8001040:	0031      	movs	r1, r6
 8001042:	1a12      	subs	r2, r2, r0
 8001044:	40d1      	lsrs	r1, r2
 8001046:	000a      	movs	r2, r1
 8001048:	0001      	movs	r1, r0
 800104a:	0030      	movs	r0, r6
 800104c:	311b      	adds	r1, #27
 800104e:	4088      	lsls	r0, r1
 8001050:	1e41      	subs	r1, r0, #1
 8001052:	4188      	sbcs	r0, r1
 8001054:	4302      	orrs	r2, r0
 8001056:	0016      	movs	r6, r2
 8001058:	2d05      	cmp	r5, #5
 800105a:	dc12      	bgt.n	8001082 <__aeabi_i2f+0x86>
 800105c:	0031      	movs	r1, r6
 800105e:	4f0d      	ldr	r7, [pc, #52]	; (8001094 <__aeabi_i2f+0x98>)
 8001060:	4039      	ands	r1, r7
 8001062:	0772      	lsls	r2, r6, #29
 8001064:	d009      	beq.n	800107a <__aeabi_i2f+0x7e>
 8001066:	200f      	movs	r0, #15
 8001068:	4030      	ands	r0, r6
 800106a:	2804      	cmp	r0, #4
 800106c:	d005      	beq.n	800107a <__aeabi_i2f+0x7e>
 800106e:	3104      	adds	r1, #4
 8001070:	014a      	lsls	r2, r1, #5
 8001072:	d502      	bpl.n	800107a <__aeabi_i2f+0x7e>
 8001074:	239f      	movs	r3, #159	; 0x9f
 8001076:	4039      	ands	r1, r7
 8001078:	1b5b      	subs	r3, r3, r5
 800107a:	0189      	lsls	r1, r1, #6
 800107c:	0a4e      	lsrs	r6, r1, #9
 800107e:	b2d8      	uxtb	r0, r3
 8001080:	e7d6      	b.n	8001030 <__aeabi_i2f+0x34>
 8001082:	1f6a      	subs	r2, r5, #5
 8001084:	4096      	lsls	r6, r2
 8001086:	0031      	movs	r1, r6
 8001088:	4f02      	ldr	r7, [pc, #8]	; (8001094 <__aeabi_i2f+0x98>)
 800108a:	4039      	ands	r1, r7
 800108c:	0772      	lsls	r2, r6, #29
 800108e:	d0f4      	beq.n	800107a <__aeabi_i2f+0x7e>
 8001090:	e7e9      	b.n	8001066 <__aeabi_i2f+0x6a>
 8001092:	46c0      	nop			; (mov r8, r8)
 8001094:	fbffffff 	.word	0xfbffffff

08001098 <__aeabi_ui2f>:
 8001098:	b570      	push	{r4, r5, r6, lr}
 800109a:	1e05      	subs	r5, r0, #0
 800109c:	d00e      	beq.n	80010bc <__aeabi_ui2f+0x24>
 800109e:	f001 fe6b 	bl	8002d78 <__clzsi2>
 80010a2:	239e      	movs	r3, #158	; 0x9e
 80010a4:	0004      	movs	r4, r0
 80010a6:	1a1b      	subs	r3, r3, r0
 80010a8:	2b96      	cmp	r3, #150	; 0x96
 80010aa:	dc0c      	bgt.n	80010c6 <__aeabi_ui2f+0x2e>
 80010ac:	2808      	cmp	r0, #8
 80010ae:	dd01      	ble.n	80010b4 <__aeabi_ui2f+0x1c>
 80010b0:	3c08      	subs	r4, #8
 80010b2:	40a5      	lsls	r5, r4
 80010b4:	026d      	lsls	r5, r5, #9
 80010b6:	0a6d      	lsrs	r5, r5, #9
 80010b8:	b2d8      	uxtb	r0, r3
 80010ba:	e001      	b.n	80010c0 <__aeabi_ui2f+0x28>
 80010bc:	2000      	movs	r0, #0
 80010be:	2500      	movs	r5, #0
 80010c0:	05c0      	lsls	r0, r0, #23
 80010c2:	4328      	orrs	r0, r5
 80010c4:	bd70      	pop	{r4, r5, r6, pc}
 80010c6:	2b99      	cmp	r3, #153	; 0x99
 80010c8:	dd09      	ble.n	80010de <__aeabi_ui2f+0x46>
 80010ca:	0002      	movs	r2, r0
 80010cc:	0029      	movs	r1, r5
 80010ce:	321b      	adds	r2, #27
 80010d0:	4091      	lsls	r1, r2
 80010d2:	1e4a      	subs	r2, r1, #1
 80010d4:	4191      	sbcs	r1, r2
 80010d6:	2205      	movs	r2, #5
 80010d8:	1a12      	subs	r2, r2, r0
 80010da:	40d5      	lsrs	r5, r2
 80010dc:	430d      	orrs	r5, r1
 80010de:	2c05      	cmp	r4, #5
 80010e0:	dc12      	bgt.n	8001108 <__aeabi_ui2f+0x70>
 80010e2:	0029      	movs	r1, r5
 80010e4:	4e0c      	ldr	r6, [pc, #48]	; (8001118 <__aeabi_ui2f+0x80>)
 80010e6:	4031      	ands	r1, r6
 80010e8:	076a      	lsls	r2, r5, #29
 80010ea:	d009      	beq.n	8001100 <__aeabi_ui2f+0x68>
 80010ec:	200f      	movs	r0, #15
 80010ee:	4028      	ands	r0, r5
 80010f0:	2804      	cmp	r0, #4
 80010f2:	d005      	beq.n	8001100 <__aeabi_ui2f+0x68>
 80010f4:	3104      	adds	r1, #4
 80010f6:	014a      	lsls	r2, r1, #5
 80010f8:	d502      	bpl.n	8001100 <__aeabi_ui2f+0x68>
 80010fa:	239f      	movs	r3, #159	; 0x9f
 80010fc:	4031      	ands	r1, r6
 80010fe:	1b1b      	subs	r3, r3, r4
 8001100:	0189      	lsls	r1, r1, #6
 8001102:	0a4d      	lsrs	r5, r1, #9
 8001104:	b2d8      	uxtb	r0, r3
 8001106:	e7db      	b.n	80010c0 <__aeabi_ui2f+0x28>
 8001108:	1f62      	subs	r2, r4, #5
 800110a:	4095      	lsls	r5, r2
 800110c:	0029      	movs	r1, r5
 800110e:	4e02      	ldr	r6, [pc, #8]	; (8001118 <__aeabi_ui2f+0x80>)
 8001110:	4031      	ands	r1, r6
 8001112:	076a      	lsls	r2, r5, #29
 8001114:	d0f4      	beq.n	8001100 <__aeabi_ui2f+0x68>
 8001116:	e7e9      	b.n	80010ec <__aeabi_ui2f+0x54>
 8001118:	fbffffff 	.word	0xfbffffff

0800111c <__aeabi_dadd>:
 800111c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800111e:	464f      	mov	r7, r9
 8001120:	4646      	mov	r6, r8
 8001122:	46d6      	mov	lr, sl
 8001124:	000d      	movs	r5, r1
 8001126:	0004      	movs	r4, r0
 8001128:	b5c0      	push	{r6, r7, lr}
 800112a:	001f      	movs	r7, r3
 800112c:	0011      	movs	r1, r2
 800112e:	0328      	lsls	r0, r5, #12
 8001130:	0f62      	lsrs	r2, r4, #29
 8001132:	0a40      	lsrs	r0, r0, #9
 8001134:	4310      	orrs	r0, r2
 8001136:	007a      	lsls	r2, r7, #1
 8001138:	0d52      	lsrs	r2, r2, #21
 800113a:	00e3      	lsls	r3, r4, #3
 800113c:	033c      	lsls	r4, r7, #12
 800113e:	4691      	mov	r9, r2
 8001140:	0a64      	lsrs	r4, r4, #9
 8001142:	0ffa      	lsrs	r2, r7, #31
 8001144:	0f4f      	lsrs	r7, r1, #29
 8001146:	006e      	lsls	r6, r5, #1
 8001148:	4327      	orrs	r7, r4
 800114a:	4692      	mov	sl, r2
 800114c:	46b8      	mov	r8, r7
 800114e:	0d76      	lsrs	r6, r6, #21
 8001150:	0fed      	lsrs	r5, r5, #31
 8001152:	00c9      	lsls	r1, r1, #3
 8001154:	4295      	cmp	r5, r2
 8001156:	d100      	bne.n	800115a <__aeabi_dadd+0x3e>
 8001158:	e099      	b.n	800128e <__aeabi_dadd+0x172>
 800115a:	464c      	mov	r4, r9
 800115c:	1b34      	subs	r4, r6, r4
 800115e:	46a4      	mov	ip, r4
 8001160:	2c00      	cmp	r4, #0
 8001162:	dc00      	bgt.n	8001166 <__aeabi_dadd+0x4a>
 8001164:	e07c      	b.n	8001260 <__aeabi_dadd+0x144>
 8001166:	464a      	mov	r2, r9
 8001168:	2a00      	cmp	r2, #0
 800116a:	d100      	bne.n	800116e <__aeabi_dadd+0x52>
 800116c:	e0b8      	b.n	80012e0 <__aeabi_dadd+0x1c4>
 800116e:	4ac5      	ldr	r2, [pc, #788]	; (8001484 <__aeabi_dadd+0x368>)
 8001170:	4296      	cmp	r6, r2
 8001172:	d100      	bne.n	8001176 <__aeabi_dadd+0x5a>
 8001174:	e11c      	b.n	80013b0 <__aeabi_dadd+0x294>
 8001176:	2280      	movs	r2, #128	; 0x80
 8001178:	003c      	movs	r4, r7
 800117a:	0412      	lsls	r2, r2, #16
 800117c:	4314      	orrs	r4, r2
 800117e:	46a0      	mov	r8, r4
 8001180:	4662      	mov	r2, ip
 8001182:	2a38      	cmp	r2, #56	; 0x38
 8001184:	dd00      	ble.n	8001188 <__aeabi_dadd+0x6c>
 8001186:	e161      	b.n	800144c <__aeabi_dadd+0x330>
 8001188:	2a1f      	cmp	r2, #31
 800118a:	dd00      	ble.n	800118e <__aeabi_dadd+0x72>
 800118c:	e1cc      	b.n	8001528 <__aeabi_dadd+0x40c>
 800118e:	4664      	mov	r4, ip
 8001190:	2220      	movs	r2, #32
 8001192:	1b12      	subs	r2, r2, r4
 8001194:	4644      	mov	r4, r8
 8001196:	4094      	lsls	r4, r2
 8001198:	000f      	movs	r7, r1
 800119a:	46a1      	mov	r9, r4
 800119c:	4664      	mov	r4, ip
 800119e:	4091      	lsls	r1, r2
 80011a0:	40e7      	lsrs	r7, r4
 80011a2:	464c      	mov	r4, r9
 80011a4:	1e4a      	subs	r2, r1, #1
 80011a6:	4191      	sbcs	r1, r2
 80011a8:	433c      	orrs	r4, r7
 80011aa:	4642      	mov	r2, r8
 80011ac:	4321      	orrs	r1, r4
 80011ae:	4664      	mov	r4, ip
 80011b0:	40e2      	lsrs	r2, r4
 80011b2:	1a80      	subs	r0, r0, r2
 80011b4:	1a5c      	subs	r4, r3, r1
 80011b6:	42a3      	cmp	r3, r4
 80011b8:	419b      	sbcs	r3, r3
 80011ba:	425f      	negs	r7, r3
 80011bc:	1bc7      	subs	r7, r0, r7
 80011be:	023b      	lsls	r3, r7, #8
 80011c0:	d400      	bmi.n	80011c4 <__aeabi_dadd+0xa8>
 80011c2:	e0d0      	b.n	8001366 <__aeabi_dadd+0x24a>
 80011c4:	027f      	lsls	r7, r7, #9
 80011c6:	0a7f      	lsrs	r7, r7, #9
 80011c8:	2f00      	cmp	r7, #0
 80011ca:	d100      	bne.n	80011ce <__aeabi_dadd+0xb2>
 80011cc:	e0ff      	b.n	80013ce <__aeabi_dadd+0x2b2>
 80011ce:	0038      	movs	r0, r7
 80011d0:	f001 fdd2 	bl	8002d78 <__clzsi2>
 80011d4:	0001      	movs	r1, r0
 80011d6:	3908      	subs	r1, #8
 80011d8:	2320      	movs	r3, #32
 80011da:	0022      	movs	r2, r4
 80011dc:	1a5b      	subs	r3, r3, r1
 80011de:	408f      	lsls	r7, r1
 80011e0:	40da      	lsrs	r2, r3
 80011e2:	408c      	lsls	r4, r1
 80011e4:	4317      	orrs	r7, r2
 80011e6:	42b1      	cmp	r1, r6
 80011e8:	da00      	bge.n	80011ec <__aeabi_dadd+0xd0>
 80011ea:	e0ff      	b.n	80013ec <__aeabi_dadd+0x2d0>
 80011ec:	1b89      	subs	r1, r1, r6
 80011ee:	1c4b      	adds	r3, r1, #1
 80011f0:	2b1f      	cmp	r3, #31
 80011f2:	dd00      	ble.n	80011f6 <__aeabi_dadd+0xda>
 80011f4:	e0a8      	b.n	8001348 <__aeabi_dadd+0x22c>
 80011f6:	2220      	movs	r2, #32
 80011f8:	0039      	movs	r1, r7
 80011fa:	1ad2      	subs	r2, r2, r3
 80011fc:	0020      	movs	r0, r4
 80011fe:	4094      	lsls	r4, r2
 8001200:	4091      	lsls	r1, r2
 8001202:	40d8      	lsrs	r0, r3
 8001204:	1e62      	subs	r2, r4, #1
 8001206:	4194      	sbcs	r4, r2
 8001208:	40df      	lsrs	r7, r3
 800120a:	2600      	movs	r6, #0
 800120c:	4301      	orrs	r1, r0
 800120e:	430c      	orrs	r4, r1
 8001210:	0763      	lsls	r3, r4, #29
 8001212:	d009      	beq.n	8001228 <__aeabi_dadd+0x10c>
 8001214:	230f      	movs	r3, #15
 8001216:	4023      	ands	r3, r4
 8001218:	2b04      	cmp	r3, #4
 800121a:	d005      	beq.n	8001228 <__aeabi_dadd+0x10c>
 800121c:	1d23      	adds	r3, r4, #4
 800121e:	42a3      	cmp	r3, r4
 8001220:	41a4      	sbcs	r4, r4
 8001222:	4264      	negs	r4, r4
 8001224:	193f      	adds	r7, r7, r4
 8001226:	001c      	movs	r4, r3
 8001228:	023b      	lsls	r3, r7, #8
 800122a:	d400      	bmi.n	800122e <__aeabi_dadd+0x112>
 800122c:	e09e      	b.n	800136c <__aeabi_dadd+0x250>
 800122e:	4b95      	ldr	r3, [pc, #596]	; (8001484 <__aeabi_dadd+0x368>)
 8001230:	3601      	adds	r6, #1
 8001232:	429e      	cmp	r6, r3
 8001234:	d100      	bne.n	8001238 <__aeabi_dadd+0x11c>
 8001236:	e0b7      	b.n	80013a8 <__aeabi_dadd+0x28c>
 8001238:	4a93      	ldr	r2, [pc, #588]	; (8001488 <__aeabi_dadd+0x36c>)
 800123a:	08e4      	lsrs	r4, r4, #3
 800123c:	4017      	ands	r7, r2
 800123e:	077b      	lsls	r3, r7, #29
 8001240:	0571      	lsls	r1, r6, #21
 8001242:	027f      	lsls	r7, r7, #9
 8001244:	4323      	orrs	r3, r4
 8001246:	0b3f      	lsrs	r7, r7, #12
 8001248:	0d4a      	lsrs	r2, r1, #21
 800124a:	0512      	lsls	r2, r2, #20
 800124c:	433a      	orrs	r2, r7
 800124e:	07ed      	lsls	r5, r5, #31
 8001250:	432a      	orrs	r2, r5
 8001252:	0018      	movs	r0, r3
 8001254:	0011      	movs	r1, r2
 8001256:	bce0      	pop	{r5, r6, r7}
 8001258:	46ba      	mov	sl, r7
 800125a:	46b1      	mov	r9, r6
 800125c:	46a8      	mov	r8, r5
 800125e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001260:	2c00      	cmp	r4, #0
 8001262:	d04b      	beq.n	80012fc <__aeabi_dadd+0x1e0>
 8001264:	464c      	mov	r4, r9
 8001266:	1ba4      	subs	r4, r4, r6
 8001268:	46a4      	mov	ip, r4
 800126a:	2e00      	cmp	r6, #0
 800126c:	d000      	beq.n	8001270 <__aeabi_dadd+0x154>
 800126e:	e123      	b.n	80014b8 <__aeabi_dadd+0x39c>
 8001270:	0004      	movs	r4, r0
 8001272:	431c      	orrs	r4, r3
 8001274:	d100      	bne.n	8001278 <__aeabi_dadd+0x15c>
 8001276:	e1af      	b.n	80015d8 <__aeabi_dadd+0x4bc>
 8001278:	4662      	mov	r2, ip
 800127a:	1e54      	subs	r4, r2, #1
 800127c:	2a01      	cmp	r2, #1
 800127e:	d100      	bne.n	8001282 <__aeabi_dadd+0x166>
 8001280:	e215      	b.n	80016ae <__aeabi_dadd+0x592>
 8001282:	4d80      	ldr	r5, [pc, #512]	; (8001484 <__aeabi_dadd+0x368>)
 8001284:	45ac      	cmp	ip, r5
 8001286:	d100      	bne.n	800128a <__aeabi_dadd+0x16e>
 8001288:	e1c8      	b.n	800161c <__aeabi_dadd+0x500>
 800128a:	46a4      	mov	ip, r4
 800128c:	e11b      	b.n	80014c6 <__aeabi_dadd+0x3aa>
 800128e:	464a      	mov	r2, r9
 8001290:	1ab2      	subs	r2, r6, r2
 8001292:	4694      	mov	ip, r2
 8001294:	2a00      	cmp	r2, #0
 8001296:	dc00      	bgt.n	800129a <__aeabi_dadd+0x17e>
 8001298:	e0ac      	b.n	80013f4 <__aeabi_dadd+0x2d8>
 800129a:	464a      	mov	r2, r9
 800129c:	2a00      	cmp	r2, #0
 800129e:	d043      	beq.n	8001328 <__aeabi_dadd+0x20c>
 80012a0:	4a78      	ldr	r2, [pc, #480]	; (8001484 <__aeabi_dadd+0x368>)
 80012a2:	4296      	cmp	r6, r2
 80012a4:	d100      	bne.n	80012a8 <__aeabi_dadd+0x18c>
 80012a6:	e1af      	b.n	8001608 <__aeabi_dadd+0x4ec>
 80012a8:	2280      	movs	r2, #128	; 0x80
 80012aa:	003c      	movs	r4, r7
 80012ac:	0412      	lsls	r2, r2, #16
 80012ae:	4314      	orrs	r4, r2
 80012b0:	46a0      	mov	r8, r4
 80012b2:	4662      	mov	r2, ip
 80012b4:	2a38      	cmp	r2, #56	; 0x38
 80012b6:	dc67      	bgt.n	8001388 <__aeabi_dadd+0x26c>
 80012b8:	2a1f      	cmp	r2, #31
 80012ba:	dc00      	bgt.n	80012be <__aeabi_dadd+0x1a2>
 80012bc:	e15f      	b.n	800157e <__aeabi_dadd+0x462>
 80012be:	4647      	mov	r7, r8
 80012c0:	3a20      	subs	r2, #32
 80012c2:	40d7      	lsrs	r7, r2
 80012c4:	4662      	mov	r2, ip
 80012c6:	2a20      	cmp	r2, #32
 80012c8:	d005      	beq.n	80012d6 <__aeabi_dadd+0x1ba>
 80012ca:	4664      	mov	r4, ip
 80012cc:	2240      	movs	r2, #64	; 0x40
 80012ce:	1b12      	subs	r2, r2, r4
 80012d0:	4644      	mov	r4, r8
 80012d2:	4094      	lsls	r4, r2
 80012d4:	4321      	orrs	r1, r4
 80012d6:	1e4a      	subs	r2, r1, #1
 80012d8:	4191      	sbcs	r1, r2
 80012da:	000c      	movs	r4, r1
 80012dc:	433c      	orrs	r4, r7
 80012de:	e057      	b.n	8001390 <__aeabi_dadd+0x274>
 80012e0:	003a      	movs	r2, r7
 80012e2:	430a      	orrs	r2, r1
 80012e4:	d100      	bne.n	80012e8 <__aeabi_dadd+0x1cc>
 80012e6:	e105      	b.n	80014f4 <__aeabi_dadd+0x3d8>
 80012e8:	0022      	movs	r2, r4
 80012ea:	3a01      	subs	r2, #1
 80012ec:	2c01      	cmp	r4, #1
 80012ee:	d100      	bne.n	80012f2 <__aeabi_dadd+0x1d6>
 80012f0:	e182      	b.n	80015f8 <__aeabi_dadd+0x4dc>
 80012f2:	4c64      	ldr	r4, [pc, #400]	; (8001484 <__aeabi_dadd+0x368>)
 80012f4:	45a4      	cmp	ip, r4
 80012f6:	d05b      	beq.n	80013b0 <__aeabi_dadd+0x294>
 80012f8:	4694      	mov	ip, r2
 80012fa:	e741      	b.n	8001180 <__aeabi_dadd+0x64>
 80012fc:	4c63      	ldr	r4, [pc, #396]	; (800148c <__aeabi_dadd+0x370>)
 80012fe:	1c77      	adds	r7, r6, #1
 8001300:	4227      	tst	r7, r4
 8001302:	d000      	beq.n	8001306 <__aeabi_dadd+0x1ea>
 8001304:	e0c4      	b.n	8001490 <__aeabi_dadd+0x374>
 8001306:	0004      	movs	r4, r0
 8001308:	431c      	orrs	r4, r3
 800130a:	2e00      	cmp	r6, #0
 800130c:	d000      	beq.n	8001310 <__aeabi_dadd+0x1f4>
 800130e:	e169      	b.n	80015e4 <__aeabi_dadd+0x4c8>
 8001310:	2c00      	cmp	r4, #0
 8001312:	d100      	bne.n	8001316 <__aeabi_dadd+0x1fa>
 8001314:	e1bf      	b.n	8001696 <__aeabi_dadd+0x57a>
 8001316:	4644      	mov	r4, r8
 8001318:	430c      	orrs	r4, r1
 800131a:	d000      	beq.n	800131e <__aeabi_dadd+0x202>
 800131c:	e1d0      	b.n	80016c0 <__aeabi_dadd+0x5a4>
 800131e:	0742      	lsls	r2, r0, #29
 8001320:	08db      	lsrs	r3, r3, #3
 8001322:	4313      	orrs	r3, r2
 8001324:	08c0      	lsrs	r0, r0, #3
 8001326:	e029      	b.n	800137c <__aeabi_dadd+0x260>
 8001328:	003a      	movs	r2, r7
 800132a:	430a      	orrs	r2, r1
 800132c:	d100      	bne.n	8001330 <__aeabi_dadd+0x214>
 800132e:	e170      	b.n	8001612 <__aeabi_dadd+0x4f6>
 8001330:	4662      	mov	r2, ip
 8001332:	4664      	mov	r4, ip
 8001334:	3a01      	subs	r2, #1
 8001336:	2c01      	cmp	r4, #1
 8001338:	d100      	bne.n	800133c <__aeabi_dadd+0x220>
 800133a:	e0e0      	b.n	80014fe <__aeabi_dadd+0x3e2>
 800133c:	4c51      	ldr	r4, [pc, #324]	; (8001484 <__aeabi_dadd+0x368>)
 800133e:	45a4      	cmp	ip, r4
 8001340:	d100      	bne.n	8001344 <__aeabi_dadd+0x228>
 8001342:	e161      	b.n	8001608 <__aeabi_dadd+0x4ec>
 8001344:	4694      	mov	ip, r2
 8001346:	e7b4      	b.n	80012b2 <__aeabi_dadd+0x196>
 8001348:	003a      	movs	r2, r7
 800134a:	391f      	subs	r1, #31
 800134c:	40ca      	lsrs	r2, r1
 800134e:	0011      	movs	r1, r2
 8001350:	2b20      	cmp	r3, #32
 8001352:	d003      	beq.n	800135c <__aeabi_dadd+0x240>
 8001354:	2240      	movs	r2, #64	; 0x40
 8001356:	1ad3      	subs	r3, r2, r3
 8001358:	409f      	lsls	r7, r3
 800135a:	433c      	orrs	r4, r7
 800135c:	1e63      	subs	r3, r4, #1
 800135e:	419c      	sbcs	r4, r3
 8001360:	2700      	movs	r7, #0
 8001362:	2600      	movs	r6, #0
 8001364:	430c      	orrs	r4, r1
 8001366:	0763      	lsls	r3, r4, #29
 8001368:	d000      	beq.n	800136c <__aeabi_dadd+0x250>
 800136a:	e753      	b.n	8001214 <__aeabi_dadd+0xf8>
 800136c:	46b4      	mov	ip, r6
 800136e:	08e4      	lsrs	r4, r4, #3
 8001370:	077b      	lsls	r3, r7, #29
 8001372:	4323      	orrs	r3, r4
 8001374:	08f8      	lsrs	r0, r7, #3
 8001376:	4a43      	ldr	r2, [pc, #268]	; (8001484 <__aeabi_dadd+0x368>)
 8001378:	4594      	cmp	ip, r2
 800137a:	d01d      	beq.n	80013b8 <__aeabi_dadd+0x29c>
 800137c:	4662      	mov	r2, ip
 800137e:	0307      	lsls	r7, r0, #12
 8001380:	0552      	lsls	r2, r2, #21
 8001382:	0b3f      	lsrs	r7, r7, #12
 8001384:	0d52      	lsrs	r2, r2, #21
 8001386:	e760      	b.n	800124a <__aeabi_dadd+0x12e>
 8001388:	4644      	mov	r4, r8
 800138a:	430c      	orrs	r4, r1
 800138c:	1e62      	subs	r2, r4, #1
 800138e:	4194      	sbcs	r4, r2
 8001390:	18e4      	adds	r4, r4, r3
 8001392:	429c      	cmp	r4, r3
 8001394:	419b      	sbcs	r3, r3
 8001396:	425f      	negs	r7, r3
 8001398:	183f      	adds	r7, r7, r0
 800139a:	023b      	lsls	r3, r7, #8
 800139c:	d5e3      	bpl.n	8001366 <__aeabi_dadd+0x24a>
 800139e:	4b39      	ldr	r3, [pc, #228]	; (8001484 <__aeabi_dadd+0x368>)
 80013a0:	3601      	adds	r6, #1
 80013a2:	429e      	cmp	r6, r3
 80013a4:	d000      	beq.n	80013a8 <__aeabi_dadd+0x28c>
 80013a6:	e0b5      	b.n	8001514 <__aeabi_dadd+0x3f8>
 80013a8:	0032      	movs	r2, r6
 80013aa:	2700      	movs	r7, #0
 80013ac:	2300      	movs	r3, #0
 80013ae:	e74c      	b.n	800124a <__aeabi_dadd+0x12e>
 80013b0:	0742      	lsls	r2, r0, #29
 80013b2:	08db      	lsrs	r3, r3, #3
 80013b4:	4313      	orrs	r3, r2
 80013b6:	08c0      	lsrs	r0, r0, #3
 80013b8:	001a      	movs	r2, r3
 80013ba:	4302      	orrs	r2, r0
 80013bc:	d100      	bne.n	80013c0 <__aeabi_dadd+0x2a4>
 80013be:	e1e1      	b.n	8001784 <__aeabi_dadd+0x668>
 80013c0:	2780      	movs	r7, #128	; 0x80
 80013c2:	033f      	lsls	r7, r7, #12
 80013c4:	4307      	orrs	r7, r0
 80013c6:	033f      	lsls	r7, r7, #12
 80013c8:	4a2e      	ldr	r2, [pc, #184]	; (8001484 <__aeabi_dadd+0x368>)
 80013ca:	0b3f      	lsrs	r7, r7, #12
 80013cc:	e73d      	b.n	800124a <__aeabi_dadd+0x12e>
 80013ce:	0020      	movs	r0, r4
 80013d0:	f001 fcd2 	bl	8002d78 <__clzsi2>
 80013d4:	0001      	movs	r1, r0
 80013d6:	3118      	adds	r1, #24
 80013d8:	291f      	cmp	r1, #31
 80013da:	dc00      	bgt.n	80013de <__aeabi_dadd+0x2c2>
 80013dc:	e6fc      	b.n	80011d8 <__aeabi_dadd+0xbc>
 80013de:	3808      	subs	r0, #8
 80013e0:	4084      	lsls	r4, r0
 80013e2:	0027      	movs	r7, r4
 80013e4:	2400      	movs	r4, #0
 80013e6:	42b1      	cmp	r1, r6
 80013e8:	db00      	blt.n	80013ec <__aeabi_dadd+0x2d0>
 80013ea:	e6ff      	b.n	80011ec <__aeabi_dadd+0xd0>
 80013ec:	4a26      	ldr	r2, [pc, #152]	; (8001488 <__aeabi_dadd+0x36c>)
 80013ee:	1a76      	subs	r6, r6, r1
 80013f0:	4017      	ands	r7, r2
 80013f2:	e70d      	b.n	8001210 <__aeabi_dadd+0xf4>
 80013f4:	2a00      	cmp	r2, #0
 80013f6:	d02f      	beq.n	8001458 <__aeabi_dadd+0x33c>
 80013f8:	464a      	mov	r2, r9
 80013fa:	1b92      	subs	r2, r2, r6
 80013fc:	4694      	mov	ip, r2
 80013fe:	2e00      	cmp	r6, #0
 8001400:	d100      	bne.n	8001404 <__aeabi_dadd+0x2e8>
 8001402:	e0ad      	b.n	8001560 <__aeabi_dadd+0x444>
 8001404:	4a1f      	ldr	r2, [pc, #124]	; (8001484 <__aeabi_dadd+0x368>)
 8001406:	4591      	cmp	r9, r2
 8001408:	d100      	bne.n	800140c <__aeabi_dadd+0x2f0>
 800140a:	e10f      	b.n	800162c <__aeabi_dadd+0x510>
 800140c:	2280      	movs	r2, #128	; 0x80
 800140e:	0412      	lsls	r2, r2, #16
 8001410:	4310      	orrs	r0, r2
 8001412:	4662      	mov	r2, ip
 8001414:	2a38      	cmp	r2, #56	; 0x38
 8001416:	dd00      	ble.n	800141a <__aeabi_dadd+0x2fe>
 8001418:	e10f      	b.n	800163a <__aeabi_dadd+0x51e>
 800141a:	2a1f      	cmp	r2, #31
 800141c:	dd00      	ble.n	8001420 <__aeabi_dadd+0x304>
 800141e:	e180      	b.n	8001722 <__aeabi_dadd+0x606>
 8001420:	4664      	mov	r4, ip
 8001422:	2220      	movs	r2, #32
 8001424:	001e      	movs	r6, r3
 8001426:	1b12      	subs	r2, r2, r4
 8001428:	4667      	mov	r7, ip
 800142a:	0004      	movs	r4, r0
 800142c:	4093      	lsls	r3, r2
 800142e:	4094      	lsls	r4, r2
 8001430:	40fe      	lsrs	r6, r7
 8001432:	1e5a      	subs	r2, r3, #1
 8001434:	4193      	sbcs	r3, r2
 8001436:	40f8      	lsrs	r0, r7
 8001438:	4334      	orrs	r4, r6
 800143a:	431c      	orrs	r4, r3
 800143c:	4480      	add	r8, r0
 800143e:	1864      	adds	r4, r4, r1
 8001440:	428c      	cmp	r4, r1
 8001442:	41bf      	sbcs	r7, r7
 8001444:	427f      	negs	r7, r7
 8001446:	464e      	mov	r6, r9
 8001448:	4447      	add	r7, r8
 800144a:	e7a6      	b.n	800139a <__aeabi_dadd+0x27e>
 800144c:	4642      	mov	r2, r8
 800144e:	430a      	orrs	r2, r1
 8001450:	0011      	movs	r1, r2
 8001452:	1e4a      	subs	r2, r1, #1
 8001454:	4191      	sbcs	r1, r2
 8001456:	e6ad      	b.n	80011b4 <__aeabi_dadd+0x98>
 8001458:	4c0c      	ldr	r4, [pc, #48]	; (800148c <__aeabi_dadd+0x370>)
 800145a:	1c72      	adds	r2, r6, #1
 800145c:	4222      	tst	r2, r4
 800145e:	d000      	beq.n	8001462 <__aeabi_dadd+0x346>
 8001460:	e0a1      	b.n	80015a6 <__aeabi_dadd+0x48a>
 8001462:	0002      	movs	r2, r0
 8001464:	431a      	orrs	r2, r3
 8001466:	2e00      	cmp	r6, #0
 8001468:	d000      	beq.n	800146c <__aeabi_dadd+0x350>
 800146a:	e0fa      	b.n	8001662 <__aeabi_dadd+0x546>
 800146c:	2a00      	cmp	r2, #0
 800146e:	d100      	bne.n	8001472 <__aeabi_dadd+0x356>
 8001470:	e145      	b.n	80016fe <__aeabi_dadd+0x5e2>
 8001472:	003a      	movs	r2, r7
 8001474:	430a      	orrs	r2, r1
 8001476:	d000      	beq.n	800147a <__aeabi_dadd+0x35e>
 8001478:	e146      	b.n	8001708 <__aeabi_dadd+0x5ec>
 800147a:	0742      	lsls	r2, r0, #29
 800147c:	08db      	lsrs	r3, r3, #3
 800147e:	4313      	orrs	r3, r2
 8001480:	08c0      	lsrs	r0, r0, #3
 8001482:	e77b      	b.n	800137c <__aeabi_dadd+0x260>
 8001484:	000007ff 	.word	0x000007ff
 8001488:	ff7fffff 	.word	0xff7fffff
 800148c:	000007fe 	.word	0x000007fe
 8001490:	4647      	mov	r7, r8
 8001492:	1a5c      	subs	r4, r3, r1
 8001494:	1bc2      	subs	r2, r0, r7
 8001496:	42a3      	cmp	r3, r4
 8001498:	41bf      	sbcs	r7, r7
 800149a:	427f      	negs	r7, r7
 800149c:	46b9      	mov	r9, r7
 800149e:	0017      	movs	r7, r2
 80014a0:	464a      	mov	r2, r9
 80014a2:	1abf      	subs	r7, r7, r2
 80014a4:	023a      	lsls	r2, r7, #8
 80014a6:	d500      	bpl.n	80014aa <__aeabi_dadd+0x38e>
 80014a8:	e08d      	b.n	80015c6 <__aeabi_dadd+0x4aa>
 80014aa:	0023      	movs	r3, r4
 80014ac:	433b      	orrs	r3, r7
 80014ae:	d000      	beq.n	80014b2 <__aeabi_dadd+0x396>
 80014b0:	e68a      	b.n	80011c8 <__aeabi_dadd+0xac>
 80014b2:	2000      	movs	r0, #0
 80014b4:	2500      	movs	r5, #0
 80014b6:	e761      	b.n	800137c <__aeabi_dadd+0x260>
 80014b8:	4cb4      	ldr	r4, [pc, #720]	; (800178c <__aeabi_dadd+0x670>)
 80014ba:	45a1      	cmp	r9, r4
 80014bc:	d100      	bne.n	80014c0 <__aeabi_dadd+0x3a4>
 80014be:	e0ad      	b.n	800161c <__aeabi_dadd+0x500>
 80014c0:	2480      	movs	r4, #128	; 0x80
 80014c2:	0424      	lsls	r4, r4, #16
 80014c4:	4320      	orrs	r0, r4
 80014c6:	4664      	mov	r4, ip
 80014c8:	2c38      	cmp	r4, #56	; 0x38
 80014ca:	dc3d      	bgt.n	8001548 <__aeabi_dadd+0x42c>
 80014cc:	4662      	mov	r2, ip
 80014ce:	2c1f      	cmp	r4, #31
 80014d0:	dd00      	ble.n	80014d4 <__aeabi_dadd+0x3b8>
 80014d2:	e0b7      	b.n	8001644 <__aeabi_dadd+0x528>
 80014d4:	2520      	movs	r5, #32
 80014d6:	001e      	movs	r6, r3
 80014d8:	1b2d      	subs	r5, r5, r4
 80014da:	0004      	movs	r4, r0
 80014dc:	40ab      	lsls	r3, r5
 80014de:	40ac      	lsls	r4, r5
 80014e0:	40d6      	lsrs	r6, r2
 80014e2:	40d0      	lsrs	r0, r2
 80014e4:	4642      	mov	r2, r8
 80014e6:	1e5d      	subs	r5, r3, #1
 80014e8:	41ab      	sbcs	r3, r5
 80014ea:	4334      	orrs	r4, r6
 80014ec:	1a12      	subs	r2, r2, r0
 80014ee:	4690      	mov	r8, r2
 80014f0:	4323      	orrs	r3, r4
 80014f2:	e02c      	b.n	800154e <__aeabi_dadd+0x432>
 80014f4:	0742      	lsls	r2, r0, #29
 80014f6:	08db      	lsrs	r3, r3, #3
 80014f8:	4313      	orrs	r3, r2
 80014fa:	08c0      	lsrs	r0, r0, #3
 80014fc:	e73b      	b.n	8001376 <__aeabi_dadd+0x25a>
 80014fe:	185c      	adds	r4, r3, r1
 8001500:	429c      	cmp	r4, r3
 8001502:	419b      	sbcs	r3, r3
 8001504:	4440      	add	r0, r8
 8001506:	425b      	negs	r3, r3
 8001508:	18c7      	adds	r7, r0, r3
 800150a:	2601      	movs	r6, #1
 800150c:	023b      	lsls	r3, r7, #8
 800150e:	d400      	bmi.n	8001512 <__aeabi_dadd+0x3f6>
 8001510:	e729      	b.n	8001366 <__aeabi_dadd+0x24a>
 8001512:	2602      	movs	r6, #2
 8001514:	4a9e      	ldr	r2, [pc, #632]	; (8001790 <__aeabi_dadd+0x674>)
 8001516:	0863      	lsrs	r3, r4, #1
 8001518:	4017      	ands	r7, r2
 800151a:	2201      	movs	r2, #1
 800151c:	4014      	ands	r4, r2
 800151e:	431c      	orrs	r4, r3
 8001520:	07fb      	lsls	r3, r7, #31
 8001522:	431c      	orrs	r4, r3
 8001524:	087f      	lsrs	r7, r7, #1
 8001526:	e673      	b.n	8001210 <__aeabi_dadd+0xf4>
 8001528:	4644      	mov	r4, r8
 800152a:	3a20      	subs	r2, #32
 800152c:	40d4      	lsrs	r4, r2
 800152e:	4662      	mov	r2, ip
 8001530:	2a20      	cmp	r2, #32
 8001532:	d005      	beq.n	8001540 <__aeabi_dadd+0x424>
 8001534:	4667      	mov	r7, ip
 8001536:	2240      	movs	r2, #64	; 0x40
 8001538:	1bd2      	subs	r2, r2, r7
 800153a:	4647      	mov	r7, r8
 800153c:	4097      	lsls	r7, r2
 800153e:	4339      	orrs	r1, r7
 8001540:	1e4a      	subs	r2, r1, #1
 8001542:	4191      	sbcs	r1, r2
 8001544:	4321      	orrs	r1, r4
 8001546:	e635      	b.n	80011b4 <__aeabi_dadd+0x98>
 8001548:	4303      	orrs	r3, r0
 800154a:	1e58      	subs	r0, r3, #1
 800154c:	4183      	sbcs	r3, r0
 800154e:	1acc      	subs	r4, r1, r3
 8001550:	42a1      	cmp	r1, r4
 8001552:	41bf      	sbcs	r7, r7
 8001554:	4643      	mov	r3, r8
 8001556:	427f      	negs	r7, r7
 8001558:	4655      	mov	r5, sl
 800155a:	464e      	mov	r6, r9
 800155c:	1bdf      	subs	r7, r3, r7
 800155e:	e62e      	b.n	80011be <__aeabi_dadd+0xa2>
 8001560:	0002      	movs	r2, r0
 8001562:	431a      	orrs	r2, r3
 8001564:	d100      	bne.n	8001568 <__aeabi_dadd+0x44c>
 8001566:	e0bd      	b.n	80016e4 <__aeabi_dadd+0x5c8>
 8001568:	4662      	mov	r2, ip
 800156a:	4664      	mov	r4, ip
 800156c:	3a01      	subs	r2, #1
 800156e:	2c01      	cmp	r4, #1
 8001570:	d100      	bne.n	8001574 <__aeabi_dadd+0x458>
 8001572:	e0e5      	b.n	8001740 <__aeabi_dadd+0x624>
 8001574:	4c85      	ldr	r4, [pc, #532]	; (800178c <__aeabi_dadd+0x670>)
 8001576:	45a4      	cmp	ip, r4
 8001578:	d058      	beq.n	800162c <__aeabi_dadd+0x510>
 800157a:	4694      	mov	ip, r2
 800157c:	e749      	b.n	8001412 <__aeabi_dadd+0x2f6>
 800157e:	4664      	mov	r4, ip
 8001580:	2220      	movs	r2, #32
 8001582:	1b12      	subs	r2, r2, r4
 8001584:	4644      	mov	r4, r8
 8001586:	4094      	lsls	r4, r2
 8001588:	000f      	movs	r7, r1
 800158a:	46a1      	mov	r9, r4
 800158c:	4664      	mov	r4, ip
 800158e:	4091      	lsls	r1, r2
 8001590:	40e7      	lsrs	r7, r4
 8001592:	464c      	mov	r4, r9
 8001594:	1e4a      	subs	r2, r1, #1
 8001596:	4191      	sbcs	r1, r2
 8001598:	433c      	orrs	r4, r7
 800159a:	4642      	mov	r2, r8
 800159c:	430c      	orrs	r4, r1
 800159e:	4661      	mov	r1, ip
 80015a0:	40ca      	lsrs	r2, r1
 80015a2:	1880      	adds	r0, r0, r2
 80015a4:	e6f4      	b.n	8001390 <__aeabi_dadd+0x274>
 80015a6:	4c79      	ldr	r4, [pc, #484]	; (800178c <__aeabi_dadd+0x670>)
 80015a8:	42a2      	cmp	r2, r4
 80015aa:	d100      	bne.n	80015ae <__aeabi_dadd+0x492>
 80015ac:	e6fd      	b.n	80013aa <__aeabi_dadd+0x28e>
 80015ae:	1859      	adds	r1, r3, r1
 80015b0:	4299      	cmp	r1, r3
 80015b2:	419b      	sbcs	r3, r3
 80015b4:	4440      	add	r0, r8
 80015b6:	425f      	negs	r7, r3
 80015b8:	19c7      	adds	r7, r0, r7
 80015ba:	07fc      	lsls	r4, r7, #31
 80015bc:	0849      	lsrs	r1, r1, #1
 80015be:	0016      	movs	r6, r2
 80015c0:	430c      	orrs	r4, r1
 80015c2:	087f      	lsrs	r7, r7, #1
 80015c4:	e6cf      	b.n	8001366 <__aeabi_dadd+0x24a>
 80015c6:	1acc      	subs	r4, r1, r3
 80015c8:	42a1      	cmp	r1, r4
 80015ca:	41bf      	sbcs	r7, r7
 80015cc:	4643      	mov	r3, r8
 80015ce:	427f      	negs	r7, r7
 80015d0:	1a18      	subs	r0, r3, r0
 80015d2:	4655      	mov	r5, sl
 80015d4:	1bc7      	subs	r7, r0, r7
 80015d6:	e5f7      	b.n	80011c8 <__aeabi_dadd+0xac>
 80015d8:	08c9      	lsrs	r1, r1, #3
 80015da:	077b      	lsls	r3, r7, #29
 80015dc:	4655      	mov	r5, sl
 80015de:	430b      	orrs	r3, r1
 80015e0:	08f8      	lsrs	r0, r7, #3
 80015e2:	e6c8      	b.n	8001376 <__aeabi_dadd+0x25a>
 80015e4:	2c00      	cmp	r4, #0
 80015e6:	d000      	beq.n	80015ea <__aeabi_dadd+0x4ce>
 80015e8:	e081      	b.n	80016ee <__aeabi_dadd+0x5d2>
 80015ea:	4643      	mov	r3, r8
 80015ec:	430b      	orrs	r3, r1
 80015ee:	d115      	bne.n	800161c <__aeabi_dadd+0x500>
 80015f0:	2080      	movs	r0, #128	; 0x80
 80015f2:	2500      	movs	r5, #0
 80015f4:	0300      	lsls	r0, r0, #12
 80015f6:	e6e3      	b.n	80013c0 <__aeabi_dadd+0x2a4>
 80015f8:	1a5c      	subs	r4, r3, r1
 80015fa:	42a3      	cmp	r3, r4
 80015fc:	419b      	sbcs	r3, r3
 80015fe:	1bc7      	subs	r7, r0, r7
 8001600:	425b      	negs	r3, r3
 8001602:	2601      	movs	r6, #1
 8001604:	1aff      	subs	r7, r7, r3
 8001606:	e5da      	b.n	80011be <__aeabi_dadd+0xa2>
 8001608:	0742      	lsls	r2, r0, #29
 800160a:	08db      	lsrs	r3, r3, #3
 800160c:	4313      	orrs	r3, r2
 800160e:	08c0      	lsrs	r0, r0, #3
 8001610:	e6d2      	b.n	80013b8 <__aeabi_dadd+0x29c>
 8001612:	0742      	lsls	r2, r0, #29
 8001614:	08db      	lsrs	r3, r3, #3
 8001616:	4313      	orrs	r3, r2
 8001618:	08c0      	lsrs	r0, r0, #3
 800161a:	e6ac      	b.n	8001376 <__aeabi_dadd+0x25a>
 800161c:	4643      	mov	r3, r8
 800161e:	4642      	mov	r2, r8
 8001620:	08c9      	lsrs	r1, r1, #3
 8001622:	075b      	lsls	r3, r3, #29
 8001624:	4655      	mov	r5, sl
 8001626:	430b      	orrs	r3, r1
 8001628:	08d0      	lsrs	r0, r2, #3
 800162a:	e6c5      	b.n	80013b8 <__aeabi_dadd+0x29c>
 800162c:	4643      	mov	r3, r8
 800162e:	4642      	mov	r2, r8
 8001630:	075b      	lsls	r3, r3, #29
 8001632:	08c9      	lsrs	r1, r1, #3
 8001634:	430b      	orrs	r3, r1
 8001636:	08d0      	lsrs	r0, r2, #3
 8001638:	e6be      	b.n	80013b8 <__aeabi_dadd+0x29c>
 800163a:	4303      	orrs	r3, r0
 800163c:	001c      	movs	r4, r3
 800163e:	1e63      	subs	r3, r4, #1
 8001640:	419c      	sbcs	r4, r3
 8001642:	e6fc      	b.n	800143e <__aeabi_dadd+0x322>
 8001644:	0002      	movs	r2, r0
 8001646:	3c20      	subs	r4, #32
 8001648:	40e2      	lsrs	r2, r4
 800164a:	0014      	movs	r4, r2
 800164c:	4662      	mov	r2, ip
 800164e:	2a20      	cmp	r2, #32
 8001650:	d003      	beq.n	800165a <__aeabi_dadd+0x53e>
 8001652:	2540      	movs	r5, #64	; 0x40
 8001654:	1aad      	subs	r5, r5, r2
 8001656:	40a8      	lsls	r0, r5
 8001658:	4303      	orrs	r3, r0
 800165a:	1e58      	subs	r0, r3, #1
 800165c:	4183      	sbcs	r3, r0
 800165e:	4323      	orrs	r3, r4
 8001660:	e775      	b.n	800154e <__aeabi_dadd+0x432>
 8001662:	2a00      	cmp	r2, #0
 8001664:	d0e2      	beq.n	800162c <__aeabi_dadd+0x510>
 8001666:	003a      	movs	r2, r7
 8001668:	430a      	orrs	r2, r1
 800166a:	d0cd      	beq.n	8001608 <__aeabi_dadd+0x4ec>
 800166c:	0742      	lsls	r2, r0, #29
 800166e:	08db      	lsrs	r3, r3, #3
 8001670:	4313      	orrs	r3, r2
 8001672:	2280      	movs	r2, #128	; 0x80
 8001674:	08c0      	lsrs	r0, r0, #3
 8001676:	0312      	lsls	r2, r2, #12
 8001678:	4210      	tst	r0, r2
 800167a:	d006      	beq.n	800168a <__aeabi_dadd+0x56e>
 800167c:	08fc      	lsrs	r4, r7, #3
 800167e:	4214      	tst	r4, r2
 8001680:	d103      	bne.n	800168a <__aeabi_dadd+0x56e>
 8001682:	0020      	movs	r0, r4
 8001684:	08cb      	lsrs	r3, r1, #3
 8001686:	077a      	lsls	r2, r7, #29
 8001688:	4313      	orrs	r3, r2
 800168a:	0f5a      	lsrs	r2, r3, #29
 800168c:	00db      	lsls	r3, r3, #3
 800168e:	0752      	lsls	r2, r2, #29
 8001690:	08db      	lsrs	r3, r3, #3
 8001692:	4313      	orrs	r3, r2
 8001694:	e690      	b.n	80013b8 <__aeabi_dadd+0x29c>
 8001696:	4643      	mov	r3, r8
 8001698:	430b      	orrs	r3, r1
 800169a:	d100      	bne.n	800169e <__aeabi_dadd+0x582>
 800169c:	e709      	b.n	80014b2 <__aeabi_dadd+0x396>
 800169e:	4643      	mov	r3, r8
 80016a0:	4642      	mov	r2, r8
 80016a2:	08c9      	lsrs	r1, r1, #3
 80016a4:	075b      	lsls	r3, r3, #29
 80016a6:	4655      	mov	r5, sl
 80016a8:	430b      	orrs	r3, r1
 80016aa:	08d0      	lsrs	r0, r2, #3
 80016ac:	e666      	b.n	800137c <__aeabi_dadd+0x260>
 80016ae:	1acc      	subs	r4, r1, r3
 80016b0:	42a1      	cmp	r1, r4
 80016b2:	4189      	sbcs	r1, r1
 80016b4:	1a3f      	subs	r7, r7, r0
 80016b6:	4249      	negs	r1, r1
 80016b8:	4655      	mov	r5, sl
 80016ba:	2601      	movs	r6, #1
 80016bc:	1a7f      	subs	r7, r7, r1
 80016be:	e57e      	b.n	80011be <__aeabi_dadd+0xa2>
 80016c0:	4642      	mov	r2, r8
 80016c2:	1a5c      	subs	r4, r3, r1
 80016c4:	1a87      	subs	r7, r0, r2
 80016c6:	42a3      	cmp	r3, r4
 80016c8:	4192      	sbcs	r2, r2
 80016ca:	4252      	negs	r2, r2
 80016cc:	1abf      	subs	r7, r7, r2
 80016ce:	023a      	lsls	r2, r7, #8
 80016d0:	d53d      	bpl.n	800174e <__aeabi_dadd+0x632>
 80016d2:	1acc      	subs	r4, r1, r3
 80016d4:	42a1      	cmp	r1, r4
 80016d6:	4189      	sbcs	r1, r1
 80016d8:	4643      	mov	r3, r8
 80016da:	4249      	negs	r1, r1
 80016dc:	1a1f      	subs	r7, r3, r0
 80016de:	4655      	mov	r5, sl
 80016e0:	1a7f      	subs	r7, r7, r1
 80016e2:	e595      	b.n	8001210 <__aeabi_dadd+0xf4>
 80016e4:	077b      	lsls	r3, r7, #29
 80016e6:	08c9      	lsrs	r1, r1, #3
 80016e8:	430b      	orrs	r3, r1
 80016ea:	08f8      	lsrs	r0, r7, #3
 80016ec:	e643      	b.n	8001376 <__aeabi_dadd+0x25a>
 80016ee:	4644      	mov	r4, r8
 80016f0:	08db      	lsrs	r3, r3, #3
 80016f2:	430c      	orrs	r4, r1
 80016f4:	d130      	bne.n	8001758 <__aeabi_dadd+0x63c>
 80016f6:	0742      	lsls	r2, r0, #29
 80016f8:	4313      	orrs	r3, r2
 80016fa:	08c0      	lsrs	r0, r0, #3
 80016fc:	e65c      	b.n	80013b8 <__aeabi_dadd+0x29c>
 80016fe:	077b      	lsls	r3, r7, #29
 8001700:	08c9      	lsrs	r1, r1, #3
 8001702:	430b      	orrs	r3, r1
 8001704:	08f8      	lsrs	r0, r7, #3
 8001706:	e639      	b.n	800137c <__aeabi_dadd+0x260>
 8001708:	185c      	adds	r4, r3, r1
 800170a:	429c      	cmp	r4, r3
 800170c:	419b      	sbcs	r3, r3
 800170e:	4440      	add	r0, r8
 8001710:	425b      	negs	r3, r3
 8001712:	18c7      	adds	r7, r0, r3
 8001714:	023b      	lsls	r3, r7, #8
 8001716:	d400      	bmi.n	800171a <__aeabi_dadd+0x5fe>
 8001718:	e625      	b.n	8001366 <__aeabi_dadd+0x24a>
 800171a:	4b1d      	ldr	r3, [pc, #116]	; (8001790 <__aeabi_dadd+0x674>)
 800171c:	2601      	movs	r6, #1
 800171e:	401f      	ands	r7, r3
 8001720:	e621      	b.n	8001366 <__aeabi_dadd+0x24a>
 8001722:	0004      	movs	r4, r0
 8001724:	3a20      	subs	r2, #32
 8001726:	40d4      	lsrs	r4, r2
 8001728:	4662      	mov	r2, ip
 800172a:	2a20      	cmp	r2, #32
 800172c:	d004      	beq.n	8001738 <__aeabi_dadd+0x61c>
 800172e:	2240      	movs	r2, #64	; 0x40
 8001730:	4666      	mov	r6, ip
 8001732:	1b92      	subs	r2, r2, r6
 8001734:	4090      	lsls	r0, r2
 8001736:	4303      	orrs	r3, r0
 8001738:	1e5a      	subs	r2, r3, #1
 800173a:	4193      	sbcs	r3, r2
 800173c:	431c      	orrs	r4, r3
 800173e:	e67e      	b.n	800143e <__aeabi_dadd+0x322>
 8001740:	185c      	adds	r4, r3, r1
 8001742:	428c      	cmp	r4, r1
 8001744:	4189      	sbcs	r1, r1
 8001746:	4440      	add	r0, r8
 8001748:	4249      	negs	r1, r1
 800174a:	1847      	adds	r7, r0, r1
 800174c:	e6dd      	b.n	800150a <__aeabi_dadd+0x3ee>
 800174e:	0023      	movs	r3, r4
 8001750:	433b      	orrs	r3, r7
 8001752:	d100      	bne.n	8001756 <__aeabi_dadd+0x63a>
 8001754:	e6ad      	b.n	80014b2 <__aeabi_dadd+0x396>
 8001756:	e606      	b.n	8001366 <__aeabi_dadd+0x24a>
 8001758:	0744      	lsls	r4, r0, #29
 800175a:	4323      	orrs	r3, r4
 800175c:	2480      	movs	r4, #128	; 0x80
 800175e:	08c0      	lsrs	r0, r0, #3
 8001760:	0324      	lsls	r4, r4, #12
 8001762:	4220      	tst	r0, r4
 8001764:	d008      	beq.n	8001778 <__aeabi_dadd+0x65c>
 8001766:	4642      	mov	r2, r8
 8001768:	08d6      	lsrs	r6, r2, #3
 800176a:	4226      	tst	r6, r4
 800176c:	d104      	bne.n	8001778 <__aeabi_dadd+0x65c>
 800176e:	4655      	mov	r5, sl
 8001770:	0030      	movs	r0, r6
 8001772:	08cb      	lsrs	r3, r1, #3
 8001774:	0751      	lsls	r1, r2, #29
 8001776:	430b      	orrs	r3, r1
 8001778:	0f5a      	lsrs	r2, r3, #29
 800177a:	00db      	lsls	r3, r3, #3
 800177c:	08db      	lsrs	r3, r3, #3
 800177e:	0752      	lsls	r2, r2, #29
 8001780:	4313      	orrs	r3, r2
 8001782:	e619      	b.n	80013b8 <__aeabi_dadd+0x29c>
 8001784:	2300      	movs	r3, #0
 8001786:	4a01      	ldr	r2, [pc, #4]	; (800178c <__aeabi_dadd+0x670>)
 8001788:	001f      	movs	r7, r3
 800178a:	e55e      	b.n	800124a <__aeabi_dadd+0x12e>
 800178c:	000007ff 	.word	0x000007ff
 8001790:	ff7fffff 	.word	0xff7fffff

08001794 <__aeabi_ddiv>:
 8001794:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001796:	4657      	mov	r7, sl
 8001798:	464e      	mov	r6, r9
 800179a:	4645      	mov	r5, r8
 800179c:	46de      	mov	lr, fp
 800179e:	b5e0      	push	{r5, r6, r7, lr}
 80017a0:	4681      	mov	r9, r0
 80017a2:	0005      	movs	r5, r0
 80017a4:	030c      	lsls	r4, r1, #12
 80017a6:	0048      	lsls	r0, r1, #1
 80017a8:	4692      	mov	sl, r2
 80017aa:	001f      	movs	r7, r3
 80017ac:	b085      	sub	sp, #20
 80017ae:	0b24      	lsrs	r4, r4, #12
 80017b0:	0d40      	lsrs	r0, r0, #21
 80017b2:	0fce      	lsrs	r6, r1, #31
 80017b4:	2800      	cmp	r0, #0
 80017b6:	d100      	bne.n	80017ba <__aeabi_ddiv+0x26>
 80017b8:	e156      	b.n	8001a68 <__aeabi_ddiv+0x2d4>
 80017ba:	4bd4      	ldr	r3, [pc, #848]	; (8001b0c <__aeabi_ddiv+0x378>)
 80017bc:	4298      	cmp	r0, r3
 80017be:	d100      	bne.n	80017c2 <__aeabi_ddiv+0x2e>
 80017c0:	e172      	b.n	8001aa8 <__aeabi_ddiv+0x314>
 80017c2:	0f6b      	lsrs	r3, r5, #29
 80017c4:	00e4      	lsls	r4, r4, #3
 80017c6:	431c      	orrs	r4, r3
 80017c8:	2380      	movs	r3, #128	; 0x80
 80017ca:	041b      	lsls	r3, r3, #16
 80017cc:	4323      	orrs	r3, r4
 80017ce:	4698      	mov	r8, r3
 80017d0:	4bcf      	ldr	r3, [pc, #828]	; (8001b10 <__aeabi_ddiv+0x37c>)
 80017d2:	00ed      	lsls	r5, r5, #3
 80017d4:	469b      	mov	fp, r3
 80017d6:	2300      	movs	r3, #0
 80017d8:	4699      	mov	r9, r3
 80017da:	4483      	add	fp, r0
 80017dc:	9300      	str	r3, [sp, #0]
 80017de:	033c      	lsls	r4, r7, #12
 80017e0:	007b      	lsls	r3, r7, #1
 80017e2:	4650      	mov	r0, sl
 80017e4:	0b24      	lsrs	r4, r4, #12
 80017e6:	0d5b      	lsrs	r3, r3, #21
 80017e8:	0fff      	lsrs	r7, r7, #31
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	d100      	bne.n	80017f0 <__aeabi_ddiv+0x5c>
 80017ee:	e11f      	b.n	8001a30 <__aeabi_ddiv+0x29c>
 80017f0:	4ac6      	ldr	r2, [pc, #792]	; (8001b0c <__aeabi_ddiv+0x378>)
 80017f2:	4293      	cmp	r3, r2
 80017f4:	d100      	bne.n	80017f8 <__aeabi_ddiv+0x64>
 80017f6:	e162      	b.n	8001abe <__aeabi_ddiv+0x32a>
 80017f8:	49c5      	ldr	r1, [pc, #788]	; (8001b10 <__aeabi_ddiv+0x37c>)
 80017fa:	0f42      	lsrs	r2, r0, #29
 80017fc:	468c      	mov	ip, r1
 80017fe:	00e4      	lsls	r4, r4, #3
 8001800:	4659      	mov	r1, fp
 8001802:	4314      	orrs	r4, r2
 8001804:	2280      	movs	r2, #128	; 0x80
 8001806:	4463      	add	r3, ip
 8001808:	0412      	lsls	r2, r2, #16
 800180a:	1acb      	subs	r3, r1, r3
 800180c:	4314      	orrs	r4, r2
 800180e:	469b      	mov	fp, r3
 8001810:	00c2      	lsls	r2, r0, #3
 8001812:	2000      	movs	r0, #0
 8001814:	0033      	movs	r3, r6
 8001816:	407b      	eors	r3, r7
 8001818:	469a      	mov	sl, r3
 800181a:	464b      	mov	r3, r9
 800181c:	2b0f      	cmp	r3, #15
 800181e:	d827      	bhi.n	8001870 <__aeabi_ddiv+0xdc>
 8001820:	49bc      	ldr	r1, [pc, #752]	; (8001b14 <__aeabi_ddiv+0x380>)
 8001822:	009b      	lsls	r3, r3, #2
 8001824:	58cb      	ldr	r3, [r1, r3]
 8001826:	469f      	mov	pc, r3
 8001828:	46b2      	mov	sl, r6
 800182a:	9b00      	ldr	r3, [sp, #0]
 800182c:	2b02      	cmp	r3, #2
 800182e:	d016      	beq.n	800185e <__aeabi_ddiv+0xca>
 8001830:	2b03      	cmp	r3, #3
 8001832:	d100      	bne.n	8001836 <__aeabi_ddiv+0xa2>
 8001834:	e28e      	b.n	8001d54 <__aeabi_ddiv+0x5c0>
 8001836:	2b01      	cmp	r3, #1
 8001838:	d000      	beq.n	800183c <__aeabi_ddiv+0xa8>
 800183a:	e0d9      	b.n	80019f0 <__aeabi_ddiv+0x25c>
 800183c:	2300      	movs	r3, #0
 800183e:	2400      	movs	r4, #0
 8001840:	2500      	movs	r5, #0
 8001842:	4652      	mov	r2, sl
 8001844:	051b      	lsls	r3, r3, #20
 8001846:	4323      	orrs	r3, r4
 8001848:	07d2      	lsls	r2, r2, #31
 800184a:	4313      	orrs	r3, r2
 800184c:	0028      	movs	r0, r5
 800184e:	0019      	movs	r1, r3
 8001850:	b005      	add	sp, #20
 8001852:	bcf0      	pop	{r4, r5, r6, r7}
 8001854:	46bb      	mov	fp, r7
 8001856:	46b2      	mov	sl, r6
 8001858:	46a9      	mov	r9, r5
 800185a:	46a0      	mov	r8, r4
 800185c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800185e:	2400      	movs	r4, #0
 8001860:	2500      	movs	r5, #0
 8001862:	4baa      	ldr	r3, [pc, #680]	; (8001b0c <__aeabi_ddiv+0x378>)
 8001864:	e7ed      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001866:	46ba      	mov	sl, r7
 8001868:	46a0      	mov	r8, r4
 800186a:	0015      	movs	r5, r2
 800186c:	9000      	str	r0, [sp, #0]
 800186e:	e7dc      	b.n	800182a <__aeabi_ddiv+0x96>
 8001870:	4544      	cmp	r4, r8
 8001872:	d200      	bcs.n	8001876 <__aeabi_ddiv+0xe2>
 8001874:	e1c7      	b.n	8001c06 <__aeabi_ddiv+0x472>
 8001876:	d100      	bne.n	800187a <__aeabi_ddiv+0xe6>
 8001878:	e1c2      	b.n	8001c00 <__aeabi_ddiv+0x46c>
 800187a:	2301      	movs	r3, #1
 800187c:	425b      	negs	r3, r3
 800187e:	469c      	mov	ip, r3
 8001880:	002e      	movs	r6, r5
 8001882:	4640      	mov	r0, r8
 8001884:	2500      	movs	r5, #0
 8001886:	44e3      	add	fp, ip
 8001888:	0223      	lsls	r3, r4, #8
 800188a:	0e14      	lsrs	r4, r2, #24
 800188c:	431c      	orrs	r4, r3
 800188e:	0c1b      	lsrs	r3, r3, #16
 8001890:	4699      	mov	r9, r3
 8001892:	0423      	lsls	r3, r4, #16
 8001894:	0c1f      	lsrs	r7, r3, #16
 8001896:	0212      	lsls	r2, r2, #8
 8001898:	4649      	mov	r1, r9
 800189a:	9200      	str	r2, [sp, #0]
 800189c:	9701      	str	r7, [sp, #4]
 800189e:	f7fe fcd5 	bl	800024c <__aeabi_uidivmod>
 80018a2:	0002      	movs	r2, r0
 80018a4:	437a      	muls	r2, r7
 80018a6:	040b      	lsls	r3, r1, #16
 80018a8:	0c31      	lsrs	r1, r6, #16
 80018aa:	4680      	mov	r8, r0
 80018ac:	4319      	orrs	r1, r3
 80018ae:	428a      	cmp	r2, r1
 80018b0:	d907      	bls.n	80018c2 <__aeabi_ddiv+0x12e>
 80018b2:	2301      	movs	r3, #1
 80018b4:	425b      	negs	r3, r3
 80018b6:	469c      	mov	ip, r3
 80018b8:	1909      	adds	r1, r1, r4
 80018ba:	44e0      	add	r8, ip
 80018bc:	428c      	cmp	r4, r1
 80018be:	d800      	bhi.n	80018c2 <__aeabi_ddiv+0x12e>
 80018c0:	e207      	b.n	8001cd2 <__aeabi_ddiv+0x53e>
 80018c2:	1a88      	subs	r0, r1, r2
 80018c4:	4649      	mov	r1, r9
 80018c6:	f7fe fcc1 	bl	800024c <__aeabi_uidivmod>
 80018ca:	0409      	lsls	r1, r1, #16
 80018cc:	468c      	mov	ip, r1
 80018ce:	0431      	lsls	r1, r6, #16
 80018d0:	4666      	mov	r6, ip
 80018d2:	9a01      	ldr	r2, [sp, #4]
 80018d4:	0c09      	lsrs	r1, r1, #16
 80018d6:	4342      	muls	r2, r0
 80018d8:	0003      	movs	r3, r0
 80018da:	4331      	orrs	r1, r6
 80018dc:	428a      	cmp	r2, r1
 80018de:	d904      	bls.n	80018ea <__aeabi_ddiv+0x156>
 80018e0:	1909      	adds	r1, r1, r4
 80018e2:	3b01      	subs	r3, #1
 80018e4:	428c      	cmp	r4, r1
 80018e6:	d800      	bhi.n	80018ea <__aeabi_ddiv+0x156>
 80018e8:	e1ed      	b.n	8001cc6 <__aeabi_ddiv+0x532>
 80018ea:	1a88      	subs	r0, r1, r2
 80018ec:	4642      	mov	r2, r8
 80018ee:	0412      	lsls	r2, r2, #16
 80018f0:	431a      	orrs	r2, r3
 80018f2:	4690      	mov	r8, r2
 80018f4:	4641      	mov	r1, r8
 80018f6:	9b00      	ldr	r3, [sp, #0]
 80018f8:	040e      	lsls	r6, r1, #16
 80018fa:	0c1b      	lsrs	r3, r3, #16
 80018fc:	001f      	movs	r7, r3
 80018fe:	9302      	str	r3, [sp, #8]
 8001900:	9b00      	ldr	r3, [sp, #0]
 8001902:	0c36      	lsrs	r6, r6, #16
 8001904:	041b      	lsls	r3, r3, #16
 8001906:	0c19      	lsrs	r1, r3, #16
 8001908:	000b      	movs	r3, r1
 800190a:	4373      	muls	r3, r6
 800190c:	0c12      	lsrs	r2, r2, #16
 800190e:	437e      	muls	r6, r7
 8001910:	9103      	str	r1, [sp, #12]
 8001912:	4351      	muls	r1, r2
 8001914:	437a      	muls	r2, r7
 8001916:	0c1f      	lsrs	r7, r3, #16
 8001918:	46bc      	mov	ip, r7
 800191a:	1876      	adds	r6, r6, r1
 800191c:	4466      	add	r6, ip
 800191e:	42b1      	cmp	r1, r6
 8001920:	d903      	bls.n	800192a <__aeabi_ddiv+0x196>
 8001922:	2180      	movs	r1, #128	; 0x80
 8001924:	0249      	lsls	r1, r1, #9
 8001926:	468c      	mov	ip, r1
 8001928:	4462      	add	r2, ip
 800192a:	0c31      	lsrs	r1, r6, #16
 800192c:	188a      	adds	r2, r1, r2
 800192e:	0431      	lsls	r1, r6, #16
 8001930:	041e      	lsls	r6, r3, #16
 8001932:	0c36      	lsrs	r6, r6, #16
 8001934:	198e      	adds	r6, r1, r6
 8001936:	4290      	cmp	r0, r2
 8001938:	d302      	bcc.n	8001940 <__aeabi_ddiv+0x1ac>
 800193a:	d112      	bne.n	8001962 <__aeabi_ddiv+0x1ce>
 800193c:	42b5      	cmp	r5, r6
 800193e:	d210      	bcs.n	8001962 <__aeabi_ddiv+0x1ce>
 8001940:	4643      	mov	r3, r8
 8001942:	1e59      	subs	r1, r3, #1
 8001944:	9b00      	ldr	r3, [sp, #0]
 8001946:	469c      	mov	ip, r3
 8001948:	4465      	add	r5, ip
 800194a:	001f      	movs	r7, r3
 800194c:	429d      	cmp	r5, r3
 800194e:	419b      	sbcs	r3, r3
 8001950:	425b      	negs	r3, r3
 8001952:	191b      	adds	r3, r3, r4
 8001954:	18c0      	adds	r0, r0, r3
 8001956:	4284      	cmp	r4, r0
 8001958:	d200      	bcs.n	800195c <__aeabi_ddiv+0x1c8>
 800195a:	e1a0      	b.n	8001c9e <__aeabi_ddiv+0x50a>
 800195c:	d100      	bne.n	8001960 <__aeabi_ddiv+0x1cc>
 800195e:	e19b      	b.n	8001c98 <__aeabi_ddiv+0x504>
 8001960:	4688      	mov	r8, r1
 8001962:	1bae      	subs	r6, r5, r6
 8001964:	42b5      	cmp	r5, r6
 8001966:	41ad      	sbcs	r5, r5
 8001968:	1a80      	subs	r0, r0, r2
 800196a:	426d      	negs	r5, r5
 800196c:	1b40      	subs	r0, r0, r5
 800196e:	4284      	cmp	r4, r0
 8001970:	d100      	bne.n	8001974 <__aeabi_ddiv+0x1e0>
 8001972:	e1d5      	b.n	8001d20 <__aeabi_ddiv+0x58c>
 8001974:	4649      	mov	r1, r9
 8001976:	f7fe fc69 	bl	800024c <__aeabi_uidivmod>
 800197a:	9a01      	ldr	r2, [sp, #4]
 800197c:	040b      	lsls	r3, r1, #16
 800197e:	4342      	muls	r2, r0
 8001980:	0c31      	lsrs	r1, r6, #16
 8001982:	0005      	movs	r5, r0
 8001984:	4319      	orrs	r1, r3
 8001986:	428a      	cmp	r2, r1
 8001988:	d900      	bls.n	800198c <__aeabi_ddiv+0x1f8>
 800198a:	e16c      	b.n	8001c66 <__aeabi_ddiv+0x4d2>
 800198c:	1a88      	subs	r0, r1, r2
 800198e:	4649      	mov	r1, r9
 8001990:	f7fe fc5c 	bl	800024c <__aeabi_uidivmod>
 8001994:	9a01      	ldr	r2, [sp, #4]
 8001996:	0436      	lsls	r6, r6, #16
 8001998:	4342      	muls	r2, r0
 800199a:	0409      	lsls	r1, r1, #16
 800199c:	0c36      	lsrs	r6, r6, #16
 800199e:	0003      	movs	r3, r0
 80019a0:	430e      	orrs	r6, r1
 80019a2:	42b2      	cmp	r2, r6
 80019a4:	d900      	bls.n	80019a8 <__aeabi_ddiv+0x214>
 80019a6:	e153      	b.n	8001c50 <__aeabi_ddiv+0x4bc>
 80019a8:	9803      	ldr	r0, [sp, #12]
 80019aa:	1ab6      	subs	r6, r6, r2
 80019ac:	0002      	movs	r2, r0
 80019ae:	042d      	lsls	r5, r5, #16
 80019b0:	431d      	orrs	r5, r3
 80019b2:	9f02      	ldr	r7, [sp, #8]
 80019b4:	042b      	lsls	r3, r5, #16
 80019b6:	0c1b      	lsrs	r3, r3, #16
 80019b8:	435a      	muls	r2, r3
 80019ba:	437b      	muls	r3, r7
 80019bc:	469c      	mov	ip, r3
 80019be:	0c29      	lsrs	r1, r5, #16
 80019c0:	4348      	muls	r0, r1
 80019c2:	0c13      	lsrs	r3, r2, #16
 80019c4:	4484      	add	ip, r0
 80019c6:	4463      	add	r3, ip
 80019c8:	4379      	muls	r1, r7
 80019ca:	4298      	cmp	r0, r3
 80019cc:	d903      	bls.n	80019d6 <__aeabi_ddiv+0x242>
 80019ce:	2080      	movs	r0, #128	; 0x80
 80019d0:	0240      	lsls	r0, r0, #9
 80019d2:	4684      	mov	ip, r0
 80019d4:	4461      	add	r1, ip
 80019d6:	0c18      	lsrs	r0, r3, #16
 80019d8:	0412      	lsls	r2, r2, #16
 80019da:	041b      	lsls	r3, r3, #16
 80019dc:	0c12      	lsrs	r2, r2, #16
 80019de:	1841      	adds	r1, r0, r1
 80019e0:	189b      	adds	r3, r3, r2
 80019e2:	428e      	cmp	r6, r1
 80019e4:	d200      	bcs.n	80019e8 <__aeabi_ddiv+0x254>
 80019e6:	e0ff      	b.n	8001be8 <__aeabi_ddiv+0x454>
 80019e8:	d100      	bne.n	80019ec <__aeabi_ddiv+0x258>
 80019ea:	e0fa      	b.n	8001be2 <__aeabi_ddiv+0x44e>
 80019ec:	2301      	movs	r3, #1
 80019ee:	431d      	orrs	r5, r3
 80019f0:	4a49      	ldr	r2, [pc, #292]	; (8001b18 <__aeabi_ddiv+0x384>)
 80019f2:	445a      	add	r2, fp
 80019f4:	2a00      	cmp	r2, #0
 80019f6:	dc00      	bgt.n	80019fa <__aeabi_ddiv+0x266>
 80019f8:	e0aa      	b.n	8001b50 <__aeabi_ddiv+0x3bc>
 80019fa:	076b      	lsls	r3, r5, #29
 80019fc:	d000      	beq.n	8001a00 <__aeabi_ddiv+0x26c>
 80019fe:	e13d      	b.n	8001c7c <__aeabi_ddiv+0x4e8>
 8001a00:	08ed      	lsrs	r5, r5, #3
 8001a02:	4643      	mov	r3, r8
 8001a04:	01db      	lsls	r3, r3, #7
 8001a06:	d506      	bpl.n	8001a16 <__aeabi_ddiv+0x282>
 8001a08:	4642      	mov	r2, r8
 8001a0a:	4b44      	ldr	r3, [pc, #272]	; (8001b1c <__aeabi_ddiv+0x388>)
 8001a0c:	401a      	ands	r2, r3
 8001a0e:	4690      	mov	r8, r2
 8001a10:	2280      	movs	r2, #128	; 0x80
 8001a12:	00d2      	lsls	r2, r2, #3
 8001a14:	445a      	add	r2, fp
 8001a16:	4b42      	ldr	r3, [pc, #264]	; (8001b20 <__aeabi_ddiv+0x38c>)
 8001a18:	429a      	cmp	r2, r3
 8001a1a:	dd00      	ble.n	8001a1e <__aeabi_ddiv+0x28a>
 8001a1c:	e71f      	b.n	800185e <__aeabi_ddiv+0xca>
 8001a1e:	4643      	mov	r3, r8
 8001a20:	075b      	lsls	r3, r3, #29
 8001a22:	431d      	orrs	r5, r3
 8001a24:	4643      	mov	r3, r8
 8001a26:	0552      	lsls	r2, r2, #21
 8001a28:	025c      	lsls	r4, r3, #9
 8001a2a:	0b24      	lsrs	r4, r4, #12
 8001a2c:	0d53      	lsrs	r3, r2, #21
 8001a2e:	e708      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001a30:	4652      	mov	r2, sl
 8001a32:	4322      	orrs	r2, r4
 8001a34:	d100      	bne.n	8001a38 <__aeabi_ddiv+0x2a4>
 8001a36:	e07b      	b.n	8001b30 <__aeabi_ddiv+0x39c>
 8001a38:	2c00      	cmp	r4, #0
 8001a3a:	d100      	bne.n	8001a3e <__aeabi_ddiv+0x2aa>
 8001a3c:	e0fa      	b.n	8001c34 <__aeabi_ddiv+0x4a0>
 8001a3e:	0020      	movs	r0, r4
 8001a40:	f001 f99a 	bl	8002d78 <__clzsi2>
 8001a44:	0002      	movs	r2, r0
 8001a46:	3a0b      	subs	r2, #11
 8001a48:	231d      	movs	r3, #29
 8001a4a:	0001      	movs	r1, r0
 8001a4c:	1a9b      	subs	r3, r3, r2
 8001a4e:	4652      	mov	r2, sl
 8001a50:	3908      	subs	r1, #8
 8001a52:	40da      	lsrs	r2, r3
 8001a54:	408c      	lsls	r4, r1
 8001a56:	4314      	orrs	r4, r2
 8001a58:	4652      	mov	r2, sl
 8001a5a:	408a      	lsls	r2, r1
 8001a5c:	4b31      	ldr	r3, [pc, #196]	; (8001b24 <__aeabi_ddiv+0x390>)
 8001a5e:	4458      	add	r0, fp
 8001a60:	469b      	mov	fp, r3
 8001a62:	4483      	add	fp, r0
 8001a64:	2000      	movs	r0, #0
 8001a66:	e6d5      	b.n	8001814 <__aeabi_ddiv+0x80>
 8001a68:	464b      	mov	r3, r9
 8001a6a:	4323      	orrs	r3, r4
 8001a6c:	4698      	mov	r8, r3
 8001a6e:	d044      	beq.n	8001afa <__aeabi_ddiv+0x366>
 8001a70:	2c00      	cmp	r4, #0
 8001a72:	d100      	bne.n	8001a76 <__aeabi_ddiv+0x2e2>
 8001a74:	e0ce      	b.n	8001c14 <__aeabi_ddiv+0x480>
 8001a76:	0020      	movs	r0, r4
 8001a78:	f001 f97e 	bl	8002d78 <__clzsi2>
 8001a7c:	0001      	movs	r1, r0
 8001a7e:	0002      	movs	r2, r0
 8001a80:	390b      	subs	r1, #11
 8001a82:	231d      	movs	r3, #29
 8001a84:	1a5b      	subs	r3, r3, r1
 8001a86:	4649      	mov	r1, r9
 8001a88:	0010      	movs	r0, r2
 8001a8a:	40d9      	lsrs	r1, r3
 8001a8c:	3808      	subs	r0, #8
 8001a8e:	4084      	lsls	r4, r0
 8001a90:	000b      	movs	r3, r1
 8001a92:	464d      	mov	r5, r9
 8001a94:	4323      	orrs	r3, r4
 8001a96:	4698      	mov	r8, r3
 8001a98:	4085      	lsls	r5, r0
 8001a9a:	4823      	ldr	r0, [pc, #140]	; (8001b28 <__aeabi_ddiv+0x394>)
 8001a9c:	1a83      	subs	r3, r0, r2
 8001a9e:	469b      	mov	fp, r3
 8001aa0:	2300      	movs	r3, #0
 8001aa2:	4699      	mov	r9, r3
 8001aa4:	9300      	str	r3, [sp, #0]
 8001aa6:	e69a      	b.n	80017de <__aeabi_ddiv+0x4a>
 8001aa8:	464b      	mov	r3, r9
 8001aaa:	4323      	orrs	r3, r4
 8001aac:	4698      	mov	r8, r3
 8001aae:	d11d      	bne.n	8001aec <__aeabi_ddiv+0x358>
 8001ab0:	2308      	movs	r3, #8
 8001ab2:	4699      	mov	r9, r3
 8001ab4:	3b06      	subs	r3, #6
 8001ab6:	2500      	movs	r5, #0
 8001ab8:	4683      	mov	fp, r0
 8001aba:	9300      	str	r3, [sp, #0]
 8001abc:	e68f      	b.n	80017de <__aeabi_ddiv+0x4a>
 8001abe:	4652      	mov	r2, sl
 8001ac0:	4322      	orrs	r2, r4
 8001ac2:	d109      	bne.n	8001ad8 <__aeabi_ddiv+0x344>
 8001ac4:	2302      	movs	r3, #2
 8001ac6:	4649      	mov	r1, r9
 8001ac8:	4319      	orrs	r1, r3
 8001aca:	4b18      	ldr	r3, [pc, #96]	; (8001b2c <__aeabi_ddiv+0x398>)
 8001acc:	4689      	mov	r9, r1
 8001ace:	469c      	mov	ip, r3
 8001ad0:	2400      	movs	r4, #0
 8001ad2:	2002      	movs	r0, #2
 8001ad4:	44e3      	add	fp, ip
 8001ad6:	e69d      	b.n	8001814 <__aeabi_ddiv+0x80>
 8001ad8:	2303      	movs	r3, #3
 8001ada:	464a      	mov	r2, r9
 8001adc:	431a      	orrs	r2, r3
 8001ade:	4b13      	ldr	r3, [pc, #76]	; (8001b2c <__aeabi_ddiv+0x398>)
 8001ae0:	4691      	mov	r9, r2
 8001ae2:	469c      	mov	ip, r3
 8001ae4:	4652      	mov	r2, sl
 8001ae6:	2003      	movs	r0, #3
 8001ae8:	44e3      	add	fp, ip
 8001aea:	e693      	b.n	8001814 <__aeabi_ddiv+0x80>
 8001aec:	230c      	movs	r3, #12
 8001aee:	4699      	mov	r9, r3
 8001af0:	3b09      	subs	r3, #9
 8001af2:	46a0      	mov	r8, r4
 8001af4:	4683      	mov	fp, r0
 8001af6:	9300      	str	r3, [sp, #0]
 8001af8:	e671      	b.n	80017de <__aeabi_ddiv+0x4a>
 8001afa:	2304      	movs	r3, #4
 8001afc:	4699      	mov	r9, r3
 8001afe:	2300      	movs	r3, #0
 8001b00:	469b      	mov	fp, r3
 8001b02:	3301      	adds	r3, #1
 8001b04:	2500      	movs	r5, #0
 8001b06:	9300      	str	r3, [sp, #0]
 8001b08:	e669      	b.n	80017de <__aeabi_ddiv+0x4a>
 8001b0a:	46c0      	nop			; (mov r8, r8)
 8001b0c:	000007ff 	.word	0x000007ff
 8001b10:	fffffc01 	.word	0xfffffc01
 8001b14:	08008368 	.word	0x08008368
 8001b18:	000003ff 	.word	0x000003ff
 8001b1c:	feffffff 	.word	0xfeffffff
 8001b20:	000007fe 	.word	0x000007fe
 8001b24:	000003f3 	.word	0x000003f3
 8001b28:	fffffc0d 	.word	0xfffffc0d
 8001b2c:	fffff801 	.word	0xfffff801
 8001b30:	4649      	mov	r1, r9
 8001b32:	2301      	movs	r3, #1
 8001b34:	4319      	orrs	r1, r3
 8001b36:	4689      	mov	r9, r1
 8001b38:	2400      	movs	r4, #0
 8001b3a:	2001      	movs	r0, #1
 8001b3c:	e66a      	b.n	8001814 <__aeabi_ddiv+0x80>
 8001b3e:	2300      	movs	r3, #0
 8001b40:	2480      	movs	r4, #128	; 0x80
 8001b42:	469a      	mov	sl, r3
 8001b44:	2500      	movs	r5, #0
 8001b46:	4b8a      	ldr	r3, [pc, #552]	; (8001d70 <__aeabi_ddiv+0x5dc>)
 8001b48:	0324      	lsls	r4, r4, #12
 8001b4a:	e67a      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001b4c:	2501      	movs	r5, #1
 8001b4e:	426d      	negs	r5, r5
 8001b50:	2301      	movs	r3, #1
 8001b52:	1a9b      	subs	r3, r3, r2
 8001b54:	2b38      	cmp	r3, #56	; 0x38
 8001b56:	dd00      	ble.n	8001b5a <__aeabi_ddiv+0x3c6>
 8001b58:	e670      	b.n	800183c <__aeabi_ddiv+0xa8>
 8001b5a:	2b1f      	cmp	r3, #31
 8001b5c:	dc00      	bgt.n	8001b60 <__aeabi_ddiv+0x3cc>
 8001b5e:	e0bf      	b.n	8001ce0 <__aeabi_ddiv+0x54c>
 8001b60:	211f      	movs	r1, #31
 8001b62:	4249      	negs	r1, r1
 8001b64:	1a8a      	subs	r2, r1, r2
 8001b66:	4641      	mov	r1, r8
 8001b68:	40d1      	lsrs	r1, r2
 8001b6a:	000a      	movs	r2, r1
 8001b6c:	2b20      	cmp	r3, #32
 8001b6e:	d004      	beq.n	8001b7a <__aeabi_ddiv+0x3e6>
 8001b70:	4641      	mov	r1, r8
 8001b72:	4b80      	ldr	r3, [pc, #512]	; (8001d74 <__aeabi_ddiv+0x5e0>)
 8001b74:	445b      	add	r3, fp
 8001b76:	4099      	lsls	r1, r3
 8001b78:	430d      	orrs	r5, r1
 8001b7a:	1e6b      	subs	r3, r5, #1
 8001b7c:	419d      	sbcs	r5, r3
 8001b7e:	2307      	movs	r3, #7
 8001b80:	432a      	orrs	r2, r5
 8001b82:	001d      	movs	r5, r3
 8001b84:	2400      	movs	r4, #0
 8001b86:	4015      	ands	r5, r2
 8001b88:	4213      	tst	r3, r2
 8001b8a:	d100      	bne.n	8001b8e <__aeabi_ddiv+0x3fa>
 8001b8c:	e0d4      	b.n	8001d38 <__aeabi_ddiv+0x5a4>
 8001b8e:	210f      	movs	r1, #15
 8001b90:	2300      	movs	r3, #0
 8001b92:	4011      	ands	r1, r2
 8001b94:	2904      	cmp	r1, #4
 8001b96:	d100      	bne.n	8001b9a <__aeabi_ddiv+0x406>
 8001b98:	e0cb      	b.n	8001d32 <__aeabi_ddiv+0x59e>
 8001b9a:	1d11      	adds	r1, r2, #4
 8001b9c:	4291      	cmp	r1, r2
 8001b9e:	4192      	sbcs	r2, r2
 8001ba0:	4252      	negs	r2, r2
 8001ba2:	189b      	adds	r3, r3, r2
 8001ba4:	000a      	movs	r2, r1
 8001ba6:	0219      	lsls	r1, r3, #8
 8001ba8:	d400      	bmi.n	8001bac <__aeabi_ddiv+0x418>
 8001baa:	e0c2      	b.n	8001d32 <__aeabi_ddiv+0x59e>
 8001bac:	2301      	movs	r3, #1
 8001bae:	2400      	movs	r4, #0
 8001bb0:	2500      	movs	r5, #0
 8001bb2:	e646      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001bb4:	2380      	movs	r3, #128	; 0x80
 8001bb6:	4641      	mov	r1, r8
 8001bb8:	031b      	lsls	r3, r3, #12
 8001bba:	4219      	tst	r1, r3
 8001bbc:	d008      	beq.n	8001bd0 <__aeabi_ddiv+0x43c>
 8001bbe:	421c      	tst	r4, r3
 8001bc0:	d106      	bne.n	8001bd0 <__aeabi_ddiv+0x43c>
 8001bc2:	431c      	orrs	r4, r3
 8001bc4:	0324      	lsls	r4, r4, #12
 8001bc6:	46ba      	mov	sl, r7
 8001bc8:	0015      	movs	r5, r2
 8001bca:	4b69      	ldr	r3, [pc, #420]	; (8001d70 <__aeabi_ddiv+0x5dc>)
 8001bcc:	0b24      	lsrs	r4, r4, #12
 8001bce:	e638      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001bd0:	2480      	movs	r4, #128	; 0x80
 8001bd2:	4643      	mov	r3, r8
 8001bd4:	0324      	lsls	r4, r4, #12
 8001bd6:	431c      	orrs	r4, r3
 8001bd8:	0324      	lsls	r4, r4, #12
 8001bda:	46b2      	mov	sl, r6
 8001bdc:	4b64      	ldr	r3, [pc, #400]	; (8001d70 <__aeabi_ddiv+0x5dc>)
 8001bde:	0b24      	lsrs	r4, r4, #12
 8001be0:	e62f      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	d100      	bne.n	8001be8 <__aeabi_ddiv+0x454>
 8001be6:	e703      	b.n	80019f0 <__aeabi_ddiv+0x25c>
 8001be8:	19a6      	adds	r6, r4, r6
 8001bea:	1e68      	subs	r0, r5, #1
 8001bec:	42a6      	cmp	r6, r4
 8001bee:	d200      	bcs.n	8001bf2 <__aeabi_ddiv+0x45e>
 8001bf0:	e08d      	b.n	8001d0e <__aeabi_ddiv+0x57a>
 8001bf2:	428e      	cmp	r6, r1
 8001bf4:	d200      	bcs.n	8001bf8 <__aeabi_ddiv+0x464>
 8001bf6:	e0a3      	b.n	8001d40 <__aeabi_ddiv+0x5ac>
 8001bf8:	d100      	bne.n	8001bfc <__aeabi_ddiv+0x468>
 8001bfa:	e0b3      	b.n	8001d64 <__aeabi_ddiv+0x5d0>
 8001bfc:	0005      	movs	r5, r0
 8001bfe:	e6f5      	b.n	80019ec <__aeabi_ddiv+0x258>
 8001c00:	42aa      	cmp	r2, r5
 8001c02:	d900      	bls.n	8001c06 <__aeabi_ddiv+0x472>
 8001c04:	e639      	b.n	800187a <__aeabi_ddiv+0xe6>
 8001c06:	4643      	mov	r3, r8
 8001c08:	07de      	lsls	r6, r3, #31
 8001c0a:	0858      	lsrs	r0, r3, #1
 8001c0c:	086b      	lsrs	r3, r5, #1
 8001c0e:	431e      	orrs	r6, r3
 8001c10:	07ed      	lsls	r5, r5, #31
 8001c12:	e639      	b.n	8001888 <__aeabi_ddiv+0xf4>
 8001c14:	4648      	mov	r0, r9
 8001c16:	f001 f8af 	bl	8002d78 <__clzsi2>
 8001c1a:	0001      	movs	r1, r0
 8001c1c:	0002      	movs	r2, r0
 8001c1e:	3115      	adds	r1, #21
 8001c20:	3220      	adds	r2, #32
 8001c22:	291c      	cmp	r1, #28
 8001c24:	dc00      	bgt.n	8001c28 <__aeabi_ddiv+0x494>
 8001c26:	e72c      	b.n	8001a82 <__aeabi_ddiv+0x2ee>
 8001c28:	464b      	mov	r3, r9
 8001c2a:	3808      	subs	r0, #8
 8001c2c:	4083      	lsls	r3, r0
 8001c2e:	2500      	movs	r5, #0
 8001c30:	4698      	mov	r8, r3
 8001c32:	e732      	b.n	8001a9a <__aeabi_ddiv+0x306>
 8001c34:	f001 f8a0 	bl	8002d78 <__clzsi2>
 8001c38:	0003      	movs	r3, r0
 8001c3a:	001a      	movs	r2, r3
 8001c3c:	3215      	adds	r2, #21
 8001c3e:	3020      	adds	r0, #32
 8001c40:	2a1c      	cmp	r2, #28
 8001c42:	dc00      	bgt.n	8001c46 <__aeabi_ddiv+0x4b2>
 8001c44:	e700      	b.n	8001a48 <__aeabi_ddiv+0x2b4>
 8001c46:	4654      	mov	r4, sl
 8001c48:	3b08      	subs	r3, #8
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	409c      	lsls	r4, r3
 8001c4e:	e705      	b.n	8001a5c <__aeabi_ddiv+0x2c8>
 8001c50:	1936      	adds	r6, r6, r4
 8001c52:	3b01      	subs	r3, #1
 8001c54:	42b4      	cmp	r4, r6
 8001c56:	d900      	bls.n	8001c5a <__aeabi_ddiv+0x4c6>
 8001c58:	e6a6      	b.n	80019a8 <__aeabi_ddiv+0x214>
 8001c5a:	42b2      	cmp	r2, r6
 8001c5c:	d800      	bhi.n	8001c60 <__aeabi_ddiv+0x4cc>
 8001c5e:	e6a3      	b.n	80019a8 <__aeabi_ddiv+0x214>
 8001c60:	1e83      	subs	r3, r0, #2
 8001c62:	1936      	adds	r6, r6, r4
 8001c64:	e6a0      	b.n	80019a8 <__aeabi_ddiv+0x214>
 8001c66:	1909      	adds	r1, r1, r4
 8001c68:	3d01      	subs	r5, #1
 8001c6a:	428c      	cmp	r4, r1
 8001c6c:	d900      	bls.n	8001c70 <__aeabi_ddiv+0x4dc>
 8001c6e:	e68d      	b.n	800198c <__aeabi_ddiv+0x1f8>
 8001c70:	428a      	cmp	r2, r1
 8001c72:	d800      	bhi.n	8001c76 <__aeabi_ddiv+0x4e2>
 8001c74:	e68a      	b.n	800198c <__aeabi_ddiv+0x1f8>
 8001c76:	1e85      	subs	r5, r0, #2
 8001c78:	1909      	adds	r1, r1, r4
 8001c7a:	e687      	b.n	800198c <__aeabi_ddiv+0x1f8>
 8001c7c:	230f      	movs	r3, #15
 8001c7e:	402b      	ands	r3, r5
 8001c80:	2b04      	cmp	r3, #4
 8001c82:	d100      	bne.n	8001c86 <__aeabi_ddiv+0x4f2>
 8001c84:	e6bc      	b.n	8001a00 <__aeabi_ddiv+0x26c>
 8001c86:	2305      	movs	r3, #5
 8001c88:	425b      	negs	r3, r3
 8001c8a:	42ab      	cmp	r3, r5
 8001c8c:	419b      	sbcs	r3, r3
 8001c8e:	3504      	adds	r5, #4
 8001c90:	425b      	negs	r3, r3
 8001c92:	08ed      	lsrs	r5, r5, #3
 8001c94:	4498      	add	r8, r3
 8001c96:	e6b4      	b.n	8001a02 <__aeabi_ddiv+0x26e>
 8001c98:	42af      	cmp	r7, r5
 8001c9a:	d900      	bls.n	8001c9e <__aeabi_ddiv+0x50a>
 8001c9c:	e660      	b.n	8001960 <__aeabi_ddiv+0x1cc>
 8001c9e:	4282      	cmp	r2, r0
 8001ca0:	d804      	bhi.n	8001cac <__aeabi_ddiv+0x518>
 8001ca2:	d000      	beq.n	8001ca6 <__aeabi_ddiv+0x512>
 8001ca4:	e65c      	b.n	8001960 <__aeabi_ddiv+0x1cc>
 8001ca6:	42ae      	cmp	r6, r5
 8001ca8:	d800      	bhi.n	8001cac <__aeabi_ddiv+0x518>
 8001caa:	e659      	b.n	8001960 <__aeabi_ddiv+0x1cc>
 8001cac:	2302      	movs	r3, #2
 8001cae:	425b      	negs	r3, r3
 8001cb0:	469c      	mov	ip, r3
 8001cb2:	9b00      	ldr	r3, [sp, #0]
 8001cb4:	44e0      	add	r8, ip
 8001cb6:	469c      	mov	ip, r3
 8001cb8:	4465      	add	r5, ip
 8001cba:	429d      	cmp	r5, r3
 8001cbc:	419b      	sbcs	r3, r3
 8001cbe:	425b      	negs	r3, r3
 8001cc0:	191b      	adds	r3, r3, r4
 8001cc2:	18c0      	adds	r0, r0, r3
 8001cc4:	e64d      	b.n	8001962 <__aeabi_ddiv+0x1ce>
 8001cc6:	428a      	cmp	r2, r1
 8001cc8:	d800      	bhi.n	8001ccc <__aeabi_ddiv+0x538>
 8001cca:	e60e      	b.n	80018ea <__aeabi_ddiv+0x156>
 8001ccc:	1e83      	subs	r3, r0, #2
 8001cce:	1909      	adds	r1, r1, r4
 8001cd0:	e60b      	b.n	80018ea <__aeabi_ddiv+0x156>
 8001cd2:	428a      	cmp	r2, r1
 8001cd4:	d800      	bhi.n	8001cd8 <__aeabi_ddiv+0x544>
 8001cd6:	e5f4      	b.n	80018c2 <__aeabi_ddiv+0x12e>
 8001cd8:	1e83      	subs	r3, r0, #2
 8001cda:	4698      	mov	r8, r3
 8001cdc:	1909      	adds	r1, r1, r4
 8001cde:	e5f0      	b.n	80018c2 <__aeabi_ddiv+0x12e>
 8001ce0:	4925      	ldr	r1, [pc, #148]	; (8001d78 <__aeabi_ddiv+0x5e4>)
 8001ce2:	0028      	movs	r0, r5
 8001ce4:	4459      	add	r1, fp
 8001ce6:	408d      	lsls	r5, r1
 8001ce8:	4642      	mov	r2, r8
 8001cea:	408a      	lsls	r2, r1
 8001cec:	1e69      	subs	r1, r5, #1
 8001cee:	418d      	sbcs	r5, r1
 8001cf0:	4641      	mov	r1, r8
 8001cf2:	40d8      	lsrs	r0, r3
 8001cf4:	40d9      	lsrs	r1, r3
 8001cf6:	4302      	orrs	r2, r0
 8001cf8:	432a      	orrs	r2, r5
 8001cfa:	000b      	movs	r3, r1
 8001cfc:	0751      	lsls	r1, r2, #29
 8001cfe:	d100      	bne.n	8001d02 <__aeabi_ddiv+0x56e>
 8001d00:	e751      	b.n	8001ba6 <__aeabi_ddiv+0x412>
 8001d02:	210f      	movs	r1, #15
 8001d04:	4011      	ands	r1, r2
 8001d06:	2904      	cmp	r1, #4
 8001d08:	d000      	beq.n	8001d0c <__aeabi_ddiv+0x578>
 8001d0a:	e746      	b.n	8001b9a <__aeabi_ddiv+0x406>
 8001d0c:	e74b      	b.n	8001ba6 <__aeabi_ddiv+0x412>
 8001d0e:	0005      	movs	r5, r0
 8001d10:	428e      	cmp	r6, r1
 8001d12:	d000      	beq.n	8001d16 <__aeabi_ddiv+0x582>
 8001d14:	e66a      	b.n	80019ec <__aeabi_ddiv+0x258>
 8001d16:	9a00      	ldr	r2, [sp, #0]
 8001d18:	4293      	cmp	r3, r2
 8001d1a:	d000      	beq.n	8001d1e <__aeabi_ddiv+0x58a>
 8001d1c:	e666      	b.n	80019ec <__aeabi_ddiv+0x258>
 8001d1e:	e667      	b.n	80019f0 <__aeabi_ddiv+0x25c>
 8001d20:	4a16      	ldr	r2, [pc, #88]	; (8001d7c <__aeabi_ddiv+0x5e8>)
 8001d22:	445a      	add	r2, fp
 8001d24:	2a00      	cmp	r2, #0
 8001d26:	dc00      	bgt.n	8001d2a <__aeabi_ddiv+0x596>
 8001d28:	e710      	b.n	8001b4c <__aeabi_ddiv+0x3b8>
 8001d2a:	2301      	movs	r3, #1
 8001d2c:	2500      	movs	r5, #0
 8001d2e:	4498      	add	r8, r3
 8001d30:	e667      	b.n	8001a02 <__aeabi_ddiv+0x26e>
 8001d32:	075d      	lsls	r5, r3, #29
 8001d34:	025b      	lsls	r3, r3, #9
 8001d36:	0b1c      	lsrs	r4, r3, #12
 8001d38:	08d2      	lsrs	r2, r2, #3
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	4315      	orrs	r5, r2
 8001d3e:	e580      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001d40:	9800      	ldr	r0, [sp, #0]
 8001d42:	3d02      	subs	r5, #2
 8001d44:	0042      	lsls	r2, r0, #1
 8001d46:	4282      	cmp	r2, r0
 8001d48:	41bf      	sbcs	r7, r7
 8001d4a:	427f      	negs	r7, r7
 8001d4c:	193c      	adds	r4, r7, r4
 8001d4e:	1936      	adds	r6, r6, r4
 8001d50:	9200      	str	r2, [sp, #0]
 8001d52:	e7dd      	b.n	8001d10 <__aeabi_ddiv+0x57c>
 8001d54:	2480      	movs	r4, #128	; 0x80
 8001d56:	4643      	mov	r3, r8
 8001d58:	0324      	lsls	r4, r4, #12
 8001d5a:	431c      	orrs	r4, r3
 8001d5c:	0324      	lsls	r4, r4, #12
 8001d5e:	4b04      	ldr	r3, [pc, #16]	; (8001d70 <__aeabi_ddiv+0x5dc>)
 8001d60:	0b24      	lsrs	r4, r4, #12
 8001d62:	e56e      	b.n	8001842 <__aeabi_ddiv+0xae>
 8001d64:	9a00      	ldr	r2, [sp, #0]
 8001d66:	429a      	cmp	r2, r3
 8001d68:	d3ea      	bcc.n	8001d40 <__aeabi_ddiv+0x5ac>
 8001d6a:	0005      	movs	r5, r0
 8001d6c:	e7d3      	b.n	8001d16 <__aeabi_ddiv+0x582>
 8001d6e:	46c0      	nop			; (mov r8, r8)
 8001d70:	000007ff 	.word	0x000007ff
 8001d74:	0000043e 	.word	0x0000043e
 8001d78:	0000041e 	.word	0x0000041e
 8001d7c:	000003ff 	.word	0x000003ff

08001d80 <__eqdf2>:
 8001d80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d82:	464e      	mov	r6, r9
 8001d84:	4645      	mov	r5, r8
 8001d86:	46de      	mov	lr, fp
 8001d88:	4657      	mov	r7, sl
 8001d8a:	4690      	mov	r8, r2
 8001d8c:	b5e0      	push	{r5, r6, r7, lr}
 8001d8e:	0017      	movs	r7, r2
 8001d90:	031a      	lsls	r2, r3, #12
 8001d92:	0b12      	lsrs	r2, r2, #12
 8001d94:	0005      	movs	r5, r0
 8001d96:	4684      	mov	ip, r0
 8001d98:	4819      	ldr	r0, [pc, #100]	; (8001e00 <__eqdf2+0x80>)
 8001d9a:	030e      	lsls	r6, r1, #12
 8001d9c:	004c      	lsls	r4, r1, #1
 8001d9e:	4691      	mov	r9, r2
 8001da0:	005a      	lsls	r2, r3, #1
 8001da2:	0fdb      	lsrs	r3, r3, #31
 8001da4:	469b      	mov	fp, r3
 8001da6:	0b36      	lsrs	r6, r6, #12
 8001da8:	0d64      	lsrs	r4, r4, #21
 8001daa:	0fc9      	lsrs	r1, r1, #31
 8001dac:	0d52      	lsrs	r2, r2, #21
 8001dae:	4284      	cmp	r4, r0
 8001db0:	d019      	beq.n	8001de6 <__eqdf2+0x66>
 8001db2:	4282      	cmp	r2, r0
 8001db4:	d010      	beq.n	8001dd8 <__eqdf2+0x58>
 8001db6:	2001      	movs	r0, #1
 8001db8:	4294      	cmp	r4, r2
 8001dba:	d10e      	bne.n	8001dda <__eqdf2+0x5a>
 8001dbc:	454e      	cmp	r6, r9
 8001dbe:	d10c      	bne.n	8001dda <__eqdf2+0x5a>
 8001dc0:	2001      	movs	r0, #1
 8001dc2:	45c4      	cmp	ip, r8
 8001dc4:	d109      	bne.n	8001dda <__eqdf2+0x5a>
 8001dc6:	4559      	cmp	r1, fp
 8001dc8:	d017      	beq.n	8001dfa <__eqdf2+0x7a>
 8001dca:	2c00      	cmp	r4, #0
 8001dcc:	d105      	bne.n	8001dda <__eqdf2+0x5a>
 8001dce:	0030      	movs	r0, r6
 8001dd0:	4328      	orrs	r0, r5
 8001dd2:	1e43      	subs	r3, r0, #1
 8001dd4:	4198      	sbcs	r0, r3
 8001dd6:	e000      	b.n	8001dda <__eqdf2+0x5a>
 8001dd8:	2001      	movs	r0, #1
 8001dda:	bcf0      	pop	{r4, r5, r6, r7}
 8001ddc:	46bb      	mov	fp, r7
 8001dde:	46b2      	mov	sl, r6
 8001de0:	46a9      	mov	r9, r5
 8001de2:	46a0      	mov	r8, r4
 8001de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001de6:	0033      	movs	r3, r6
 8001de8:	2001      	movs	r0, #1
 8001dea:	432b      	orrs	r3, r5
 8001dec:	d1f5      	bne.n	8001dda <__eqdf2+0x5a>
 8001dee:	42a2      	cmp	r2, r4
 8001df0:	d1f3      	bne.n	8001dda <__eqdf2+0x5a>
 8001df2:	464b      	mov	r3, r9
 8001df4:	433b      	orrs	r3, r7
 8001df6:	d1f0      	bne.n	8001dda <__eqdf2+0x5a>
 8001df8:	e7e2      	b.n	8001dc0 <__eqdf2+0x40>
 8001dfa:	2000      	movs	r0, #0
 8001dfc:	e7ed      	b.n	8001dda <__eqdf2+0x5a>
 8001dfe:	46c0      	nop			; (mov r8, r8)
 8001e00:	000007ff 	.word	0x000007ff

08001e04 <__gedf2>:
 8001e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e06:	4647      	mov	r7, r8
 8001e08:	46ce      	mov	lr, r9
 8001e0a:	0004      	movs	r4, r0
 8001e0c:	0018      	movs	r0, r3
 8001e0e:	0016      	movs	r6, r2
 8001e10:	031b      	lsls	r3, r3, #12
 8001e12:	0b1b      	lsrs	r3, r3, #12
 8001e14:	4d2d      	ldr	r5, [pc, #180]	; (8001ecc <__gedf2+0xc8>)
 8001e16:	004a      	lsls	r2, r1, #1
 8001e18:	4699      	mov	r9, r3
 8001e1a:	b580      	push	{r7, lr}
 8001e1c:	0043      	lsls	r3, r0, #1
 8001e1e:	030f      	lsls	r7, r1, #12
 8001e20:	46a4      	mov	ip, r4
 8001e22:	46b0      	mov	r8, r6
 8001e24:	0b3f      	lsrs	r7, r7, #12
 8001e26:	0d52      	lsrs	r2, r2, #21
 8001e28:	0fc9      	lsrs	r1, r1, #31
 8001e2a:	0d5b      	lsrs	r3, r3, #21
 8001e2c:	0fc0      	lsrs	r0, r0, #31
 8001e2e:	42aa      	cmp	r2, r5
 8001e30:	d021      	beq.n	8001e76 <__gedf2+0x72>
 8001e32:	42ab      	cmp	r3, r5
 8001e34:	d013      	beq.n	8001e5e <__gedf2+0x5a>
 8001e36:	2a00      	cmp	r2, #0
 8001e38:	d122      	bne.n	8001e80 <__gedf2+0x7c>
 8001e3a:	433c      	orrs	r4, r7
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d102      	bne.n	8001e46 <__gedf2+0x42>
 8001e40:	464d      	mov	r5, r9
 8001e42:	432e      	orrs	r6, r5
 8001e44:	d022      	beq.n	8001e8c <__gedf2+0x88>
 8001e46:	2c00      	cmp	r4, #0
 8001e48:	d010      	beq.n	8001e6c <__gedf2+0x68>
 8001e4a:	4281      	cmp	r1, r0
 8001e4c:	d022      	beq.n	8001e94 <__gedf2+0x90>
 8001e4e:	2002      	movs	r0, #2
 8001e50:	3901      	subs	r1, #1
 8001e52:	4008      	ands	r0, r1
 8001e54:	3801      	subs	r0, #1
 8001e56:	bcc0      	pop	{r6, r7}
 8001e58:	46b9      	mov	r9, r7
 8001e5a:	46b0      	mov	r8, r6
 8001e5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e5e:	464d      	mov	r5, r9
 8001e60:	432e      	orrs	r6, r5
 8001e62:	d129      	bne.n	8001eb8 <__gedf2+0xb4>
 8001e64:	2a00      	cmp	r2, #0
 8001e66:	d1f0      	bne.n	8001e4a <__gedf2+0x46>
 8001e68:	433c      	orrs	r4, r7
 8001e6a:	d1ee      	bne.n	8001e4a <__gedf2+0x46>
 8001e6c:	2800      	cmp	r0, #0
 8001e6e:	d1f2      	bne.n	8001e56 <__gedf2+0x52>
 8001e70:	2001      	movs	r0, #1
 8001e72:	4240      	negs	r0, r0
 8001e74:	e7ef      	b.n	8001e56 <__gedf2+0x52>
 8001e76:	003d      	movs	r5, r7
 8001e78:	4325      	orrs	r5, r4
 8001e7a:	d11d      	bne.n	8001eb8 <__gedf2+0xb4>
 8001e7c:	4293      	cmp	r3, r2
 8001e7e:	d0ee      	beq.n	8001e5e <__gedf2+0x5a>
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	d1e2      	bne.n	8001e4a <__gedf2+0x46>
 8001e84:	464c      	mov	r4, r9
 8001e86:	4326      	orrs	r6, r4
 8001e88:	d1df      	bne.n	8001e4a <__gedf2+0x46>
 8001e8a:	e7e0      	b.n	8001e4e <__gedf2+0x4a>
 8001e8c:	2000      	movs	r0, #0
 8001e8e:	2c00      	cmp	r4, #0
 8001e90:	d0e1      	beq.n	8001e56 <__gedf2+0x52>
 8001e92:	e7dc      	b.n	8001e4e <__gedf2+0x4a>
 8001e94:	429a      	cmp	r2, r3
 8001e96:	dc0a      	bgt.n	8001eae <__gedf2+0xaa>
 8001e98:	dbe8      	blt.n	8001e6c <__gedf2+0x68>
 8001e9a:	454f      	cmp	r7, r9
 8001e9c:	d8d7      	bhi.n	8001e4e <__gedf2+0x4a>
 8001e9e:	d00e      	beq.n	8001ebe <__gedf2+0xba>
 8001ea0:	2000      	movs	r0, #0
 8001ea2:	454f      	cmp	r7, r9
 8001ea4:	d2d7      	bcs.n	8001e56 <__gedf2+0x52>
 8001ea6:	2900      	cmp	r1, #0
 8001ea8:	d0e2      	beq.n	8001e70 <__gedf2+0x6c>
 8001eaa:	0008      	movs	r0, r1
 8001eac:	e7d3      	b.n	8001e56 <__gedf2+0x52>
 8001eae:	4243      	negs	r3, r0
 8001eb0:	4158      	adcs	r0, r3
 8001eb2:	0040      	lsls	r0, r0, #1
 8001eb4:	3801      	subs	r0, #1
 8001eb6:	e7ce      	b.n	8001e56 <__gedf2+0x52>
 8001eb8:	2002      	movs	r0, #2
 8001eba:	4240      	negs	r0, r0
 8001ebc:	e7cb      	b.n	8001e56 <__gedf2+0x52>
 8001ebe:	45c4      	cmp	ip, r8
 8001ec0:	d8c5      	bhi.n	8001e4e <__gedf2+0x4a>
 8001ec2:	2000      	movs	r0, #0
 8001ec4:	45c4      	cmp	ip, r8
 8001ec6:	d2c6      	bcs.n	8001e56 <__gedf2+0x52>
 8001ec8:	e7ed      	b.n	8001ea6 <__gedf2+0xa2>
 8001eca:	46c0      	nop			; (mov r8, r8)
 8001ecc:	000007ff 	.word	0x000007ff

08001ed0 <__ledf2>:
 8001ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ed2:	4647      	mov	r7, r8
 8001ed4:	46ce      	mov	lr, r9
 8001ed6:	0004      	movs	r4, r0
 8001ed8:	0018      	movs	r0, r3
 8001eda:	0016      	movs	r6, r2
 8001edc:	031b      	lsls	r3, r3, #12
 8001ede:	0b1b      	lsrs	r3, r3, #12
 8001ee0:	4d2c      	ldr	r5, [pc, #176]	; (8001f94 <__ledf2+0xc4>)
 8001ee2:	004a      	lsls	r2, r1, #1
 8001ee4:	4699      	mov	r9, r3
 8001ee6:	b580      	push	{r7, lr}
 8001ee8:	0043      	lsls	r3, r0, #1
 8001eea:	030f      	lsls	r7, r1, #12
 8001eec:	46a4      	mov	ip, r4
 8001eee:	46b0      	mov	r8, r6
 8001ef0:	0b3f      	lsrs	r7, r7, #12
 8001ef2:	0d52      	lsrs	r2, r2, #21
 8001ef4:	0fc9      	lsrs	r1, r1, #31
 8001ef6:	0d5b      	lsrs	r3, r3, #21
 8001ef8:	0fc0      	lsrs	r0, r0, #31
 8001efa:	42aa      	cmp	r2, r5
 8001efc:	d00d      	beq.n	8001f1a <__ledf2+0x4a>
 8001efe:	42ab      	cmp	r3, r5
 8001f00:	d010      	beq.n	8001f24 <__ledf2+0x54>
 8001f02:	2a00      	cmp	r2, #0
 8001f04:	d127      	bne.n	8001f56 <__ledf2+0x86>
 8001f06:	433c      	orrs	r4, r7
 8001f08:	2b00      	cmp	r3, #0
 8001f0a:	d111      	bne.n	8001f30 <__ledf2+0x60>
 8001f0c:	464d      	mov	r5, r9
 8001f0e:	432e      	orrs	r6, r5
 8001f10:	d10e      	bne.n	8001f30 <__ledf2+0x60>
 8001f12:	2000      	movs	r0, #0
 8001f14:	2c00      	cmp	r4, #0
 8001f16:	d015      	beq.n	8001f44 <__ledf2+0x74>
 8001f18:	e00e      	b.n	8001f38 <__ledf2+0x68>
 8001f1a:	003d      	movs	r5, r7
 8001f1c:	4325      	orrs	r5, r4
 8001f1e:	d110      	bne.n	8001f42 <__ledf2+0x72>
 8001f20:	4293      	cmp	r3, r2
 8001f22:	d118      	bne.n	8001f56 <__ledf2+0x86>
 8001f24:	464d      	mov	r5, r9
 8001f26:	432e      	orrs	r6, r5
 8001f28:	d10b      	bne.n	8001f42 <__ledf2+0x72>
 8001f2a:	2a00      	cmp	r2, #0
 8001f2c:	d102      	bne.n	8001f34 <__ledf2+0x64>
 8001f2e:	433c      	orrs	r4, r7
 8001f30:	2c00      	cmp	r4, #0
 8001f32:	d00b      	beq.n	8001f4c <__ledf2+0x7c>
 8001f34:	4281      	cmp	r1, r0
 8001f36:	d014      	beq.n	8001f62 <__ledf2+0x92>
 8001f38:	2002      	movs	r0, #2
 8001f3a:	3901      	subs	r1, #1
 8001f3c:	4008      	ands	r0, r1
 8001f3e:	3801      	subs	r0, #1
 8001f40:	e000      	b.n	8001f44 <__ledf2+0x74>
 8001f42:	2002      	movs	r0, #2
 8001f44:	bcc0      	pop	{r6, r7}
 8001f46:	46b9      	mov	r9, r7
 8001f48:	46b0      	mov	r8, r6
 8001f4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f4c:	2800      	cmp	r0, #0
 8001f4e:	d1f9      	bne.n	8001f44 <__ledf2+0x74>
 8001f50:	2001      	movs	r0, #1
 8001f52:	4240      	negs	r0, r0
 8001f54:	e7f6      	b.n	8001f44 <__ledf2+0x74>
 8001f56:	2b00      	cmp	r3, #0
 8001f58:	d1ec      	bne.n	8001f34 <__ledf2+0x64>
 8001f5a:	464c      	mov	r4, r9
 8001f5c:	4326      	orrs	r6, r4
 8001f5e:	d1e9      	bne.n	8001f34 <__ledf2+0x64>
 8001f60:	e7ea      	b.n	8001f38 <__ledf2+0x68>
 8001f62:	429a      	cmp	r2, r3
 8001f64:	dd04      	ble.n	8001f70 <__ledf2+0xa0>
 8001f66:	4243      	negs	r3, r0
 8001f68:	4158      	adcs	r0, r3
 8001f6a:	0040      	lsls	r0, r0, #1
 8001f6c:	3801      	subs	r0, #1
 8001f6e:	e7e9      	b.n	8001f44 <__ledf2+0x74>
 8001f70:	429a      	cmp	r2, r3
 8001f72:	dbeb      	blt.n	8001f4c <__ledf2+0x7c>
 8001f74:	454f      	cmp	r7, r9
 8001f76:	d8df      	bhi.n	8001f38 <__ledf2+0x68>
 8001f78:	d006      	beq.n	8001f88 <__ledf2+0xb8>
 8001f7a:	2000      	movs	r0, #0
 8001f7c:	454f      	cmp	r7, r9
 8001f7e:	d2e1      	bcs.n	8001f44 <__ledf2+0x74>
 8001f80:	2900      	cmp	r1, #0
 8001f82:	d0e5      	beq.n	8001f50 <__ledf2+0x80>
 8001f84:	0008      	movs	r0, r1
 8001f86:	e7dd      	b.n	8001f44 <__ledf2+0x74>
 8001f88:	45c4      	cmp	ip, r8
 8001f8a:	d8d5      	bhi.n	8001f38 <__ledf2+0x68>
 8001f8c:	2000      	movs	r0, #0
 8001f8e:	45c4      	cmp	ip, r8
 8001f90:	d2d8      	bcs.n	8001f44 <__ledf2+0x74>
 8001f92:	e7f5      	b.n	8001f80 <__ledf2+0xb0>
 8001f94:	000007ff 	.word	0x000007ff

08001f98 <__aeabi_dmul>:
 8001f98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f9a:	4657      	mov	r7, sl
 8001f9c:	464e      	mov	r6, r9
 8001f9e:	4645      	mov	r5, r8
 8001fa0:	46de      	mov	lr, fp
 8001fa2:	b5e0      	push	{r5, r6, r7, lr}
 8001fa4:	4698      	mov	r8, r3
 8001fa6:	030c      	lsls	r4, r1, #12
 8001fa8:	004b      	lsls	r3, r1, #1
 8001faa:	0006      	movs	r6, r0
 8001fac:	4692      	mov	sl, r2
 8001fae:	b087      	sub	sp, #28
 8001fb0:	0b24      	lsrs	r4, r4, #12
 8001fb2:	0d5b      	lsrs	r3, r3, #21
 8001fb4:	0fcf      	lsrs	r7, r1, #31
 8001fb6:	2b00      	cmp	r3, #0
 8001fb8:	d100      	bne.n	8001fbc <__aeabi_dmul+0x24>
 8001fba:	e15c      	b.n	8002276 <__aeabi_dmul+0x2de>
 8001fbc:	4ad9      	ldr	r2, [pc, #868]	; (8002324 <__aeabi_dmul+0x38c>)
 8001fbe:	4293      	cmp	r3, r2
 8001fc0:	d100      	bne.n	8001fc4 <__aeabi_dmul+0x2c>
 8001fc2:	e175      	b.n	80022b0 <__aeabi_dmul+0x318>
 8001fc4:	0f42      	lsrs	r2, r0, #29
 8001fc6:	00e4      	lsls	r4, r4, #3
 8001fc8:	4314      	orrs	r4, r2
 8001fca:	2280      	movs	r2, #128	; 0x80
 8001fcc:	0412      	lsls	r2, r2, #16
 8001fce:	4314      	orrs	r4, r2
 8001fd0:	4ad5      	ldr	r2, [pc, #852]	; (8002328 <__aeabi_dmul+0x390>)
 8001fd2:	00c5      	lsls	r5, r0, #3
 8001fd4:	4694      	mov	ip, r2
 8001fd6:	4463      	add	r3, ip
 8001fd8:	9300      	str	r3, [sp, #0]
 8001fda:	2300      	movs	r3, #0
 8001fdc:	4699      	mov	r9, r3
 8001fde:	469b      	mov	fp, r3
 8001fe0:	4643      	mov	r3, r8
 8001fe2:	4642      	mov	r2, r8
 8001fe4:	031e      	lsls	r6, r3, #12
 8001fe6:	0fd2      	lsrs	r2, r2, #31
 8001fe8:	005b      	lsls	r3, r3, #1
 8001fea:	4650      	mov	r0, sl
 8001fec:	4690      	mov	r8, r2
 8001fee:	0b36      	lsrs	r6, r6, #12
 8001ff0:	0d5b      	lsrs	r3, r3, #21
 8001ff2:	d100      	bne.n	8001ff6 <__aeabi_dmul+0x5e>
 8001ff4:	e120      	b.n	8002238 <__aeabi_dmul+0x2a0>
 8001ff6:	4acb      	ldr	r2, [pc, #812]	; (8002324 <__aeabi_dmul+0x38c>)
 8001ff8:	4293      	cmp	r3, r2
 8001ffa:	d100      	bne.n	8001ffe <__aeabi_dmul+0x66>
 8001ffc:	e162      	b.n	80022c4 <__aeabi_dmul+0x32c>
 8001ffe:	49ca      	ldr	r1, [pc, #808]	; (8002328 <__aeabi_dmul+0x390>)
 8002000:	0f42      	lsrs	r2, r0, #29
 8002002:	468c      	mov	ip, r1
 8002004:	9900      	ldr	r1, [sp, #0]
 8002006:	4463      	add	r3, ip
 8002008:	00f6      	lsls	r6, r6, #3
 800200a:	468c      	mov	ip, r1
 800200c:	4316      	orrs	r6, r2
 800200e:	2280      	movs	r2, #128	; 0x80
 8002010:	449c      	add	ip, r3
 8002012:	0412      	lsls	r2, r2, #16
 8002014:	4663      	mov	r3, ip
 8002016:	4316      	orrs	r6, r2
 8002018:	00c2      	lsls	r2, r0, #3
 800201a:	2000      	movs	r0, #0
 800201c:	9300      	str	r3, [sp, #0]
 800201e:	9900      	ldr	r1, [sp, #0]
 8002020:	4643      	mov	r3, r8
 8002022:	3101      	adds	r1, #1
 8002024:	468c      	mov	ip, r1
 8002026:	4649      	mov	r1, r9
 8002028:	407b      	eors	r3, r7
 800202a:	9301      	str	r3, [sp, #4]
 800202c:	290f      	cmp	r1, #15
 800202e:	d826      	bhi.n	800207e <__aeabi_dmul+0xe6>
 8002030:	4bbe      	ldr	r3, [pc, #760]	; (800232c <__aeabi_dmul+0x394>)
 8002032:	0089      	lsls	r1, r1, #2
 8002034:	5859      	ldr	r1, [r3, r1]
 8002036:	468f      	mov	pc, r1
 8002038:	4643      	mov	r3, r8
 800203a:	9301      	str	r3, [sp, #4]
 800203c:	0034      	movs	r4, r6
 800203e:	0015      	movs	r5, r2
 8002040:	4683      	mov	fp, r0
 8002042:	465b      	mov	r3, fp
 8002044:	2b02      	cmp	r3, #2
 8002046:	d016      	beq.n	8002076 <__aeabi_dmul+0xde>
 8002048:	2b03      	cmp	r3, #3
 800204a:	d100      	bne.n	800204e <__aeabi_dmul+0xb6>
 800204c:	e203      	b.n	8002456 <__aeabi_dmul+0x4be>
 800204e:	2b01      	cmp	r3, #1
 8002050:	d000      	beq.n	8002054 <__aeabi_dmul+0xbc>
 8002052:	e0cd      	b.n	80021f0 <__aeabi_dmul+0x258>
 8002054:	2200      	movs	r2, #0
 8002056:	2400      	movs	r4, #0
 8002058:	2500      	movs	r5, #0
 800205a:	9b01      	ldr	r3, [sp, #4]
 800205c:	0512      	lsls	r2, r2, #20
 800205e:	4322      	orrs	r2, r4
 8002060:	07db      	lsls	r3, r3, #31
 8002062:	431a      	orrs	r2, r3
 8002064:	0028      	movs	r0, r5
 8002066:	0011      	movs	r1, r2
 8002068:	b007      	add	sp, #28
 800206a:	bcf0      	pop	{r4, r5, r6, r7}
 800206c:	46bb      	mov	fp, r7
 800206e:	46b2      	mov	sl, r6
 8002070:	46a9      	mov	r9, r5
 8002072:	46a0      	mov	r8, r4
 8002074:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002076:	2400      	movs	r4, #0
 8002078:	2500      	movs	r5, #0
 800207a:	4aaa      	ldr	r2, [pc, #680]	; (8002324 <__aeabi_dmul+0x38c>)
 800207c:	e7ed      	b.n	800205a <__aeabi_dmul+0xc2>
 800207e:	0c28      	lsrs	r0, r5, #16
 8002080:	042d      	lsls	r5, r5, #16
 8002082:	0c2d      	lsrs	r5, r5, #16
 8002084:	002b      	movs	r3, r5
 8002086:	0c11      	lsrs	r1, r2, #16
 8002088:	0412      	lsls	r2, r2, #16
 800208a:	0c12      	lsrs	r2, r2, #16
 800208c:	4353      	muls	r3, r2
 800208e:	4698      	mov	r8, r3
 8002090:	0013      	movs	r3, r2
 8002092:	002f      	movs	r7, r5
 8002094:	4343      	muls	r3, r0
 8002096:	4699      	mov	r9, r3
 8002098:	434f      	muls	r7, r1
 800209a:	444f      	add	r7, r9
 800209c:	46bb      	mov	fp, r7
 800209e:	4647      	mov	r7, r8
 80020a0:	000b      	movs	r3, r1
 80020a2:	0c3f      	lsrs	r7, r7, #16
 80020a4:	46ba      	mov	sl, r7
 80020a6:	4343      	muls	r3, r0
 80020a8:	44da      	add	sl, fp
 80020aa:	9302      	str	r3, [sp, #8]
 80020ac:	45d1      	cmp	r9, sl
 80020ae:	d904      	bls.n	80020ba <__aeabi_dmul+0x122>
 80020b0:	2780      	movs	r7, #128	; 0x80
 80020b2:	027f      	lsls	r7, r7, #9
 80020b4:	46b9      	mov	r9, r7
 80020b6:	444b      	add	r3, r9
 80020b8:	9302      	str	r3, [sp, #8]
 80020ba:	4653      	mov	r3, sl
 80020bc:	0c1b      	lsrs	r3, r3, #16
 80020be:	469b      	mov	fp, r3
 80020c0:	4653      	mov	r3, sl
 80020c2:	041f      	lsls	r7, r3, #16
 80020c4:	4643      	mov	r3, r8
 80020c6:	041b      	lsls	r3, r3, #16
 80020c8:	0c1b      	lsrs	r3, r3, #16
 80020ca:	4698      	mov	r8, r3
 80020cc:	003b      	movs	r3, r7
 80020ce:	4443      	add	r3, r8
 80020d0:	9304      	str	r3, [sp, #16]
 80020d2:	0c33      	lsrs	r3, r6, #16
 80020d4:	0436      	lsls	r6, r6, #16
 80020d6:	0c36      	lsrs	r6, r6, #16
 80020d8:	4698      	mov	r8, r3
 80020da:	0033      	movs	r3, r6
 80020dc:	4343      	muls	r3, r0
 80020de:	4699      	mov	r9, r3
 80020e0:	4643      	mov	r3, r8
 80020e2:	4343      	muls	r3, r0
 80020e4:	002f      	movs	r7, r5
 80020e6:	469a      	mov	sl, r3
 80020e8:	4643      	mov	r3, r8
 80020ea:	4377      	muls	r7, r6
 80020ec:	435d      	muls	r5, r3
 80020ee:	0c38      	lsrs	r0, r7, #16
 80020f0:	444d      	add	r5, r9
 80020f2:	1945      	adds	r5, r0, r5
 80020f4:	45a9      	cmp	r9, r5
 80020f6:	d903      	bls.n	8002100 <__aeabi_dmul+0x168>
 80020f8:	2380      	movs	r3, #128	; 0x80
 80020fa:	025b      	lsls	r3, r3, #9
 80020fc:	4699      	mov	r9, r3
 80020fe:	44ca      	add	sl, r9
 8002100:	043f      	lsls	r7, r7, #16
 8002102:	0c28      	lsrs	r0, r5, #16
 8002104:	0c3f      	lsrs	r7, r7, #16
 8002106:	042d      	lsls	r5, r5, #16
 8002108:	19ed      	adds	r5, r5, r7
 800210a:	0c27      	lsrs	r7, r4, #16
 800210c:	0424      	lsls	r4, r4, #16
 800210e:	0c24      	lsrs	r4, r4, #16
 8002110:	0003      	movs	r3, r0
 8002112:	0020      	movs	r0, r4
 8002114:	4350      	muls	r0, r2
 8002116:	437a      	muls	r2, r7
 8002118:	4691      	mov	r9, r2
 800211a:	003a      	movs	r2, r7
 800211c:	4453      	add	r3, sl
 800211e:	9305      	str	r3, [sp, #20]
 8002120:	0c03      	lsrs	r3, r0, #16
 8002122:	469a      	mov	sl, r3
 8002124:	434a      	muls	r2, r1
 8002126:	4361      	muls	r1, r4
 8002128:	4449      	add	r1, r9
 800212a:	4451      	add	r1, sl
 800212c:	44ab      	add	fp, r5
 800212e:	4589      	cmp	r9, r1
 8002130:	d903      	bls.n	800213a <__aeabi_dmul+0x1a2>
 8002132:	2380      	movs	r3, #128	; 0x80
 8002134:	025b      	lsls	r3, r3, #9
 8002136:	4699      	mov	r9, r3
 8002138:	444a      	add	r2, r9
 800213a:	0400      	lsls	r0, r0, #16
 800213c:	0c0b      	lsrs	r3, r1, #16
 800213e:	0c00      	lsrs	r0, r0, #16
 8002140:	0409      	lsls	r1, r1, #16
 8002142:	1809      	adds	r1, r1, r0
 8002144:	0020      	movs	r0, r4
 8002146:	4699      	mov	r9, r3
 8002148:	4643      	mov	r3, r8
 800214a:	4370      	muls	r0, r6
 800214c:	435c      	muls	r4, r3
 800214e:	437e      	muls	r6, r7
 8002150:	435f      	muls	r7, r3
 8002152:	0c03      	lsrs	r3, r0, #16
 8002154:	4698      	mov	r8, r3
 8002156:	19a4      	adds	r4, r4, r6
 8002158:	4444      	add	r4, r8
 800215a:	444a      	add	r2, r9
 800215c:	9703      	str	r7, [sp, #12]
 800215e:	42a6      	cmp	r6, r4
 8002160:	d904      	bls.n	800216c <__aeabi_dmul+0x1d4>
 8002162:	2380      	movs	r3, #128	; 0x80
 8002164:	025b      	lsls	r3, r3, #9
 8002166:	4698      	mov	r8, r3
 8002168:	4447      	add	r7, r8
 800216a:	9703      	str	r7, [sp, #12]
 800216c:	0423      	lsls	r3, r4, #16
 800216e:	9e02      	ldr	r6, [sp, #8]
 8002170:	469a      	mov	sl, r3
 8002172:	9b05      	ldr	r3, [sp, #20]
 8002174:	445e      	add	r6, fp
 8002176:	4698      	mov	r8, r3
 8002178:	42ae      	cmp	r6, r5
 800217a:	41ad      	sbcs	r5, r5
 800217c:	1876      	adds	r6, r6, r1
 800217e:	428e      	cmp	r6, r1
 8002180:	4189      	sbcs	r1, r1
 8002182:	0400      	lsls	r0, r0, #16
 8002184:	0c00      	lsrs	r0, r0, #16
 8002186:	4450      	add	r0, sl
 8002188:	4440      	add	r0, r8
 800218a:	426d      	negs	r5, r5
 800218c:	1947      	adds	r7, r0, r5
 800218e:	46b8      	mov	r8, r7
 8002190:	4693      	mov	fp, r2
 8002192:	4249      	negs	r1, r1
 8002194:	4689      	mov	r9, r1
 8002196:	44c3      	add	fp, r8
 8002198:	44d9      	add	r9, fp
 800219a:	4298      	cmp	r0, r3
 800219c:	4180      	sbcs	r0, r0
 800219e:	45a8      	cmp	r8, r5
 80021a0:	41ad      	sbcs	r5, r5
 80021a2:	4593      	cmp	fp, r2
 80021a4:	4192      	sbcs	r2, r2
 80021a6:	4589      	cmp	r9, r1
 80021a8:	4189      	sbcs	r1, r1
 80021aa:	426d      	negs	r5, r5
 80021ac:	4240      	negs	r0, r0
 80021ae:	4328      	orrs	r0, r5
 80021b0:	0c24      	lsrs	r4, r4, #16
 80021b2:	4252      	negs	r2, r2
 80021b4:	4249      	negs	r1, r1
 80021b6:	430a      	orrs	r2, r1
 80021b8:	9b03      	ldr	r3, [sp, #12]
 80021ba:	1900      	adds	r0, r0, r4
 80021bc:	1880      	adds	r0, r0, r2
 80021be:	18c7      	adds	r7, r0, r3
 80021c0:	464b      	mov	r3, r9
 80021c2:	0ddc      	lsrs	r4, r3, #23
 80021c4:	9b04      	ldr	r3, [sp, #16]
 80021c6:	0275      	lsls	r5, r6, #9
 80021c8:	431d      	orrs	r5, r3
 80021ca:	1e6a      	subs	r2, r5, #1
 80021cc:	4195      	sbcs	r5, r2
 80021ce:	464b      	mov	r3, r9
 80021d0:	0df6      	lsrs	r6, r6, #23
 80021d2:	027f      	lsls	r7, r7, #9
 80021d4:	4335      	orrs	r5, r6
 80021d6:	025a      	lsls	r2, r3, #9
 80021d8:	433c      	orrs	r4, r7
 80021da:	4315      	orrs	r5, r2
 80021dc:	01fb      	lsls	r3, r7, #7
 80021de:	d400      	bmi.n	80021e2 <__aeabi_dmul+0x24a>
 80021e0:	e11c      	b.n	800241c <__aeabi_dmul+0x484>
 80021e2:	2101      	movs	r1, #1
 80021e4:	086a      	lsrs	r2, r5, #1
 80021e6:	400d      	ands	r5, r1
 80021e8:	4315      	orrs	r5, r2
 80021ea:	07e2      	lsls	r2, r4, #31
 80021ec:	4315      	orrs	r5, r2
 80021ee:	0864      	lsrs	r4, r4, #1
 80021f0:	494f      	ldr	r1, [pc, #316]	; (8002330 <__aeabi_dmul+0x398>)
 80021f2:	4461      	add	r1, ip
 80021f4:	2900      	cmp	r1, #0
 80021f6:	dc00      	bgt.n	80021fa <__aeabi_dmul+0x262>
 80021f8:	e0b0      	b.n	800235c <__aeabi_dmul+0x3c4>
 80021fa:	076b      	lsls	r3, r5, #29
 80021fc:	d009      	beq.n	8002212 <__aeabi_dmul+0x27a>
 80021fe:	220f      	movs	r2, #15
 8002200:	402a      	ands	r2, r5
 8002202:	2a04      	cmp	r2, #4
 8002204:	d005      	beq.n	8002212 <__aeabi_dmul+0x27a>
 8002206:	1d2a      	adds	r2, r5, #4
 8002208:	42aa      	cmp	r2, r5
 800220a:	41ad      	sbcs	r5, r5
 800220c:	426d      	negs	r5, r5
 800220e:	1964      	adds	r4, r4, r5
 8002210:	0015      	movs	r5, r2
 8002212:	01e3      	lsls	r3, r4, #7
 8002214:	d504      	bpl.n	8002220 <__aeabi_dmul+0x288>
 8002216:	2180      	movs	r1, #128	; 0x80
 8002218:	4a46      	ldr	r2, [pc, #280]	; (8002334 <__aeabi_dmul+0x39c>)
 800221a:	00c9      	lsls	r1, r1, #3
 800221c:	4014      	ands	r4, r2
 800221e:	4461      	add	r1, ip
 8002220:	4a45      	ldr	r2, [pc, #276]	; (8002338 <__aeabi_dmul+0x3a0>)
 8002222:	4291      	cmp	r1, r2
 8002224:	dd00      	ble.n	8002228 <__aeabi_dmul+0x290>
 8002226:	e726      	b.n	8002076 <__aeabi_dmul+0xde>
 8002228:	0762      	lsls	r2, r4, #29
 800222a:	08ed      	lsrs	r5, r5, #3
 800222c:	0264      	lsls	r4, r4, #9
 800222e:	0549      	lsls	r1, r1, #21
 8002230:	4315      	orrs	r5, r2
 8002232:	0b24      	lsrs	r4, r4, #12
 8002234:	0d4a      	lsrs	r2, r1, #21
 8002236:	e710      	b.n	800205a <__aeabi_dmul+0xc2>
 8002238:	4652      	mov	r2, sl
 800223a:	4332      	orrs	r2, r6
 800223c:	d100      	bne.n	8002240 <__aeabi_dmul+0x2a8>
 800223e:	e07f      	b.n	8002340 <__aeabi_dmul+0x3a8>
 8002240:	2e00      	cmp	r6, #0
 8002242:	d100      	bne.n	8002246 <__aeabi_dmul+0x2ae>
 8002244:	e0dc      	b.n	8002400 <__aeabi_dmul+0x468>
 8002246:	0030      	movs	r0, r6
 8002248:	f000 fd96 	bl	8002d78 <__clzsi2>
 800224c:	0002      	movs	r2, r0
 800224e:	3a0b      	subs	r2, #11
 8002250:	231d      	movs	r3, #29
 8002252:	0001      	movs	r1, r0
 8002254:	1a9b      	subs	r3, r3, r2
 8002256:	4652      	mov	r2, sl
 8002258:	3908      	subs	r1, #8
 800225a:	40da      	lsrs	r2, r3
 800225c:	408e      	lsls	r6, r1
 800225e:	4316      	orrs	r6, r2
 8002260:	4652      	mov	r2, sl
 8002262:	408a      	lsls	r2, r1
 8002264:	9b00      	ldr	r3, [sp, #0]
 8002266:	4935      	ldr	r1, [pc, #212]	; (800233c <__aeabi_dmul+0x3a4>)
 8002268:	1a18      	subs	r0, r3, r0
 800226a:	0003      	movs	r3, r0
 800226c:	468c      	mov	ip, r1
 800226e:	4463      	add	r3, ip
 8002270:	2000      	movs	r0, #0
 8002272:	9300      	str	r3, [sp, #0]
 8002274:	e6d3      	b.n	800201e <__aeabi_dmul+0x86>
 8002276:	0025      	movs	r5, r4
 8002278:	4305      	orrs	r5, r0
 800227a:	d04a      	beq.n	8002312 <__aeabi_dmul+0x37a>
 800227c:	2c00      	cmp	r4, #0
 800227e:	d100      	bne.n	8002282 <__aeabi_dmul+0x2ea>
 8002280:	e0b0      	b.n	80023e4 <__aeabi_dmul+0x44c>
 8002282:	0020      	movs	r0, r4
 8002284:	f000 fd78 	bl	8002d78 <__clzsi2>
 8002288:	0001      	movs	r1, r0
 800228a:	0002      	movs	r2, r0
 800228c:	390b      	subs	r1, #11
 800228e:	231d      	movs	r3, #29
 8002290:	0010      	movs	r0, r2
 8002292:	1a5b      	subs	r3, r3, r1
 8002294:	0031      	movs	r1, r6
 8002296:	0035      	movs	r5, r6
 8002298:	3808      	subs	r0, #8
 800229a:	4084      	lsls	r4, r0
 800229c:	40d9      	lsrs	r1, r3
 800229e:	4085      	lsls	r5, r0
 80022a0:	430c      	orrs	r4, r1
 80022a2:	4826      	ldr	r0, [pc, #152]	; (800233c <__aeabi_dmul+0x3a4>)
 80022a4:	1a83      	subs	r3, r0, r2
 80022a6:	9300      	str	r3, [sp, #0]
 80022a8:	2300      	movs	r3, #0
 80022aa:	4699      	mov	r9, r3
 80022ac:	469b      	mov	fp, r3
 80022ae:	e697      	b.n	8001fe0 <__aeabi_dmul+0x48>
 80022b0:	0005      	movs	r5, r0
 80022b2:	4325      	orrs	r5, r4
 80022b4:	d126      	bne.n	8002304 <__aeabi_dmul+0x36c>
 80022b6:	2208      	movs	r2, #8
 80022b8:	9300      	str	r3, [sp, #0]
 80022ba:	2302      	movs	r3, #2
 80022bc:	2400      	movs	r4, #0
 80022be:	4691      	mov	r9, r2
 80022c0:	469b      	mov	fp, r3
 80022c2:	e68d      	b.n	8001fe0 <__aeabi_dmul+0x48>
 80022c4:	4652      	mov	r2, sl
 80022c6:	9b00      	ldr	r3, [sp, #0]
 80022c8:	4332      	orrs	r2, r6
 80022ca:	d110      	bne.n	80022ee <__aeabi_dmul+0x356>
 80022cc:	4915      	ldr	r1, [pc, #84]	; (8002324 <__aeabi_dmul+0x38c>)
 80022ce:	2600      	movs	r6, #0
 80022d0:	468c      	mov	ip, r1
 80022d2:	4463      	add	r3, ip
 80022d4:	4649      	mov	r1, r9
 80022d6:	9300      	str	r3, [sp, #0]
 80022d8:	2302      	movs	r3, #2
 80022da:	4319      	orrs	r1, r3
 80022dc:	4689      	mov	r9, r1
 80022de:	2002      	movs	r0, #2
 80022e0:	e69d      	b.n	800201e <__aeabi_dmul+0x86>
 80022e2:	465b      	mov	r3, fp
 80022e4:	9701      	str	r7, [sp, #4]
 80022e6:	2b02      	cmp	r3, #2
 80022e8:	d000      	beq.n	80022ec <__aeabi_dmul+0x354>
 80022ea:	e6ad      	b.n	8002048 <__aeabi_dmul+0xb0>
 80022ec:	e6c3      	b.n	8002076 <__aeabi_dmul+0xde>
 80022ee:	4a0d      	ldr	r2, [pc, #52]	; (8002324 <__aeabi_dmul+0x38c>)
 80022f0:	2003      	movs	r0, #3
 80022f2:	4694      	mov	ip, r2
 80022f4:	4463      	add	r3, ip
 80022f6:	464a      	mov	r2, r9
 80022f8:	9300      	str	r3, [sp, #0]
 80022fa:	2303      	movs	r3, #3
 80022fc:	431a      	orrs	r2, r3
 80022fe:	4691      	mov	r9, r2
 8002300:	4652      	mov	r2, sl
 8002302:	e68c      	b.n	800201e <__aeabi_dmul+0x86>
 8002304:	220c      	movs	r2, #12
 8002306:	9300      	str	r3, [sp, #0]
 8002308:	2303      	movs	r3, #3
 800230a:	0005      	movs	r5, r0
 800230c:	4691      	mov	r9, r2
 800230e:	469b      	mov	fp, r3
 8002310:	e666      	b.n	8001fe0 <__aeabi_dmul+0x48>
 8002312:	2304      	movs	r3, #4
 8002314:	4699      	mov	r9, r3
 8002316:	2300      	movs	r3, #0
 8002318:	9300      	str	r3, [sp, #0]
 800231a:	3301      	adds	r3, #1
 800231c:	2400      	movs	r4, #0
 800231e:	469b      	mov	fp, r3
 8002320:	e65e      	b.n	8001fe0 <__aeabi_dmul+0x48>
 8002322:	46c0      	nop			; (mov r8, r8)
 8002324:	000007ff 	.word	0x000007ff
 8002328:	fffffc01 	.word	0xfffffc01
 800232c:	080083a8 	.word	0x080083a8
 8002330:	000003ff 	.word	0x000003ff
 8002334:	feffffff 	.word	0xfeffffff
 8002338:	000007fe 	.word	0x000007fe
 800233c:	fffffc0d 	.word	0xfffffc0d
 8002340:	4649      	mov	r1, r9
 8002342:	2301      	movs	r3, #1
 8002344:	4319      	orrs	r1, r3
 8002346:	4689      	mov	r9, r1
 8002348:	2600      	movs	r6, #0
 800234a:	2001      	movs	r0, #1
 800234c:	e667      	b.n	800201e <__aeabi_dmul+0x86>
 800234e:	2300      	movs	r3, #0
 8002350:	2480      	movs	r4, #128	; 0x80
 8002352:	2500      	movs	r5, #0
 8002354:	4a43      	ldr	r2, [pc, #268]	; (8002464 <__aeabi_dmul+0x4cc>)
 8002356:	9301      	str	r3, [sp, #4]
 8002358:	0324      	lsls	r4, r4, #12
 800235a:	e67e      	b.n	800205a <__aeabi_dmul+0xc2>
 800235c:	2001      	movs	r0, #1
 800235e:	1a40      	subs	r0, r0, r1
 8002360:	2838      	cmp	r0, #56	; 0x38
 8002362:	dd00      	ble.n	8002366 <__aeabi_dmul+0x3ce>
 8002364:	e676      	b.n	8002054 <__aeabi_dmul+0xbc>
 8002366:	281f      	cmp	r0, #31
 8002368:	dd5b      	ble.n	8002422 <__aeabi_dmul+0x48a>
 800236a:	221f      	movs	r2, #31
 800236c:	0023      	movs	r3, r4
 800236e:	4252      	negs	r2, r2
 8002370:	1a51      	subs	r1, r2, r1
 8002372:	40cb      	lsrs	r3, r1
 8002374:	0019      	movs	r1, r3
 8002376:	2820      	cmp	r0, #32
 8002378:	d003      	beq.n	8002382 <__aeabi_dmul+0x3ea>
 800237a:	4a3b      	ldr	r2, [pc, #236]	; (8002468 <__aeabi_dmul+0x4d0>)
 800237c:	4462      	add	r2, ip
 800237e:	4094      	lsls	r4, r2
 8002380:	4325      	orrs	r5, r4
 8002382:	1e6a      	subs	r2, r5, #1
 8002384:	4195      	sbcs	r5, r2
 8002386:	002a      	movs	r2, r5
 8002388:	430a      	orrs	r2, r1
 800238a:	2107      	movs	r1, #7
 800238c:	000d      	movs	r5, r1
 800238e:	2400      	movs	r4, #0
 8002390:	4015      	ands	r5, r2
 8002392:	4211      	tst	r1, r2
 8002394:	d05b      	beq.n	800244e <__aeabi_dmul+0x4b6>
 8002396:	210f      	movs	r1, #15
 8002398:	2400      	movs	r4, #0
 800239a:	4011      	ands	r1, r2
 800239c:	2904      	cmp	r1, #4
 800239e:	d053      	beq.n	8002448 <__aeabi_dmul+0x4b0>
 80023a0:	1d11      	adds	r1, r2, #4
 80023a2:	4291      	cmp	r1, r2
 80023a4:	4192      	sbcs	r2, r2
 80023a6:	4252      	negs	r2, r2
 80023a8:	18a4      	adds	r4, r4, r2
 80023aa:	000a      	movs	r2, r1
 80023ac:	0223      	lsls	r3, r4, #8
 80023ae:	d54b      	bpl.n	8002448 <__aeabi_dmul+0x4b0>
 80023b0:	2201      	movs	r2, #1
 80023b2:	2400      	movs	r4, #0
 80023b4:	2500      	movs	r5, #0
 80023b6:	e650      	b.n	800205a <__aeabi_dmul+0xc2>
 80023b8:	2380      	movs	r3, #128	; 0x80
 80023ba:	031b      	lsls	r3, r3, #12
 80023bc:	421c      	tst	r4, r3
 80023be:	d009      	beq.n	80023d4 <__aeabi_dmul+0x43c>
 80023c0:	421e      	tst	r6, r3
 80023c2:	d107      	bne.n	80023d4 <__aeabi_dmul+0x43c>
 80023c4:	4333      	orrs	r3, r6
 80023c6:	031c      	lsls	r4, r3, #12
 80023c8:	4643      	mov	r3, r8
 80023ca:	0015      	movs	r5, r2
 80023cc:	0b24      	lsrs	r4, r4, #12
 80023ce:	4a25      	ldr	r2, [pc, #148]	; (8002464 <__aeabi_dmul+0x4cc>)
 80023d0:	9301      	str	r3, [sp, #4]
 80023d2:	e642      	b.n	800205a <__aeabi_dmul+0xc2>
 80023d4:	2280      	movs	r2, #128	; 0x80
 80023d6:	0312      	lsls	r2, r2, #12
 80023d8:	4314      	orrs	r4, r2
 80023da:	0324      	lsls	r4, r4, #12
 80023dc:	4a21      	ldr	r2, [pc, #132]	; (8002464 <__aeabi_dmul+0x4cc>)
 80023de:	0b24      	lsrs	r4, r4, #12
 80023e0:	9701      	str	r7, [sp, #4]
 80023e2:	e63a      	b.n	800205a <__aeabi_dmul+0xc2>
 80023e4:	f000 fcc8 	bl	8002d78 <__clzsi2>
 80023e8:	0001      	movs	r1, r0
 80023ea:	0002      	movs	r2, r0
 80023ec:	3115      	adds	r1, #21
 80023ee:	3220      	adds	r2, #32
 80023f0:	291c      	cmp	r1, #28
 80023f2:	dc00      	bgt.n	80023f6 <__aeabi_dmul+0x45e>
 80023f4:	e74b      	b.n	800228e <__aeabi_dmul+0x2f6>
 80023f6:	0034      	movs	r4, r6
 80023f8:	3808      	subs	r0, #8
 80023fa:	2500      	movs	r5, #0
 80023fc:	4084      	lsls	r4, r0
 80023fe:	e750      	b.n	80022a2 <__aeabi_dmul+0x30a>
 8002400:	f000 fcba 	bl	8002d78 <__clzsi2>
 8002404:	0003      	movs	r3, r0
 8002406:	001a      	movs	r2, r3
 8002408:	3215      	adds	r2, #21
 800240a:	3020      	adds	r0, #32
 800240c:	2a1c      	cmp	r2, #28
 800240e:	dc00      	bgt.n	8002412 <__aeabi_dmul+0x47a>
 8002410:	e71e      	b.n	8002250 <__aeabi_dmul+0x2b8>
 8002412:	4656      	mov	r6, sl
 8002414:	3b08      	subs	r3, #8
 8002416:	2200      	movs	r2, #0
 8002418:	409e      	lsls	r6, r3
 800241a:	e723      	b.n	8002264 <__aeabi_dmul+0x2cc>
 800241c:	9b00      	ldr	r3, [sp, #0]
 800241e:	469c      	mov	ip, r3
 8002420:	e6e6      	b.n	80021f0 <__aeabi_dmul+0x258>
 8002422:	4912      	ldr	r1, [pc, #72]	; (800246c <__aeabi_dmul+0x4d4>)
 8002424:	0022      	movs	r2, r4
 8002426:	4461      	add	r1, ip
 8002428:	002e      	movs	r6, r5
 800242a:	408d      	lsls	r5, r1
 800242c:	408a      	lsls	r2, r1
 800242e:	40c6      	lsrs	r6, r0
 8002430:	1e69      	subs	r1, r5, #1
 8002432:	418d      	sbcs	r5, r1
 8002434:	4332      	orrs	r2, r6
 8002436:	432a      	orrs	r2, r5
 8002438:	40c4      	lsrs	r4, r0
 800243a:	0753      	lsls	r3, r2, #29
 800243c:	d0b6      	beq.n	80023ac <__aeabi_dmul+0x414>
 800243e:	210f      	movs	r1, #15
 8002440:	4011      	ands	r1, r2
 8002442:	2904      	cmp	r1, #4
 8002444:	d1ac      	bne.n	80023a0 <__aeabi_dmul+0x408>
 8002446:	e7b1      	b.n	80023ac <__aeabi_dmul+0x414>
 8002448:	0765      	lsls	r5, r4, #29
 800244a:	0264      	lsls	r4, r4, #9
 800244c:	0b24      	lsrs	r4, r4, #12
 800244e:	08d2      	lsrs	r2, r2, #3
 8002450:	4315      	orrs	r5, r2
 8002452:	2200      	movs	r2, #0
 8002454:	e601      	b.n	800205a <__aeabi_dmul+0xc2>
 8002456:	2280      	movs	r2, #128	; 0x80
 8002458:	0312      	lsls	r2, r2, #12
 800245a:	4314      	orrs	r4, r2
 800245c:	0324      	lsls	r4, r4, #12
 800245e:	4a01      	ldr	r2, [pc, #4]	; (8002464 <__aeabi_dmul+0x4cc>)
 8002460:	0b24      	lsrs	r4, r4, #12
 8002462:	e5fa      	b.n	800205a <__aeabi_dmul+0xc2>
 8002464:	000007ff 	.word	0x000007ff
 8002468:	0000043e 	.word	0x0000043e
 800246c:	0000041e 	.word	0x0000041e

08002470 <__aeabi_dsub>:
 8002470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002472:	4657      	mov	r7, sl
 8002474:	464e      	mov	r6, r9
 8002476:	4645      	mov	r5, r8
 8002478:	46de      	mov	lr, fp
 800247a:	b5e0      	push	{r5, r6, r7, lr}
 800247c:	001e      	movs	r6, r3
 800247e:	0017      	movs	r7, r2
 8002480:	004a      	lsls	r2, r1, #1
 8002482:	030b      	lsls	r3, r1, #12
 8002484:	0d52      	lsrs	r2, r2, #21
 8002486:	0a5b      	lsrs	r3, r3, #9
 8002488:	4690      	mov	r8, r2
 800248a:	0f42      	lsrs	r2, r0, #29
 800248c:	431a      	orrs	r2, r3
 800248e:	0fcd      	lsrs	r5, r1, #31
 8002490:	4ccd      	ldr	r4, [pc, #820]	; (80027c8 <__aeabi_dsub+0x358>)
 8002492:	0331      	lsls	r1, r6, #12
 8002494:	00c3      	lsls	r3, r0, #3
 8002496:	4694      	mov	ip, r2
 8002498:	0070      	lsls	r0, r6, #1
 800249a:	0f7a      	lsrs	r2, r7, #29
 800249c:	0a49      	lsrs	r1, r1, #9
 800249e:	00ff      	lsls	r7, r7, #3
 80024a0:	469a      	mov	sl, r3
 80024a2:	46b9      	mov	r9, r7
 80024a4:	0d40      	lsrs	r0, r0, #21
 80024a6:	0ff6      	lsrs	r6, r6, #31
 80024a8:	4311      	orrs	r1, r2
 80024aa:	42a0      	cmp	r0, r4
 80024ac:	d100      	bne.n	80024b0 <__aeabi_dsub+0x40>
 80024ae:	e0b1      	b.n	8002614 <__aeabi_dsub+0x1a4>
 80024b0:	2201      	movs	r2, #1
 80024b2:	4056      	eors	r6, r2
 80024b4:	46b3      	mov	fp, r6
 80024b6:	42b5      	cmp	r5, r6
 80024b8:	d100      	bne.n	80024bc <__aeabi_dsub+0x4c>
 80024ba:	e088      	b.n	80025ce <__aeabi_dsub+0x15e>
 80024bc:	4642      	mov	r2, r8
 80024be:	1a12      	subs	r2, r2, r0
 80024c0:	2a00      	cmp	r2, #0
 80024c2:	dc00      	bgt.n	80024c6 <__aeabi_dsub+0x56>
 80024c4:	e0ae      	b.n	8002624 <__aeabi_dsub+0x1b4>
 80024c6:	2800      	cmp	r0, #0
 80024c8:	d100      	bne.n	80024cc <__aeabi_dsub+0x5c>
 80024ca:	e0c1      	b.n	8002650 <__aeabi_dsub+0x1e0>
 80024cc:	48be      	ldr	r0, [pc, #760]	; (80027c8 <__aeabi_dsub+0x358>)
 80024ce:	4580      	cmp	r8, r0
 80024d0:	d100      	bne.n	80024d4 <__aeabi_dsub+0x64>
 80024d2:	e151      	b.n	8002778 <__aeabi_dsub+0x308>
 80024d4:	2080      	movs	r0, #128	; 0x80
 80024d6:	0400      	lsls	r0, r0, #16
 80024d8:	4301      	orrs	r1, r0
 80024da:	2a38      	cmp	r2, #56	; 0x38
 80024dc:	dd00      	ble.n	80024e0 <__aeabi_dsub+0x70>
 80024de:	e17b      	b.n	80027d8 <__aeabi_dsub+0x368>
 80024e0:	2a1f      	cmp	r2, #31
 80024e2:	dd00      	ble.n	80024e6 <__aeabi_dsub+0x76>
 80024e4:	e1ee      	b.n	80028c4 <__aeabi_dsub+0x454>
 80024e6:	2020      	movs	r0, #32
 80024e8:	003e      	movs	r6, r7
 80024ea:	1a80      	subs	r0, r0, r2
 80024ec:	000c      	movs	r4, r1
 80024ee:	40d6      	lsrs	r6, r2
 80024f0:	40d1      	lsrs	r1, r2
 80024f2:	4087      	lsls	r7, r0
 80024f4:	4662      	mov	r2, ip
 80024f6:	4084      	lsls	r4, r0
 80024f8:	1a52      	subs	r2, r2, r1
 80024fa:	1e78      	subs	r0, r7, #1
 80024fc:	4187      	sbcs	r7, r0
 80024fe:	4694      	mov	ip, r2
 8002500:	4334      	orrs	r4, r6
 8002502:	4327      	orrs	r7, r4
 8002504:	1bdc      	subs	r4, r3, r7
 8002506:	42a3      	cmp	r3, r4
 8002508:	419b      	sbcs	r3, r3
 800250a:	4662      	mov	r2, ip
 800250c:	425b      	negs	r3, r3
 800250e:	1ad3      	subs	r3, r2, r3
 8002510:	4699      	mov	r9, r3
 8002512:	464b      	mov	r3, r9
 8002514:	021b      	lsls	r3, r3, #8
 8002516:	d400      	bmi.n	800251a <__aeabi_dsub+0xaa>
 8002518:	e118      	b.n	800274c <__aeabi_dsub+0x2dc>
 800251a:	464b      	mov	r3, r9
 800251c:	0258      	lsls	r0, r3, #9
 800251e:	0a43      	lsrs	r3, r0, #9
 8002520:	4699      	mov	r9, r3
 8002522:	464b      	mov	r3, r9
 8002524:	2b00      	cmp	r3, #0
 8002526:	d100      	bne.n	800252a <__aeabi_dsub+0xba>
 8002528:	e137      	b.n	800279a <__aeabi_dsub+0x32a>
 800252a:	4648      	mov	r0, r9
 800252c:	f000 fc24 	bl	8002d78 <__clzsi2>
 8002530:	0001      	movs	r1, r0
 8002532:	3908      	subs	r1, #8
 8002534:	2320      	movs	r3, #32
 8002536:	0022      	movs	r2, r4
 8002538:	4648      	mov	r0, r9
 800253a:	1a5b      	subs	r3, r3, r1
 800253c:	40da      	lsrs	r2, r3
 800253e:	4088      	lsls	r0, r1
 8002540:	408c      	lsls	r4, r1
 8002542:	4643      	mov	r3, r8
 8002544:	4310      	orrs	r0, r2
 8002546:	4588      	cmp	r8, r1
 8002548:	dd00      	ble.n	800254c <__aeabi_dsub+0xdc>
 800254a:	e136      	b.n	80027ba <__aeabi_dsub+0x34a>
 800254c:	1ac9      	subs	r1, r1, r3
 800254e:	1c4b      	adds	r3, r1, #1
 8002550:	2b1f      	cmp	r3, #31
 8002552:	dd00      	ble.n	8002556 <__aeabi_dsub+0xe6>
 8002554:	e0ea      	b.n	800272c <__aeabi_dsub+0x2bc>
 8002556:	2220      	movs	r2, #32
 8002558:	0026      	movs	r6, r4
 800255a:	1ad2      	subs	r2, r2, r3
 800255c:	0001      	movs	r1, r0
 800255e:	4094      	lsls	r4, r2
 8002560:	40de      	lsrs	r6, r3
 8002562:	40d8      	lsrs	r0, r3
 8002564:	2300      	movs	r3, #0
 8002566:	4091      	lsls	r1, r2
 8002568:	1e62      	subs	r2, r4, #1
 800256a:	4194      	sbcs	r4, r2
 800256c:	4681      	mov	r9, r0
 800256e:	4698      	mov	r8, r3
 8002570:	4331      	orrs	r1, r6
 8002572:	430c      	orrs	r4, r1
 8002574:	0763      	lsls	r3, r4, #29
 8002576:	d009      	beq.n	800258c <__aeabi_dsub+0x11c>
 8002578:	230f      	movs	r3, #15
 800257a:	4023      	ands	r3, r4
 800257c:	2b04      	cmp	r3, #4
 800257e:	d005      	beq.n	800258c <__aeabi_dsub+0x11c>
 8002580:	1d23      	adds	r3, r4, #4
 8002582:	42a3      	cmp	r3, r4
 8002584:	41a4      	sbcs	r4, r4
 8002586:	4264      	negs	r4, r4
 8002588:	44a1      	add	r9, r4
 800258a:	001c      	movs	r4, r3
 800258c:	464b      	mov	r3, r9
 800258e:	021b      	lsls	r3, r3, #8
 8002590:	d400      	bmi.n	8002594 <__aeabi_dsub+0x124>
 8002592:	e0de      	b.n	8002752 <__aeabi_dsub+0x2e2>
 8002594:	4641      	mov	r1, r8
 8002596:	4b8c      	ldr	r3, [pc, #560]	; (80027c8 <__aeabi_dsub+0x358>)
 8002598:	3101      	adds	r1, #1
 800259a:	4299      	cmp	r1, r3
 800259c:	d100      	bne.n	80025a0 <__aeabi_dsub+0x130>
 800259e:	e0e7      	b.n	8002770 <__aeabi_dsub+0x300>
 80025a0:	464b      	mov	r3, r9
 80025a2:	488a      	ldr	r0, [pc, #552]	; (80027cc <__aeabi_dsub+0x35c>)
 80025a4:	08e4      	lsrs	r4, r4, #3
 80025a6:	4003      	ands	r3, r0
 80025a8:	0018      	movs	r0, r3
 80025aa:	0549      	lsls	r1, r1, #21
 80025ac:	075b      	lsls	r3, r3, #29
 80025ae:	0240      	lsls	r0, r0, #9
 80025b0:	4323      	orrs	r3, r4
 80025b2:	0d4a      	lsrs	r2, r1, #21
 80025b4:	0b04      	lsrs	r4, r0, #12
 80025b6:	0512      	lsls	r2, r2, #20
 80025b8:	07ed      	lsls	r5, r5, #31
 80025ba:	4322      	orrs	r2, r4
 80025bc:	432a      	orrs	r2, r5
 80025be:	0018      	movs	r0, r3
 80025c0:	0011      	movs	r1, r2
 80025c2:	bcf0      	pop	{r4, r5, r6, r7}
 80025c4:	46bb      	mov	fp, r7
 80025c6:	46b2      	mov	sl, r6
 80025c8:	46a9      	mov	r9, r5
 80025ca:	46a0      	mov	r8, r4
 80025cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80025ce:	4642      	mov	r2, r8
 80025d0:	1a12      	subs	r2, r2, r0
 80025d2:	2a00      	cmp	r2, #0
 80025d4:	dd52      	ble.n	800267c <__aeabi_dsub+0x20c>
 80025d6:	2800      	cmp	r0, #0
 80025d8:	d100      	bne.n	80025dc <__aeabi_dsub+0x16c>
 80025da:	e09c      	b.n	8002716 <__aeabi_dsub+0x2a6>
 80025dc:	45a0      	cmp	r8, r4
 80025de:	d100      	bne.n	80025e2 <__aeabi_dsub+0x172>
 80025e0:	e0ca      	b.n	8002778 <__aeabi_dsub+0x308>
 80025e2:	2080      	movs	r0, #128	; 0x80
 80025e4:	0400      	lsls	r0, r0, #16
 80025e6:	4301      	orrs	r1, r0
 80025e8:	2a38      	cmp	r2, #56	; 0x38
 80025ea:	dd00      	ble.n	80025ee <__aeabi_dsub+0x17e>
 80025ec:	e149      	b.n	8002882 <__aeabi_dsub+0x412>
 80025ee:	2a1f      	cmp	r2, #31
 80025f0:	dc00      	bgt.n	80025f4 <__aeabi_dsub+0x184>
 80025f2:	e197      	b.n	8002924 <__aeabi_dsub+0x4b4>
 80025f4:	0010      	movs	r0, r2
 80025f6:	000e      	movs	r6, r1
 80025f8:	3820      	subs	r0, #32
 80025fa:	40c6      	lsrs	r6, r0
 80025fc:	2a20      	cmp	r2, #32
 80025fe:	d004      	beq.n	800260a <__aeabi_dsub+0x19a>
 8002600:	2040      	movs	r0, #64	; 0x40
 8002602:	1a82      	subs	r2, r0, r2
 8002604:	4091      	lsls	r1, r2
 8002606:	430f      	orrs	r7, r1
 8002608:	46b9      	mov	r9, r7
 800260a:	464c      	mov	r4, r9
 800260c:	1e62      	subs	r2, r4, #1
 800260e:	4194      	sbcs	r4, r2
 8002610:	4334      	orrs	r4, r6
 8002612:	e13a      	b.n	800288a <__aeabi_dsub+0x41a>
 8002614:	000a      	movs	r2, r1
 8002616:	433a      	orrs	r2, r7
 8002618:	d028      	beq.n	800266c <__aeabi_dsub+0x1fc>
 800261a:	46b3      	mov	fp, r6
 800261c:	42b5      	cmp	r5, r6
 800261e:	d02b      	beq.n	8002678 <__aeabi_dsub+0x208>
 8002620:	4a6b      	ldr	r2, [pc, #428]	; (80027d0 <__aeabi_dsub+0x360>)
 8002622:	4442      	add	r2, r8
 8002624:	2a00      	cmp	r2, #0
 8002626:	d05d      	beq.n	80026e4 <__aeabi_dsub+0x274>
 8002628:	4642      	mov	r2, r8
 800262a:	4644      	mov	r4, r8
 800262c:	1a82      	subs	r2, r0, r2
 800262e:	2c00      	cmp	r4, #0
 8002630:	d000      	beq.n	8002634 <__aeabi_dsub+0x1c4>
 8002632:	e0f5      	b.n	8002820 <__aeabi_dsub+0x3b0>
 8002634:	4665      	mov	r5, ip
 8002636:	431d      	orrs	r5, r3
 8002638:	d100      	bne.n	800263c <__aeabi_dsub+0x1cc>
 800263a:	e19c      	b.n	8002976 <__aeabi_dsub+0x506>
 800263c:	1e55      	subs	r5, r2, #1
 800263e:	2a01      	cmp	r2, #1
 8002640:	d100      	bne.n	8002644 <__aeabi_dsub+0x1d4>
 8002642:	e1fb      	b.n	8002a3c <__aeabi_dsub+0x5cc>
 8002644:	4c60      	ldr	r4, [pc, #384]	; (80027c8 <__aeabi_dsub+0x358>)
 8002646:	42a2      	cmp	r2, r4
 8002648:	d100      	bne.n	800264c <__aeabi_dsub+0x1dc>
 800264a:	e1bd      	b.n	80029c8 <__aeabi_dsub+0x558>
 800264c:	002a      	movs	r2, r5
 800264e:	e0f0      	b.n	8002832 <__aeabi_dsub+0x3c2>
 8002650:	0008      	movs	r0, r1
 8002652:	4338      	orrs	r0, r7
 8002654:	d100      	bne.n	8002658 <__aeabi_dsub+0x1e8>
 8002656:	e0c3      	b.n	80027e0 <__aeabi_dsub+0x370>
 8002658:	1e50      	subs	r0, r2, #1
 800265a:	2a01      	cmp	r2, #1
 800265c:	d100      	bne.n	8002660 <__aeabi_dsub+0x1f0>
 800265e:	e1a8      	b.n	80029b2 <__aeabi_dsub+0x542>
 8002660:	4c59      	ldr	r4, [pc, #356]	; (80027c8 <__aeabi_dsub+0x358>)
 8002662:	42a2      	cmp	r2, r4
 8002664:	d100      	bne.n	8002668 <__aeabi_dsub+0x1f8>
 8002666:	e087      	b.n	8002778 <__aeabi_dsub+0x308>
 8002668:	0002      	movs	r2, r0
 800266a:	e736      	b.n	80024da <__aeabi_dsub+0x6a>
 800266c:	2201      	movs	r2, #1
 800266e:	4056      	eors	r6, r2
 8002670:	46b3      	mov	fp, r6
 8002672:	42b5      	cmp	r5, r6
 8002674:	d000      	beq.n	8002678 <__aeabi_dsub+0x208>
 8002676:	e721      	b.n	80024bc <__aeabi_dsub+0x4c>
 8002678:	4a55      	ldr	r2, [pc, #340]	; (80027d0 <__aeabi_dsub+0x360>)
 800267a:	4442      	add	r2, r8
 800267c:	2a00      	cmp	r2, #0
 800267e:	d100      	bne.n	8002682 <__aeabi_dsub+0x212>
 8002680:	e0b5      	b.n	80027ee <__aeabi_dsub+0x37e>
 8002682:	4642      	mov	r2, r8
 8002684:	4644      	mov	r4, r8
 8002686:	1a82      	subs	r2, r0, r2
 8002688:	2c00      	cmp	r4, #0
 800268a:	d100      	bne.n	800268e <__aeabi_dsub+0x21e>
 800268c:	e138      	b.n	8002900 <__aeabi_dsub+0x490>
 800268e:	4e4e      	ldr	r6, [pc, #312]	; (80027c8 <__aeabi_dsub+0x358>)
 8002690:	42b0      	cmp	r0, r6
 8002692:	d100      	bne.n	8002696 <__aeabi_dsub+0x226>
 8002694:	e1de      	b.n	8002a54 <__aeabi_dsub+0x5e4>
 8002696:	2680      	movs	r6, #128	; 0x80
 8002698:	4664      	mov	r4, ip
 800269a:	0436      	lsls	r6, r6, #16
 800269c:	4334      	orrs	r4, r6
 800269e:	46a4      	mov	ip, r4
 80026a0:	2a38      	cmp	r2, #56	; 0x38
 80026a2:	dd00      	ble.n	80026a6 <__aeabi_dsub+0x236>
 80026a4:	e196      	b.n	80029d4 <__aeabi_dsub+0x564>
 80026a6:	2a1f      	cmp	r2, #31
 80026a8:	dd00      	ble.n	80026ac <__aeabi_dsub+0x23c>
 80026aa:	e224      	b.n	8002af6 <__aeabi_dsub+0x686>
 80026ac:	2620      	movs	r6, #32
 80026ae:	1ab4      	subs	r4, r6, r2
 80026b0:	46a2      	mov	sl, r4
 80026b2:	4664      	mov	r4, ip
 80026b4:	4656      	mov	r6, sl
 80026b6:	40b4      	lsls	r4, r6
 80026b8:	46a1      	mov	r9, r4
 80026ba:	001c      	movs	r4, r3
 80026bc:	464e      	mov	r6, r9
 80026be:	40d4      	lsrs	r4, r2
 80026c0:	4326      	orrs	r6, r4
 80026c2:	0034      	movs	r4, r6
 80026c4:	4656      	mov	r6, sl
 80026c6:	40b3      	lsls	r3, r6
 80026c8:	1e5e      	subs	r6, r3, #1
 80026ca:	41b3      	sbcs	r3, r6
 80026cc:	431c      	orrs	r4, r3
 80026ce:	4663      	mov	r3, ip
 80026d0:	40d3      	lsrs	r3, r2
 80026d2:	18c9      	adds	r1, r1, r3
 80026d4:	19e4      	adds	r4, r4, r7
 80026d6:	42bc      	cmp	r4, r7
 80026d8:	41bf      	sbcs	r7, r7
 80026da:	427f      	negs	r7, r7
 80026dc:	46b9      	mov	r9, r7
 80026de:	4680      	mov	r8, r0
 80026e0:	4489      	add	r9, r1
 80026e2:	e0d8      	b.n	8002896 <__aeabi_dsub+0x426>
 80026e4:	4640      	mov	r0, r8
 80026e6:	4c3b      	ldr	r4, [pc, #236]	; (80027d4 <__aeabi_dsub+0x364>)
 80026e8:	3001      	adds	r0, #1
 80026ea:	4220      	tst	r0, r4
 80026ec:	d000      	beq.n	80026f0 <__aeabi_dsub+0x280>
 80026ee:	e0b4      	b.n	800285a <__aeabi_dsub+0x3ea>
 80026f0:	4640      	mov	r0, r8
 80026f2:	2800      	cmp	r0, #0
 80026f4:	d000      	beq.n	80026f8 <__aeabi_dsub+0x288>
 80026f6:	e144      	b.n	8002982 <__aeabi_dsub+0x512>
 80026f8:	4660      	mov	r0, ip
 80026fa:	4318      	orrs	r0, r3
 80026fc:	d100      	bne.n	8002700 <__aeabi_dsub+0x290>
 80026fe:	e190      	b.n	8002a22 <__aeabi_dsub+0x5b2>
 8002700:	0008      	movs	r0, r1
 8002702:	4338      	orrs	r0, r7
 8002704:	d000      	beq.n	8002708 <__aeabi_dsub+0x298>
 8002706:	e1aa      	b.n	8002a5e <__aeabi_dsub+0x5ee>
 8002708:	4661      	mov	r1, ip
 800270a:	08db      	lsrs	r3, r3, #3
 800270c:	0749      	lsls	r1, r1, #29
 800270e:	430b      	orrs	r3, r1
 8002710:	4661      	mov	r1, ip
 8002712:	08cc      	lsrs	r4, r1, #3
 8002714:	e027      	b.n	8002766 <__aeabi_dsub+0x2f6>
 8002716:	0008      	movs	r0, r1
 8002718:	4338      	orrs	r0, r7
 800271a:	d061      	beq.n	80027e0 <__aeabi_dsub+0x370>
 800271c:	1e50      	subs	r0, r2, #1
 800271e:	2a01      	cmp	r2, #1
 8002720:	d100      	bne.n	8002724 <__aeabi_dsub+0x2b4>
 8002722:	e139      	b.n	8002998 <__aeabi_dsub+0x528>
 8002724:	42a2      	cmp	r2, r4
 8002726:	d027      	beq.n	8002778 <__aeabi_dsub+0x308>
 8002728:	0002      	movs	r2, r0
 800272a:	e75d      	b.n	80025e8 <__aeabi_dsub+0x178>
 800272c:	0002      	movs	r2, r0
 800272e:	391f      	subs	r1, #31
 8002730:	40ca      	lsrs	r2, r1
 8002732:	0011      	movs	r1, r2
 8002734:	2b20      	cmp	r3, #32
 8002736:	d003      	beq.n	8002740 <__aeabi_dsub+0x2d0>
 8002738:	2240      	movs	r2, #64	; 0x40
 800273a:	1ad3      	subs	r3, r2, r3
 800273c:	4098      	lsls	r0, r3
 800273e:	4304      	orrs	r4, r0
 8002740:	1e63      	subs	r3, r4, #1
 8002742:	419c      	sbcs	r4, r3
 8002744:	2300      	movs	r3, #0
 8002746:	4699      	mov	r9, r3
 8002748:	4698      	mov	r8, r3
 800274a:	430c      	orrs	r4, r1
 800274c:	0763      	lsls	r3, r4, #29
 800274e:	d000      	beq.n	8002752 <__aeabi_dsub+0x2e2>
 8002750:	e712      	b.n	8002578 <__aeabi_dsub+0x108>
 8002752:	464b      	mov	r3, r9
 8002754:	464a      	mov	r2, r9
 8002756:	08e4      	lsrs	r4, r4, #3
 8002758:	075b      	lsls	r3, r3, #29
 800275a:	4323      	orrs	r3, r4
 800275c:	08d4      	lsrs	r4, r2, #3
 800275e:	4642      	mov	r2, r8
 8002760:	4919      	ldr	r1, [pc, #100]	; (80027c8 <__aeabi_dsub+0x358>)
 8002762:	428a      	cmp	r2, r1
 8002764:	d00e      	beq.n	8002784 <__aeabi_dsub+0x314>
 8002766:	0324      	lsls	r4, r4, #12
 8002768:	0552      	lsls	r2, r2, #21
 800276a:	0b24      	lsrs	r4, r4, #12
 800276c:	0d52      	lsrs	r2, r2, #21
 800276e:	e722      	b.n	80025b6 <__aeabi_dsub+0x146>
 8002770:	000a      	movs	r2, r1
 8002772:	2400      	movs	r4, #0
 8002774:	2300      	movs	r3, #0
 8002776:	e71e      	b.n	80025b6 <__aeabi_dsub+0x146>
 8002778:	08db      	lsrs	r3, r3, #3
 800277a:	4662      	mov	r2, ip
 800277c:	0752      	lsls	r2, r2, #29
 800277e:	4313      	orrs	r3, r2
 8002780:	4662      	mov	r2, ip
 8002782:	08d4      	lsrs	r4, r2, #3
 8002784:	001a      	movs	r2, r3
 8002786:	4322      	orrs	r2, r4
 8002788:	d100      	bne.n	800278c <__aeabi_dsub+0x31c>
 800278a:	e1fc      	b.n	8002b86 <__aeabi_dsub+0x716>
 800278c:	2280      	movs	r2, #128	; 0x80
 800278e:	0312      	lsls	r2, r2, #12
 8002790:	4314      	orrs	r4, r2
 8002792:	0324      	lsls	r4, r4, #12
 8002794:	4a0c      	ldr	r2, [pc, #48]	; (80027c8 <__aeabi_dsub+0x358>)
 8002796:	0b24      	lsrs	r4, r4, #12
 8002798:	e70d      	b.n	80025b6 <__aeabi_dsub+0x146>
 800279a:	0020      	movs	r0, r4
 800279c:	f000 faec 	bl	8002d78 <__clzsi2>
 80027a0:	0001      	movs	r1, r0
 80027a2:	3118      	adds	r1, #24
 80027a4:	291f      	cmp	r1, #31
 80027a6:	dc00      	bgt.n	80027aa <__aeabi_dsub+0x33a>
 80027a8:	e6c4      	b.n	8002534 <__aeabi_dsub+0xc4>
 80027aa:	3808      	subs	r0, #8
 80027ac:	4084      	lsls	r4, r0
 80027ae:	4643      	mov	r3, r8
 80027b0:	0020      	movs	r0, r4
 80027b2:	2400      	movs	r4, #0
 80027b4:	4588      	cmp	r8, r1
 80027b6:	dc00      	bgt.n	80027ba <__aeabi_dsub+0x34a>
 80027b8:	e6c8      	b.n	800254c <__aeabi_dsub+0xdc>
 80027ba:	4a04      	ldr	r2, [pc, #16]	; (80027cc <__aeabi_dsub+0x35c>)
 80027bc:	1a5b      	subs	r3, r3, r1
 80027be:	4010      	ands	r0, r2
 80027c0:	4698      	mov	r8, r3
 80027c2:	4681      	mov	r9, r0
 80027c4:	e6d6      	b.n	8002574 <__aeabi_dsub+0x104>
 80027c6:	46c0      	nop			; (mov r8, r8)
 80027c8:	000007ff 	.word	0x000007ff
 80027cc:	ff7fffff 	.word	0xff7fffff
 80027d0:	fffff801 	.word	0xfffff801
 80027d4:	000007fe 	.word	0x000007fe
 80027d8:	430f      	orrs	r7, r1
 80027da:	1e7a      	subs	r2, r7, #1
 80027dc:	4197      	sbcs	r7, r2
 80027de:	e691      	b.n	8002504 <__aeabi_dsub+0x94>
 80027e0:	4661      	mov	r1, ip
 80027e2:	08db      	lsrs	r3, r3, #3
 80027e4:	0749      	lsls	r1, r1, #29
 80027e6:	430b      	orrs	r3, r1
 80027e8:	4661      	mov	r1, ip
 80027ea:	08cc      	lsrs	r4, r1, #3
 80027ec:	e7b8      	b.n	8002760 <__aeabi_dsub+0x2f0>
 80027ee:	4640      	mov	r0, r8
 80027f0:	4cd3      	ldr	r4, [pc, #844]	; (8002b40 <__aeabi_dsub+0x6d0>)
 80027f2:	3001      	adds	r0, #1
 80027f4:	4220      	tst	r0, r4
 80027f6:	d000      	beq.n	80027fa <__aeabi_dsub+0x38a>
 80027f8:	e0a2      	b.n	8002940 <__aeabi_dsub+0x4d0>
 80027fa:	4640      	mov	r0, r8
 80027fc:	2800      	cmp	r0, #0
 80027fe:	d000      	beq.n	8002802 <__aeabi_dsub+0x392>
 8002800:	e101      	b.n	8002a06 <__aeabi_dsub+0x596>
 8002802:	4660      	mov	r0, ip
 8002804:	4318      	orrs	r0, r3
 8002806:	d100      	bne.n	800280a <__aeabi_dsub+0x39a>
 8002808:	e15e      	b.n	8002ac8 <__aeabi_dsub+0x658>
 800280a:	0008      	movs	r0, r1
 800280c:	4338      	orrs	r0, r7
 800280e:	d000      	beq.n	8002812 <__aeabi_dsub+0x3a2>
 8002810:	e15f      	b.n	8002ad2 <__aeabi_dsub+0x662>
 8002812:	4661      	mov	r1, ip
 8002814:	08db      	lsrs	r3, r3, #3
 8002816:	0749      	lsls	r1, r1, #29
 8002818:	430b      	orrs	r3, r1
 800281a:	4661      	mov	r1, ip
 800281c:	08cc      	lsrs	r4, r1, #3
 800281e:	e7a2      	b.n	8002766 <__aeabi_dsub+0x2f6>
 8002820:	4dc8      	ldr	r5, [pc, #800]	; (8002b44 <__aeabi_dsub+0x6d4>)
 8002822:	42a8      	cmp	r0, r5
 8002824:	d100      	bne.n	8002828 <__aeabi_dsub+0x3b8>
 8002826:	e0cf      	b.n	80029c8 <__aeabi_dsub+0x558>
 8002828:	2580      	movs	r5, #128	; 0x80
 800282a:	4664      	mov	r4, ip
 800282c:	042d      	lsls	r5, r5, #16
 800282e:	432c      	orrs	r4, r5
 8002830:	46a4      	mov	ip, r4
 8002832:	2a38      	cmp	r2, #56	; 0x38
 8002834:	dc56      	bgt.n	80028e4 <__aeabi_dsub+0x474>
 8002836:	2a1f      	cmp	r2, #31
 8002838:	dd00      	ble.n	800283c <__aeabi_dsub+0x3cc>
 800283a:	e0d1      	b.n	80029e0 <__aeabi_dsub+0x570>
 800283c:	2520      	movs	r5, #32
 800283e:	001e      	movs	r6, r3
 8002840:	1aad      	subs	r5, r5, r2
 8002842:	4664      	mov	r4, ip
 8002844:	40ab      	lsls	r3, r5
 8002846:	40ac      	lsls	r4, r5
 8002848:	40d6      	lsrs	r6, r2
 800284a:	1e5d      	subs	r5, r3, #1
 800284c:	41ab      	sbcs	r3, r5
 800284e:	4334      	orrs	r4, r6
 8002850:	4323      	orrs	r3, r4
 8002852:	4664      	mov	r4, ip
 8002854:	40d4      	lsrs	r4, r2
 8002856:	1b09      	subs	r1, r1, r4
 8002858:	e049      	b.n	80028ee <__aeabi_dsub+0x47e>
 800285a:	4660      	mov	r0, ip
 800285c:	1bdc      	subs	r4, r3, r7
 800285e:	1a46      	subs	r6, r0, r1
 8002860:	42a3      	cmp	r3, r4
 8002862:	4180      	sbcs	r0, r0
 8002864:	4240      	negs	r0, r0
 8002866:	4681      	mov	r9, r0
 8002868:	0030      	movs	r0, r6
 800286a:	464e      	mov	r6, r9
 800286c:	1b80      	subs	r0, r0, r6
 800286e:	4681      	mov	r9, r0
 8002870:	0200      	lsls	r0, r0, #8
 8002872:	d476      	bmi.n	8002962 <__aeabi_dsub+0x4f2>
 8002874:	464b      	mov	r3, r9
 8002876:	4323      	orrs	r3, r4
 8002878:	d000      	beq.n	800287c <__aeabi_dsub+0x40c>
 800287a:	e652      	b.n	8002522 <__aeabi_dsub+0xb2>
 800287c:	2400      	movs	r4, #0
 800287e:	2500      	movs	r5, #0
 8002880:	e771      	b.n	8002766 <__aeabi_dsub+0x2f6>
 8002882:	4339      	orrs	r1, r7
 8002884:	000c      	movs	r4, r1
 8002886:	1e62      	subs	r2, r4, #1
 8002888:	4194      	sbcs	r4, r2
 800288a:	18e4      	adds	r4, r4, r3
 800288c:	429c      	cmp	r4, r3
 800288e:	419b      	sbcs	r3, r3
 8002890:	425b      	negs	r3, r3
 8002892:	4463      	add	r3, ip
 8002894:	4699      	mov	r9, r3
 8002896:	464b      	mov	r3, r9
 8002898:	021b      	lsls	r3, r3, #8
 800289a:	d400      	bmi.n	800289e <__aeabi_dsub+0x42e>
 800289c:	e756      	b.n	800274c <__aeabi_dsub+0x2dc>
 800289e:	2301      	movs	r3, #1
 80028a0:	469c      	mov	ip, r3
 80028a2:	4ba8      	ldr	r3, [pc, #672]	; (8002b44 <__aeabi_dsub+0x6d4>)
 80028a4:	44e0      	add	r8, ip
 80028a6:	4598      	cmp	r8, r3
 80028a8:	d038      	beq.n	800291c <__aeabi_dsub+0x4ac>
 80028aa:	464b      	mov	r3, r9
 80028ac:	48a6      	ldr	r0, [pc, #664]	; (8002b48 <__aeabi_dsub+0x6d8>)
 80028ae:	2201      	movs	r2, #1
 80028b0:	4003      	ands	r3, r0
 80028b2:	0018      	movs	r0, r3
 80028b4:	0863      	lsrs	r3, r4, #1
 80028b6:	4014      	ands	r4, r2
 80028b8:	431c      	orrs	r4, r3
 80028ba:	07c3      	lsls	r3, r0, #31
 80028bc:	431c      	orrs	r4, r3
 80028be:	0843      	lsrs	r3, r0, #1
 80028c0:	4699      	mov	r9, r3
 80028c2:	e657      	b.n	8002574 <__aeabi_dsub+0x104>
 80028c4:	0010      	movs	r0, r2
 80028c6:	000e      	movs	r6, r1
 80028c8:	3820      	subs	r0, #32
 80028ca:	40c6      	lsrs	r6, r0
 80028cc:	2a20      	cmp	r2, #32
 80028ce:	d004      	beq.n	80028da <__aeabi_dsub+0x46a>
 80028d0:	2040      	movs	r0, #64	; 0x40
 80028d2:	1a82      	subs	r2, r0, r2
 80028d4:	4091      	lsls	r1, r2
 80028d6:	430f      	orrs	r7, r1
 80028d8:	46b9      	mov	r9, r7
 80028da:	464f      	mov	r7, r9
 80028dc:	1e7a      	subs	r2, r7, #1
 80028de:	4197      	sbcs	r7, r2
 80028e0:	4337      	orrs	r7, r6
 80028e2:	e60f      	b.n	8002504 <__aeabi_dsub+0x94>
 80028e4:	4662      	mov	r2, ip
 80028e6:	431a      	orrs	r2, r3
 80028e8:	0013      	movs	r3, r2
 80028ea:	1e5a      	subs	r2, r3, #1
 80028ec:	4193      	sbcs	r3, r2
 80028ee:	1afc      	subs	r4, r7, r3
 80028f0:	42a7      	cmp	r7, r4
 80028f2:	41bf      	sbcs	r7, r7
 80028f4:	427f      	negs	r7, r7
 80028f6:	1bcb      	subs	r3, r1, r7
 80028f8:	4699      	mov	r9, r3
 80028fa:	465d      	mov	r5, fp
 80028fc:	4680      	mov	r8, r0
 80028fe:	e608      	b.n	8002512 <__aeabi_dsub+0xa2>
 8002900:	4666      	mov	r6, ip
 8002902:	431e      	orrs	r6, r3
 8002904:	d100      	bne.n	8002908 <__aeabi_dsub+0x498>
 8002906:	e0be      	b.n	8002a86 <__aeabi_dsub+0x616>
 8002908:	1e56      	subs	r6, r2, #1
 800290a:	2a01      	cmp	r2, #1
 800290c:	d100      	bne.n	8002910 <__aeabi_dsub+0x4a0>
 800290e:	e109      	b.n	8002b24 <__aeabi_dsub+0x6b4>
 8002910:	4c8c      	ldr	r4, [pc, #560]	; (8002b44 <__aeabi_dsub+0x6d4>)
 8002912:	42a2      	cmp	r2, r4
 8002914:	d100      	bne.n	8002918 <__aeabi_dsub+0x4a8>
 8002916:	e119      	b.n	8002b4c <__aeabi_dsub+0x6dc>
 8002918:	0032      	movs	r2, r6
 800291a:	e6c1      	b.n	80026a0 <__aeabi_dsub+0x230>
 800291c:	4642      	mov	r2, r8
 800291e:	2400      	movs	r4, #0
 8002920:	2300      	movs	r3, #0
 8002922:	e648      	b.n	80025b6 <__aeabi_dsub+0x146>
 8002924:	2020      	movs	r0, #32
 8002926:	000c      	movs	r4, r1
 8002928:	1a80      	subs	r0, r0, r2
 800292a:	003e      	movs	r6, r7
 800292c:	4087      	lsls	r7, r0
 800292e:	4084      	lsls	r4, r0
 8002930:	40d6      	lsrs	r6, r2
 8002932:	1e78      	subs	r0, r7, #1
 8002934:	4187      	sbcs	r7, r0
 8002936:	40d1      	lsrs	r1, r2
 8002938:	4334      	orrs	r4, r6
 800293a:	433c      	orrs	r4, r7
 800293c:	448c      	add	ip, r1
 800293e:	e7a4      	b.n	800288a <__aeabi_dsub+0x41a>
 8002940:	4a80      	ldr	r2, [pc, #512]	; (8002b44 <__aeabi_dsub+0x6d4>)
 8002942:	4290      	cmp	r0, r2
 8002944:	d100      	bne.n	8002948 <__aeabi_dsub+0x4d8>
 8002946:	e0e9      	b.n	8002b1c <__aeabi_dsub+0x6ac>
 8002948:	19df      	adds	r7, r3, r7
 800294a:	429f      	cmp	r7, r3
 800294c:	419b      	sbcs	r3, r3
 800294e:	4461      	add	r1, ip
 8002950:	425b      	negs	r3, r3
 8002952:	18c9      	adds	r1, r1, r3
 8002954:	07cc      	lsls	r4, r1, #31
 8002956:	087f      	lsrs	r7, r7, #1
 8002958:	084b      	lsrs	r3, r1, #1
 800295a:	4699      	mov	r9, r3
 800295c:	4680      	mov	r8, r0
 800295e:	433c      	orrs	r4, r7
 8002960:	e6f4      	b.n	800274c <__aeabi_dsub+0x2dc>
 8002962:	1afc      	subs	r4, r7, r3
 8002964:	42a7      	cmp	r7, r4
 8002966:	41bf      	sbcs	r7, r7
 8002968:	4663      	mov	r3, ip
 800296a:	427f      	negs	r7, r7
 800296c:	1ac9      	subs	r1, r1, r3
 800296e:	1bcb      	subs	r3, r1, r7
 8002970:	4699      	mov	r9, r3
 8002972:	465d      	mov	r5, fp
 8002974:	e5d5      	b.n	8002522 <__aeabi_dsub+0xb2>
 8002976:	08ff      	lsrs	r7, r7, #3
 8002978:	074b      	lsls	r3, r1, #29
 800297a:	465d      	mov	r5, fp
 800297c:	433b      	orrs	r3, r7
 800297e:	08cc      	lsrs	r4, r1, #3
 8002980:	e6ee      	b.n	8002760 <__aeabi_dsub+0x2f0>
 8002982:	4662      	mov	r2, ip
 8002984:	431a      	orrs	r2, r3
 8002986:	d000      	beq.n	800298a <__aeabi_dsub+0x51a>
 8002988:	e082      	b.n	8002a90 <__aeabi_dsub+0x620>
 800298a:	000b      	movs	r3, r1
 800298c:	433b      	orrs	r3, r7
 800298e:	d11b      	bne.n	80029c8 <__aeabi_dsub+0x558>
 8002990:	2480      	movs	r4, #128	; 0x80
 8002992:	2500      	movs	r5, #0
 8002994:	0324      	lsls	r4, r4, #12
 8002996:	e6f9      	b.n	800278c <__aeabi_dsub+0x31c>
 8002998:	19dc      	adds	r4, r3, r7
 800299a:	429c      	cmp	r4, r3
 800299c:	419b      	sbcs	r3, r3
 800299e:	4461      	add	r1, ip
 80029a0:	4689      	mov	r9, r1
 80029a2:	425b      	negs	r3, r3
 80029a4:	4499      	add	r9, r3
 80029a6:	464b      	mov	r3, r9
 80029a8:	021b      	lsls	r3, r3, #8
 80029aa:	d444      	bmi.n	8002a36 <__aeabi_dsub+0x5c6>
 80029ac:	2301      	movs	r3, #1
 80029ae:	4698      	mov	r8, r3
 80029b0:	e6cc      	b.n	800274c <__aeabi_dsub+0x2dc>
 80029b2:	1bdc      	subs	r4, r3, r7
 80029b4:	4662      	mov	r2, ip
 80029b6:	42a3      	cmp	r3, r4
 80029b8:	419b      	sbcs	r3, r3
 80029ba:	1a51      	subs	r1, r2, r1
 80029bc:	425b      	negs	r3, r3
 80029be:	1acb      	subs	r3, r1, r3
 80029c0:	4699      	mov	r9, r3
 80029c2:	2301      	movs	r3, #1
 80029c4:	4698      	mov	r8, r3
 80029c6:	e5a4      	b.n	8002512 <__aeabi_dsub+0xa2>
 80029c8:	08ff      	lsrs	r7, r7, #3
 80029ca:	074b      	lsls	r3, r1, #29
 80029cc:	465d      	mov	r5, fp
 80029ce:	433b      	orrs	r3, r7
 80029d0:	08cc      	lsrs	r4, r1, #3
 80029d2:	e6d7      	b.n	8002784 <__aeabi_dsub+0x314>
 80029d4:	4662      	mov	r2, ip
 80029d6:	431a      	orrs	r2, r3
 80029d8:	0014      	movs	r4, r2
 80029da:	1e63      	subs	r3, r4, #1
 80029dc:	419c      	sbcs	r4, r3
 80029de:	e679      	b.n	80026d4 <__aeabi_dsub+0x264>
 80029e0:	0015      	movs	r5, r2
 80029e2:	4664      	mov	r4, ip
 80029e4:	3d20      	subs	r5, #32
 80029e6:	40ec      	lsrs	r4, r5
 80029e8:	46a0      	mov	r8, r4
 80029ea:	2a20      	cmp	r2, #32
 80029ec:	d005      	beq.n	80029fa <__aeabi_dsub+0x58a>
 80029ee:	2540      	movs	r5, #64	; 0x40
 80029f0:	4664      	mov	r4, ip
 80029f2:	1aaa      	subs	r2, r5, r2
 80029f4:	4094      	lsls	r4, r2
 80029f6:	4323      	orrs	r3, r4
 80029f8:	469a      	mov	sl, r3
 80029fa:	4654      	mov	r4, sl
 80029fc:	1e63      	subs	r3, r4, #1
 80029fe:	419c      	sbcs	r4, r3
 8002a00:	4643      	mov	r3, r8
 8002a02:	4323      	orrs	r3, r4
 8002a04:	e773      	b.n	80028ee <__aeabi_dsub+0x47e>
 8002a06:	4662      	mov	r2, ip
 8002a08:	431a      	orrs	r2, r3
 8002a0a:	d023      	beq.n	8002a54 <__aeabi_dsub+0x5e4>
 8002a0c:	000a      	movs	r2, r1
 8002a0e:	433a      	orrs	r2, r7
 8002a10:	d000      	beq.n	8002a14 <__aeabi_dsub+0x5a4>
 8002a12:	e0a0      	b.n	8002b56 <__aeabi_dsub+0x6e6>
 8002a14:	4662      	mov	r2, ip
 8002a16:	08db      	lsrs	r3, r3, #3
 8002a18:	0752      	lsls	r2, r2, #29
 8002a1a:	4313      	orrs	r3, r2
 8002a1c:	4662      	mov	r2, ip
 8002a1e:	08d4      	lsrs	r4, r2, #3
 8002a20:	e6b0      	b.n	8002784 <__aeabi_dsub+0x314>
 8002a22:	000b      	movs	r3, r1
 8002a24:	433b      	orrs	r3, r7
 8002a26:	d100      	bne.n	8002a2a <__aeabi_dsub+0x5ba>
 8002a28:	e728      	b.n	800287c <__aeabi_dsub+0x40c>
 8002a2a:	08ff      	lsrs	r7, r7, #3
 8002a2c:	074b      	lsls	r3, r1, #29
 8002a2e:	465d      	mov	r5, fp
 8002a30:	433b      	orrs	r3, r7
 8002a32:	08cc      	lsrs	r4, r1, #3
 8002a34:	e697      	b.n	8002766 <__aeabi_dsub+0x2f6>
 8002a36:	2302      	movs	r3, #2
 8002a38:	4698      	mov	r8, r3
 8002a3a:	e736      	b.n	80028aa <__aeabi_dsub+0x43a>
 8002a3c:	1afc      	subs	r4, r7, r3
 8002a3e:	42a7      	cmp	r7, r4
 8002a40:	41bf      	sbcs	r7, r7
 8002a42:	4663      	mov	r3, ip
 8002a44:	427f      	negs	r7, r7
 8002a46:	1ac9      	subs	r1, r1, r3
 8002a48:	1bcb      	subs	r3, r1, r7
 8002a4a:	4699      	mov	r9, r3
 8002a4c:	2301      	movs	r3, #1
 8002a4e:	465d      	mov	r5, fp
 8002a50:	4698      	mov	r8, r3
 8002a52:	e55e      	b.n	8002512 <__aeabi_dsub+0xa2>
 8002a54:	074b      	lsls	r3, r1, #29
 8002a56:	08ff      	lsrs	r7, r7, #3
 8002a58:	433b      	orrs	r3, r7
 8002a5a:	08cc      	lsrs	r4, r1, #3
 8002a5c:	e692      	b.n	8002784 <__aeabi_dsub+0x314>
 8002a5e:	1bdc      	subs	r4, r3, r7
 8002a60:	4660      	mov	r0, ip
 8002a62:	42a3      	cmp	r3, r4
 8002a64:	41b6      	sbcs	r6, r6
 8002a66:	1a40      	subs	r0, r0, r1
 8002a68:	4276      	negs	r6, r6
 8002a6a:	1b80      	subs	r0, r0, r6
 8002a6c:	4681      	mov	r9, r0
 8002a6e:	0200      	lsls	r0, r0, #8
 8002a70:	d560      	bpl.n	8002b34 <__aeabi_dsub+0x6c4>
 8002a72:	1afc      	subs	r4, r7, r3
 8002a74:	42a7      	cmp	r7, r4
 8002a76:	41bf      	sbcs	r7, r7
 8002a78:	4663      	mov	r3, ip
 8002a7a:	427f      	negs	r7, r7
 8002a7c:	1ac9      	subs	r1, r1, r3
 8002a7e:	1bcb      	subs	r3, r1, r7
 8002a80:	4699      	mov	r9, r3
 8002a82:	465d      	mov	r5, fp
 8002a84:	e576      	b.n	8002574 <__aeabi_dsub+0x104>
 8002a86:	08ff      	lsrs	r7, r7, #3
 8002a88:	074b      	lsls	r3, r1, #29
 8002a8a:	433b      	orrs	r3, r7
 8002a8c:	08cc      	lsrs	r4, r1, #3
 8002a8e:	e667      	b.n	8002760 <__aeabi_dsub+0x2f0>
 8002a90:	000a      	movs	r2, r1
 8002a92:	08db      	lsrs	r3, r3, #3
 8002a94:	433a      	orrs	r2, r7
 8002a96:	d100      	bne.n	8002a9a <__aeabi_dsub+0x62a>
 8002a98:	e66f      	b.n	800277a <__aeabi_dsub+0x30a>
 8002a9a:	4662      	mov	r2, ip
 8002a9c:	0752      	lsls	r2, r2, #29
 8002a9e:	4313      	orrs	r3, r2
 8002aa0:	4662      	mov	r2, ip
 8002aa2:	08d4      	lsrs	r4, r2, #3
 8002aa4:	2280      	movs	r2, #128	; 0x80
 8002aa6:	0312      	lsls	r2, r2, #12
 8002aa8:	4214      	tst	r4, r2
 8002aaa:	d007      	beq.n	8002abc <__aeabi_dsub+0x64c>
 8002aac:	08c8      	lsrs	r0, r1, #3
 8002aae:	4210      	tst	r0, r2
 8002ab0:	d104      	bne.n	8002abc <__aeabi_dsub+0x64c>
 8002ab2:	465d      	mov	r5, fp
 8002ab4:	0004      	movs	r4, r0
 8002ab6:	08fb      	lsrs	r3, r7, #3
 8002ab8:	0749      	lsls	r1, r1, #29
 8002aba:	430b      	orrs	r3, r1
 8002abc:	0f5a      	lsrs	r2, r3, #29
 8002abe:	00db      	lsls	r3, r3, #3
 8002ac0:	08db      	lsrs	r3, r3, #3
 8002ac2:	0752      	lsls	r2, r2, #29
 8002ac4:	4313      	orrs	r3, r2
 8002ac6:	e65d      	b.n	8002784 <__aeabi_dsub+0x314>
 8002ac8:	074b      	lsls	r3, r1, #29
 8002aca:	08ff      	lsrs	r7, r7, #3
 8002acc:	433b      	orrs	r3, r7
 8002ace:	08cc      	lsrs	r4, r1, #3
 8002ad0:	e649      	b.n	8002766 <__aeabi_dsub+0x2f6>
 8002ad2:	19dc      	adds	r4, r3, r7
 8002ad4:	429c      	cmp	r4, r3
 8002ad6:	419b      	sbcs	r3, r3
 8002ad8:	4461      	add	r1, ip
 8002ada:	4689      	mov	r9, r1
 8002adc:	425b      	negs	r3, r3
 8002ade:	4499      	add	r9, r3
 8002ae0:	464b      	mov	r3, r9
 8002ae2:	021b      	lsls	r3, r3, #8
 8002ae4:	d400      	bmi.n	8002ae8 <__aeabi_dsub+0x678>
 8002ae6:	e631      	b.n	800274c <__aeabi_dsub+0x2dc>
 8002ae8:	464a      	mov	r2, r9
 8002aea:	4b17      	ldr	r3, [pc, #92]	; (8002b48 <__aeabi_dsub+0x6d8>)
 8002aec:	401a      	ands	r2, r3
 8002aee:	2301      	movs	r3, #1
 8002af0:	4691      	mov	r9, r2
 8002af2:	4698      	mov	r8, r3
 8002af4:	e62a      	b.n	800274c <__aeabi_dsub+0x2dc>
 8002af6:	0016      	movs	r6, r2
 8002af8:	4664      	mov	r4, ip
 8002afa:	3e20      	subs	r6, #32
 8002afc:	40f4      	lsrs	r4, r6
 8002afe:	46a0      	mov	r8, r4
 8002b00:	2a20      	cmp	r2, #32
 8002b02:	d005      	beq.n	8002b10 <__aeabi_dsub+0x6a0>
 8002b04:	2640      	movs	r6, #64	; 0x40
 8002b06:	4664      	mov	r4, ip
 8002b08:	1ab2      	subs	r2, r6, r2
 8002b0a:	4094      	lsls	r4, r2
 8002b0c:	4323      	orrs	r3, r4
 8002b0e:	469a      	mov	sl, r3
 8002b10:	4654      	mov	r4, sl
 8002b12:	1e63      	subs	r3, r4, #1
 8002b14:	419c      	sbcs	r4, r3
 8002b16:	4643      	mov	r3, r8
 8002b18:	431c      	orrs	r4, r3
 8002b1a:	e5db      	b.n	80026d4 <__aeabi_dsub+0x264>
 8002b1c:	0002      	movs	r2, r0
 8002b1e:	2400      	movs	r4, #0
 8002b20:	2300      	movs	r3, #0
 8002b22:	e548      	b.n	80025b6 <__aeabi_dsub+0x146>
 8002b24:	19dc      	adds	r4, r3, r7
 8002b26:	42bc      	cmp	r4, r7
 8002b28:	41bf      	sbcs	r7, r7
 8002b2a:	4461      	add	r1, ip
 8002b2c:	4689      	mov	r9, r1
 8002b2e:	427f      	negs	r7, r7
 8002b30:	44b9      	add	r9, r7
 8002b32:	e738      	b.n	80029a6 <__aeabi_dsub+0x536>
 8002b34:	464b      	mov	r3, r9
 8002b36:	4323      	orrs	r3, r4
 8002b38:	d100      	bne.n	8002b3c <__aeabi_dsub+0x6cc>
 8002b3a:	e69f      	b.n	800287c <__aeabi_dsub+0x40c>
 8002b3c:	e606      	b.n	800274c <__aeabi_dsub+0x2dc>
 8002b3e:	46c0      	nop			; (mov r8, r8)
 8002b40:	000007fe 	.word	0x000007fe
 8002b44:	000007ff 	.word	0x000007ff
 8002b48:	ff7fffff 	.word	0xff7fffff
 8002b4c:	08ff      	lsrs	r7, r7, #3
 8002b4e:	074b      	lsls	r3, r1, #29
 8002b50:	433b      	orrs	r3, r7
 8002b52:	08cc      	lsrs	r4, r1, #3
 8002b54:	e616      	b.n	8002784 <__aeabi_dsub+0x314>
 8002b56:	4662      	mov	r2, ip
 8002b58:	08db      	lsrs	r3, r3, #3
 8002b5a:	0752      	lsls	r2, r2, #29
 8002b5c:	4313      	orrs	r3, r2
 8002b5e:	4662      	mov	r2, ip
 8002b60:	08d4      	lsrs	r4, r2, #3
 8002b62:	2280      	movs	r2, #128	; 0x80
 8002b64:	0312      	lsls	r2, r2, #12
 8002b66:	4214      	tst	r4, r2
 8002b68:	d007      	beq.n	8002b7a <__aeabi_dsub+0x70a>
 8002b6a:	08c8      	lsrs	r0, r1, #3
 8002b6c:	4210      	tst	r0, r2
 8002b6e:	d104      	bne.n	8002b7a <__aeabi_dsub+0x70a>
 8002b70:	465d      	mov	r5, fp
 8002b72:	0004      	movs	r4, r0
 8002b74:	08fb      	lsrs	r3, r7, #3
 8002b76:	0749      	lsls	r1, r1, #29
 8002b78:	430b      	orrs	r3, r1
 8002b7a:	0f5a      	lsrs	r2, r3, #29
 8002b7c:	00db      	lsls	r3, r3, #3
 8002b7e:	0752      	lsls	r2, r2, #29
 8002b80:	08db      	lsrs	r3, r3, #3
 8002b82:	4313      	orrs	r3, r2
 8002b84:	e5fe      	b.n	8002784 <__aeabi_dsub+0x314>
 8002b86:	2300      	movs	r3, #0
 8002b88:	4a01      	ldr	r2, [pc, #4]	; (8002b90 <__aeabi_dsub+0x720>)
 8002b8a:	001c      	movs	r4, r3
 8002b8c:	e513      	b.n	80025b6 <__aeabi_dsub+0x146>
 8002b8e:	46c0      	nop			; (mov r8, r8)
 8002b90:	000007ff 	.word	0x000007ff

08002b94 <__aeabi_dcmpun>:
 8002b94:	b570      	push	{r4, r5, r6, lr}
 8002b96:	0005      	movs	r5, r0
 8002b98:	480c      	ldr	r0, [pc, #48]	; (8002bcc <__aeabi_dcmpun+0x38>)
 8002b9a:	031c      	lsls	r4, r3, #12
 8002b9c:	0016      	movs	r6, r2
 8002b9e:	005b      	lsls	r3, r3, #1
 8002ba0:	030a      	lsls	r2, r1, #12
 8002ba2:	0049      	lsls	r1, r1, #1
 8002ba4:	0b12      	lsrs	r2, r2, #12
 8002ba6:	0d49      	lsrs	r1, r1, #21
 8002ba8:	0b24      	lsrs	r4, r4, #12
 8002baa:	0d5b      	lsrs	r3, r3, #21
 8002bac:	4281      	cmp	r1, r0
 8002bae:	d008      	beq.n	8002bc2 <__aeabi_dcmpun+0x2e>
 8002bb0:	4a06      	ldr	r2, [pc, #24]	; (8002bcc <__aeabi_dcmpun+0x38>)
 8002bb2:	2000      	movs	r0, #0
 8002bb4:	4293      	cmp	r3, r2
 8002bb6:	d103      	bne.n	8002bc0 <__aeabi_dcmpun+0x2c>
 8002bb8:	0020      	movs	r0, r4
 8002bba:	4330      	orrs	r0, r6
 8002bbc:	1e43      	subs	r3, r0, #1
 8002bbe:	4198      	sbcs	r0, r3
 8002bc0:	bd70      	pop	{r4, r5, r6, pc}
 8002bc2:	2001      	movs	r0, #1
 8002bc4:	432a      	orrs	r2, r5
 8002bc6:	d1fb      	bne.n	8002bc0 <__aeabi_dcmpun+0x2c>
 8002bc8:	e7f2      	b.n	8002bb0 <__aeabi_dcmpun+0x1c>
 8002bca:	46c0      	nop			; (mov r8, r8)
 8002bcc:	000007ff 	.word	0x000007ff

08002bd0 <__aeabi_d2iz>:
 8002bd0:	000a      	movs	r2, r1
 8002bd2:	b530      	push	{r4, r5, lr}
 8002bd4:	4c13      	ldr	r4, [pc, #76]	; (8002c24 <__aeabi_d2iz+0x54>)
 8002bd6:	0053      	lsls	r3, r2, #1
 8002bd8:	0309      	lsls	r1, r1, #12
 8002bda:	0005      	movs	r5, r0
 8002bdc:	0b09      	lsrs	r1, r1, #12
 8002bde:	2000      	movs	r0, #0
 8002be0:	0d5b      	lsrs	r3, r3, #21
 8002be2:	0fd2      	lsrs	r2, r2, #31
 8002be4:	42a3      	cmp	r3, r4
 8002be6:	dd04      	ble.n	8002bf2 <__aeabi_d2iz+0x22>
 8002be8:	480f      	ldr	r0, [pc, #60]	; (8002c28 <__aeabi_d2iz+0x58>)
 8002bea:	4283      	cmp	r3, r0
 8002bec:	dd02      	ble.n	8002bf4 <__aeabi_d2iz+0x24>
 8002bee:	4b0f      	ldr	r3, [pc, #60]	; (8002c2c <__aeabi_d2iz+0x5c>)
 8002bf0:	18d0      	adds	r0, r2, r3
 8002bf2:	bd30      	pop	{r4, r5, pc}
 8002bf4:	2080      	movs	r0, #128	; 0x80
 8002bf6:	0340      	lsls	r0, r0, #13
 8002bf8:	4301      	orrs	r1, r0
 8002bfa:	480d      	ldr	r0, [pc, #52]	; (8002c30 <__aeabi_d2iz+0x60>)
 8002bfc:	1ac0      	subs	r0, r0, r3
 8002bfe:	281f      	cmp	r0, #31
 8002c00:	dd08      	ble.n	8002c14 <__aeabi_d2iz+0x44>
 8002c02:	480c      	ldr	r0, [pc, #48]	; (8002c34 <__aeabi_d2iz+0x64>)
 8002c04:	1ac3      	subs	r3, r0, r3
 8002c06:	40d9      	lsrs	r1, r3
 8002c08:	000b      	movs	r3, r1
 8002c0a:	4258      	negs	r0, r3
 8002c0c:	2a00      	cmp	r2, #0
 8002c0e:	d1f0      	bne.n	8002bf2 <__aeabi_d2iz+0x22>
 8002c10:	0018      	movs	r0, r3
 8002c12:	e7ee      	b.n	8002bf2 <__aeabi_d2iz+0x22>
 8002c14:	4c08      	ldr	r4, [pc, #32]	; (8002c38 <__aeabi_d2iz+0x68>)
 8002c16:	40c5      	lsrs	r5, r0
 8002c18:	46a4      	mov	ip, r4
 8002c1a:	4463      	add	r3, ip
 8002c1c:	4099      	lsls	r1, r3
 8002c1e:	000b      	movs	r3, r1
 8002c20:	432b      	orrs	r3, r5
 8002c22:	e7f2      	b.n	8002c0a <__aeabi_d2iz+0x3a>
 8002c24:	000003fe 	.word	0x000003fe
 8002c28:	0000041d 	.word	0x0000041d
 8002c2c:	7fffffff 	.word	0x7fffffff
 8002c30:	00000433 	.word	0x00000433
 8002c34:	00000413 	.word	0x00000413
 8002c38:	fffffbed 	.word	0xfffffbed

08002c3c <__aeabi_i2d>:
 8002c3c:	b570      	push	{r4, r5, r6, lr}
 8002c3e:	2800      	cmp	r0, #0
 8002c40:	d016      	beq.n	8002c70 <__aeabi_i2d+0x34>
 8002c42:	17c3      	asrs	r3, r0, #31
 8002c44:	18c5      	adds	r5, r0, r3
 8002c46:	405d      	eors	r5, r3
 8002c48:	0fc4      	lsrs	r4, r0, #31
 8002c4a:	0028      	movs	r0, r5
 8002c4c:	f000 f894 	bl	8002d78 <__clzsi2>
 8002c50:	4a11      	ldr	r2, [pc, #68]	; (8002c98 <__aeabi_i2d+0x5c>)
 8002c52:	1a12      	subs	r2, r2, r0
 8002c54:	280a      	cmp	r0, #10
 8002c56:	dc16      	bgt.n	8002c86 <__aeabi_i2d+0x4a>
 8002c58:	0003      	movs	r3, r0
 8002c5a:	002e      	movs	r6, r5
 8002c5c:	3315      	adds	r3, #21
 8002c5e:	409e      	lsls	r6, r3
 8002c60:	230b      	movs	r3, #11
 8002c62:	1a18      	subs	r0, r3, r0
 8002c64:	40c5      	lsrs	r5, r0
 8002c66:	0552      	lsls	r2, r2, #21
 8002c68:	032d      	lsls	r5, r5, #12
 8002c6a:	0b2d      	lsrs	r5, r5, #12
 8002c6c:	0d53      	lsrs	r3, r2, #21
 8002c6e:	e003      	b.n	8002c78 <__aeabi_i2d+0x3c>
 8002c70:	2400      	movs	r4, #0
 8002c72:	2300      	movs	r3, #0
 8002c74:	2500      	movs	r5, #0
 8002c76:	2600      	movs	r6, #0
 8002c78:	051b      	lsls	r3, r3, #20
 8002c7a:	432b      	orrs	r3, r5
 8002c7c:	07e4      	lsls	r4, r4, #31
 8002c7e:	4323      	orrs	r3, r4
 8002c80:	0030      	movs	r0, r6
 8002c82:	0019      	movs	r1, r3
 8002c84:	bd70      	pop	{r4, r5, r6, pc}
 8002c86:	380b      	subs	r0, #11
 8002c88:	4085      	lsls	r5, r0
 8002c8a:	0552      	lsls	r2, r2, #21
 8002c8c:	032d      	lsls	r5, r5, #12
 8002c8e:	2600      	movs	r6, #0
 8002c90:	0b2d      	lsrs	r5, r5, #12
 8002c92:	0d53      	lsrs	r3, r2, #21
 8002c94:	e7f0      	b.n	8002c78 <__aeabi_i2d+0x3c>
 8002c96:	46c0      	nop			; (mov r8, r8)
 8002c98:	0000041e 	.word	0x0000041e

08002c9c <__aeabi_ui2d>:
 8002c9c:	b510      	push	{r4, lr}
 8002c9e:	1e04      	subs	r4, r0, #0
 8002ca0:	d010      	beq.n	8002cc4 <__aeabi_ui2d+0x28>
 8002ca2:	f000 f869 	bl	8002d78 <__clzsi2>
 8002ca6:	4b0f      	ldr	r3, [pc, #60]	; (8002ce4 <__aeabi_ui2d+0x48>)
 8002ca8:	1a1b      	subs	r3, r3, r0
 8002caa:	280a      	cmp	r0, #10
 8002cac:	dc11      	bgt.n	8002cd2 <__aeabi_ui2d+0x36>
 8002cae:	220b      	movs	r2, #11
 8002cb0:	0021      	movs	r1, r4
 8002cb2:	1a12      	subs	r2, r2, r0
 8002cb4:	40d1      	lsrs	r1, r2
 8002cb6:	3015      	adds	r0, #21
 8002cb8:	030a      	lsls	r2, r1, #12
 8002cba:	055b      	lsls	r3, r3, #21
 8002cbc:	4084      	lsls	r4, r0
 8002cbe:	0b12      	lsrs	r2, r2, #12
 8002cc0:	0d5b      	lsrs	r3, r3, #21
 8002cc2:	e001      	b.n	8002cc8 <__aeabi_ui2d+0x2c>
 8002cc4:	2300      	movs	r3, #0
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	051b      	lsls	r3, r3, #20
 8002cca:	4313      	orrs	r3, r2
 8002ccc:	0020      	movs	r0, r4
 8002cce:	0019      	movs	r1, r3
 8002cd0:	bd10      	pop	{r4, pc}
 8002cd2:	0022      	movs	r2, r4
 8002cd4:	380b      	subs	r0, #11
 8002cd6:	4082      	lsls	r2, r0
 8002cd8:	055b      	lsls	r3, r3, #21
 8002cda:	0312      	lsls	r2, r2, #12
 8002cdc:	2400      	movs	r4, #0
 8002cde:	0b12      	lsrs	r2, r2, #12
 8002ce0:	0d5b      	lsrs	r3, r3, #21
 8002ce2:	e7f1      	b.n	8002cc8 <__aeabi_ui2d+0x2c>
 8002ce4:	0000041e 	.word	0x0000041e

08002ce8 <__aeabi_f2d>:
 8002ce8:	b570      	push	{r4, r5, r6, lr}
 8002cea:	0043      	lsls	r3, r0, #1
 8002cec:	0246      	lsls	r6, r0, #9
 8002cee:	0fc4      	lsrs	r4, r0, #31
 8002cf0:	20fe      	movs	r0, #254	; 0xfe
 8002cf2:	0e1b      	lsrs	r3, r3, #24
 8002cf4:	1c59      	adds	r1, r3, #1
 8002cf6:	0a75      	lsrs	r5, r6, #9
 8002cf8:	4208      	tst	r0, r1
 8002cfa:	d00c      	beq.n	8002d16 <__aeabi_f2d+0x2e>
 8002cfc:	22e0      	movs	r2, #224	; 0xe0
 8002cfe:	0092      	lsls	r2, r2, #2
 8002d00:	4694      	mov	ip, r2
 8002d02:	076d      	lsls	r5, r5, #29
 8002d04:	0b36      	lsrs	r6, r6, #12
 8002d06:	4463      	add	r3, ip
 8002d08:	051b      	lsls	r3, r3, #20
 8002d0a:	4333      	orrs	r3, r6
 8002d0c:	07e4      	lsls	r4, r4, #31
 8002d0e:	4323      	orrs	r3, r4
 8002d10:	0028      	movs	r0, r5
 8002d12:	0019      	movs	r1, r3
 8002d14:	bd70      	pop	{r4, r5, r6, pc}
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d114      	bne.n	8002d44 <__aeabi_f2d+0x5c>
 8002d1a:	2d00      	cmp	r5, #0
 8002d1c:	d01b      	beq.n	8002d56 <__aeabi_f2d+0x6e>
 8002d1e:	0028      	movs	r0, r5
 8002d20:	f000 f82a 	bl	8002d78 <__clzsi2>
 8002d24:	280a      	cmp	r0, #10
 8002d26:	dc1c      	bgt.n	8002d62 <__aeabi_f2d+0x7a>
 8002d28:	230b      	movs	r3, #11
 8002d2a:	002e      	movs	r6, r5
 8002d2c:	1a1b      	subs	r3, r3, r0
 8002d2e:	40de      	lsrs	r6, r3
 8002d30:	0003      	movs	r3, r0
 8002d32:	3315      	adds	r3, #21
 8002d34:	409d      	lsls	r5, r3
 8002d36:	4a0e      	ldr	r2, [pc, #56]	; (8002d70 <__aeabi_f2d+0x88>)
 8002d38:	0336      	lsls	r6, r6, #12
 8002d3a:	1a12      	subs	r2, r2, r0
 8002d3c:	0552      	lsls	r2, r2, #21
 8002d3e:	0b36      	lsrs	r6, r6, #12
 8002d40:	0d53      	lsrs	r3, r2, #21
 8002d42:	e7e1      	b.n	8002d08 <__aeabi_f2d+0x20>
 8002d44:	2d00      	cmp	r5, #0
 8002d46:	d009      	beq.n	8002d5c <__aeabi_f2d+0x74>
 8002d48:	2280      	movs	r2, #128	; 0x80
 8002d4a:	0b36      	lsrs	r6, r6, #12
 8002d4c:	0312      	lsls	r2, r2, #12
 8002d4e:	4b09      	ldr	r3, [pc, #36]	; (8002d74 <__aeabi_f2d+0x8c>)
 8002d50:	076d      	lsls	r5, r5, #29
 8002d52:	4316      	orrs	r6, r2
 8002d54:	e7d8      	b.n	8002d08 <__aeabi_f2d+0x20>
 8002d56:	2300      	movs	r3, #0
 8002d58:	2600      	movs	r6, #0
 8002d5a:	e7d5      	b.n	8002d08 <__aeabi_f2d+0x20>
 8002d5c:	2600      	movs	r6, #0
 8002d5e:	4b05      	ldr	r3, [pc, #20]	; (8002d74 <__aeabi_f2d+0x8c>)
 8002d60:	e7d2      	b.n	8002d08 <__aeabi_f2d+0x20>
 8002d62:	0003      	movs	r3, r0
 8002d64:	3b0b      	subs	r3, #11
 8002d66:	409d      	lsls	r5, r3
 8002d68:	002e      	movs	r6, r5
 8002d6a:	2500      	movs	r5, #0
 8002d6c:	e7e3      	b.n	8002d36 <__aeabi_f2d+0x4e>
 8002d6e:	46c0      	nop			; (mov r8, r8)
 8002d70:	00000389 	.word	0x00000389
 8002d74:	000007ff 	.word	0x000007ff

08002d78 <__clzsi2>:
 8002d78:	211c      	movs	r1, #28
 8002d7a:	2301      	movs	r3, #1
 8002d7c:	041b      	lsls	r3, r3, #16
 8002d7e:	4298      	cmp	r0, r3
 8002d80:	d301      	bcc.n	8002d86 <__clzsi2+0xe>
 8002d82:	0c00      	lsrs	r0, r0, #16
 8002d84:	3910      	subs	r1, #16
 8002d86:	0a1b      	lsrs	r3, r3, #8
 8002d88:	4298      	cmp	r0, r3
 8002d8a:	d301      	bcc.n	8002d90 <__clzsi2+0x18>
 8002d8c:	0a00      	lsrs	r0, r0, #8
 8002d8e:	3908      	subs	r1, #8
 8002d90:	091b      	lsrs	r3, r3, #4
 8002d92:	4298      	cmp	r0, r3
 8002d94:	d301      	bcc.n	8002d9a <__clzsi2+0x22>
 8002d96:	0900      	lsrs	r0, r0, #4
 8002d98:	3904      	subs	r1, #4
 8002d9a:	a202      	add	r2, pc, #8	; (adr r2, 8002da4 <__clzsi2+0x2c>)
 8002d9c:	5c10      	ldrb	r0, [r2, r0]
 8002d9e:	1840      	adds	r0, r0, r1
 8002da0:	4770      	bx	lr
 8002da2:	46c0      	nop			; (mov r8, r8)
 8002da4:	02020304 	.word	0x02020304
 8002da8:	01010101 	.word	0x01010101
	...

08002db4 <testCase1>:
#define SCL_PIN		8

#define SDA_PORT	PORTB
#define SDA_PIN		9

void testCase1() {
 8002db4:	b580      	push	{r7, lr}
 8002db6:	b084      	sub	sp, #16
 8002db8:	af00      	add	r7, sp, #0

	float Emiss = 0, minTemp = 0, maxTemp = 0;
 8002dba:	2300      	movs	r3, #0
 8002dbc:	60fb      	str	r3, [r7, #12]
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	60bb      	str	r3, [r7, #8]
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	607b      	str	r3, [r7, #4]
	status = mlx90614_getEmissivity(&Emiss);
 8002dc6:	230c      	movs	r3, #12
 8002dc8:	18fb      	adds	r3, r7, r3
 8002dca:	0018      	movs	r0, r3
 8002dcc:	f002 f908 	bl	8004fe0 <mlx90614_getEmissivity>
 8002dd0:	0003      	movs	r3, r0
 8002dd2:	001a      	movs	r2, r3
 8002dd4:	4b24      	ldr	r3, [pc, #144]	; (8002e68 <testCase1+0xb4>)
 8002dd6:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002dd8:	4b23      	ldr	r3, [pc, #140]	; (8002e68 <testCase1+0xb4>)
 8002dda:	781b      	ldrb	r3, [r3, #0]
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d109      	bne.n	8002df4 <testCase1+0x40>
		print("Emissivity = %f\n\r", Emiss);
 8002de0:	68fb      	ldr	r3, [r7, #12]
 8002de2:	1c18      	adds	r0, r3, #0
 8002de4:	f7ff ff80 	bl	8002ce8 <__aeabi_f2d>
 8002de8:	0002      	movs	r2, r0
 8002dea:	000b      	movs	r3, r1
 8002dec:	491f      	ldr	r1, [pc, #124]	; (8002e6c <testCase1+0xb8>)
 8002dee:	0008      	movs	r0, r1
 8002df0:	f001 f984 	bl	80040fc <print>
	}
	status = mlx90614_getMax(&maxTemp);
 8002df4:	1d3b      	adds	r3, r7, #4
 8002df6:	0018      	movs	r0, r3
 8002df8:	f002 f948 	bl	800508c <mlx90614_getMax>
 8002dfc:	0003      	movs	r3, r0
 8002dfe:	001a      	movs	r2, r3
 8002e00:	4b19      	ldr	r3, [pc, #100]	; (8002e68 <testCase1+0xb4>)
 8002e02:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002e04:	4b18      	ldr	r3, [pc, #96]	; (8002e68 <testCase1+0xb4>)
 8002e06:	781b      	ldrb	r3, [r3, #0]
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	d109      	bne.n	8002e20 <testCase1+0x6c>
		print("Max Temp = %f\n\r", maxTemp);
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	1c18      	adds	r0, r3, #0
 8002e10:	f7ff ff6a 	bl	8002ce8 <__aeabi_f2d>
 8002e14:	0002      	movs	r2, r0
 8002e16:	000b      	movs	r3, r1
 8002e18:	4915      	ldr	r1, [pc, #84]	; (8002e70 <testCase1+0xbc>)
 8002e1a:	0008      	movs	r0, r1
 8002e1c:	f001 f96e 	bl	80040fc <print>
	}
	status = mlx90614_getMin(&minTemp);
 8002e20:	2308      	movs	r3, #8
 8002e22:	18fb      	adds	r3, r7, r3
 8002e24:	0018      	movs	r0, r3
 8002e26:	f002 f953 	bl	80050d0 <mlx90614_getMin>
 8002e2a:	0003      	movs	r3, r0
 8002e2c:	001a      	movs	r2, r3
 8002e2e:	4b0e      	ldr	r3, [pc, #56]	; (8002e68 <testCase1+0xb4>)
 8002e30:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002e32:	4b0d      	ldr	r3, [pc, #52]	; (8002e68 <testCase1+0xb4>)
 8002e34:	781b      	ldrb	r3, [r3, #0]
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d109      	bne.n	8002e4e <testCase1+0x9a>
		print("Min Temp = %f\n\r", minTemp);
 8002e3a:	68bb      	ldr	r3, [r7, #8]
 8002e3c:	1c18      	adds	r0, r3, #0
 8002e3e:	f7ff ff53 	bl	8002ce8 <__aeabi_f2d>
 8002e42:	0002      	movs	r2, r0
 8002e44:	000b      	movs	r3, r1
 8002e46:	490b      	ldr	r1, [pc, #44]	; (8002e74 <testCase1+0xc0>)
 8002e48:	0008      	movs	r0, r1
 8002e4a:	f001 f957 	bl	80040fc <print>
	}
	status = mlx90614_setMax(0);
 8002e4e:	2300      	movs	r3, #0
 8002e50:	1c18      	adds	r0, r3, #0
 8002e52:	f002 f901 	bl	8005058 <mlx90614_setMax>
 8002e56:	0003      	movs	r3, r0
 8002e58:	001a      	movs	r2, r3
 8002e5a:	4b03      	ldr	r3, [pc, #12]	; (8002e68 <testCase1+0xb4>)
 8002e5c:	701a      	strb	r2, [r3, #0]
}
 8002e5e:	46c0      	nop			; (mov r8, r8)
 8002e60:	46bd      	mov	sp, r7
 8002e62:	b004      	add	sp, #16
 8002e64:	bd80      	pop	{r7, pc}
 8002e66:	46c0      	nop			; (mov r8, r8)
 8002e68:	20000238 	.word	0x20000238
 8002e6c:	08008190 	.word	0x08008190
 8002e70:	080081a4 	.word	0x080081a4
 8002e74:	080081b4 	.word	0x080081b4

08002e78 <testCase2>:

void testCase2() {
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	b082      	sub	sp, #8
 8002e7c:	af00      	add	r7, sp, #0

	float temp = 0, ambient = 0;
 8002e7e:	2300      	movs	r3, #0
 8002e80:	607b      	str	r3, [r7, #4]
 8002e82:	2300      	movs	r3, #0
 8002e84:	603b      	str	r3, [r7, #0]

	mlx90614_setUnit(MLX90614_UNIT_C);
 8002e86:	2002      	movs	r0, #2
 8002e88:	f002 f85e 	bl	8004f48 <mlx90614_setUnit>
	status = mlx90614_getObject1(&temp);
 8002e8c:	1d3b      	adds	r3, r7, #4
 8002e8e:	0018      	movs	r0, r3
 8002e90:	f002 f962 	bl	8005158 <mlx90614_getObject1>
 8002e94:	0003      	movs	r3, r0
 8002e96:	001a      	movs	r2, r3
 8002e98:	4b43      	ldr	r3, [pc, #268]	; (8002fa8 <testCase2+0x130>)
 8002e9a:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002e9c:	4b42      	ldr	r3, [pc, #264]	; (8002fa8 <testCase2+0x130>)
 8002e9e:	781b      	ldrb	r3, [r3, #0]
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d109      	bne.n	8002eb8 <testCase2+0x40>
		print("Temp in Celsius: = 	%f		", temp);
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	1c18      	adds	r0, r3, #0
 8002ea8:	f7ff ff1e 	bl	8002ce8 <__aeabi_f2d>
 8002eac:	0002      	movs	r2, r0
 8002eae:	000b      	movs	r3, r1
 8002eb0:	493e      	ldr	r1, [pc, #248]	; (8002fac <testCase2+0x134>)
 8002eb2:	0008      	movs	r0, r1
 8002eb4:	f001 f922 	bl	80040fc <print>
	}
	status = mlx90614_getAmbient(&ambient);
 8002eb8:	003b      	movs	r3, r7
 8002eba:	0018      	movs	r0, r3
 8002ebc:	f002 f92a 	bl	8005114 <mlx90614_getAmbient>
 8002ec0:	0003      	movs	r3, r0
 8002ec2:	001a      	movs	r2, r3
 8002ec4:	4b38      	ldr	r3, [pc, #224]	; (8002fa8 <testCase2+0x130>)
 8002ec6:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002ec8:	4b37      	ldr	r3, [pc, #220]	; (8002fa8 <testCase2+0x130>)
 8002eca:	781b      	ldrb	r3, [r3, #0]
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	d109      	bne.n	8002ee4 <testCase2+0x6c>
		print("Ambient in Celsius: = 	%f\n\r", ambient);
 8002ed0:	683b      	ldr	r3, [r7, #0]
 8002ed2:	1c18      	adds	r0, r3, #0
 8002ed4:	f7ff ff08 	bl	8002ce8 <__aeabi_f2d>
 8002ed8:	0002      	movs	r2, r0
 8002eda:	000b      	movs	r3, r1
 8002edc:	4934      	ldr	r1, [pc, #208]	; (8002fb0 <testCase2+0x138>)
 8002ede:	0008      	movs	r0, r1
 8002ee0:	f001 f90c 	bl	80040fc <print>
	}

	mlx90614_setUnit(MLX90614_UNIT_F);
 8002ee4:	2003      	movs	r0, #3
 8002ee6:	f002 f82f 	bl	8004f48 <mlx90614_setUnit>
	status = mlx90614_getObject1(&temp);
 8002eea:	1d3b      	adds	r3, r7, #4
 8002eec:	0018      	movs	r0, r3
 8002eee:	f002 f933 	bl	8005158 <mlx90614_getObject1>
 8002ef2:	0003      	movs	r3, r0
 8002ef4:	001a      	movs	r2, r3
 8002ef6:	4b2c      	ldr	r3, [pc, #176]	; (8002fa8 <testCase2+0x130>)
 8002ef8:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002efa:	4b2b      	ldr	r3, [pc, #172]	; (8002fa8 <testCase2+0x130>)
 8002efc:	781b      	ldrb	r3, [r3, #0]
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d109      	bne.n	8002f16 <testCase2+0x9e>
		print("Temp in fahrenheit : =	%f		", temp);
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	1c18      	adds	r0, r3, #0
 8002f06:	f7ff feef 	bl	8002ce8 <__aeabi_f2d>
 8002f0a:	0002      	movs	r2, r0
 8002f0c:	000b      	movs	r3, r1
 8002f0e:	4929      	ldr	r1, [pc, #164]	; (8002fb4 <testCase2+0x13c>)
 8002f10:	0008      	movs	r0, r1
 8002f12:	f001 f8f3 	bl	80040fc <print>
	}
	status = mlx90614_getAmbient(&ambient);
 8002f16:	003b      	movs	r3, r7
 8002f18:	0018      	movs	r0, r3
 8002f1a:	f002 f8fb 	bl	8005114 <mlx90614_getAmbient>
 8002f1e:	0003      	movs	r3, r0
 8002f20:	001a      	movs	r2, r3
 8002f22:	4b21      	ldr	r3, [pc, #132]	; (8002fa8 <testCase2+0x130>)
 8002f24:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002f26:	4b20      	ldr	r3, [pc, #128]	; (8002fa8 <testCase2+0x130>)
 8002f28:	781b      	ldrb	r3, [r3, #0]
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d109      	bne.n	8002f42 <testCase2+0xca>
		print("Ambient in fahrenheit : = %f\n\r", ambient);
 8002f2e:	683b      	ldr	r3, [r7, #0]
 8002f30:	1c18      	adds	r0, r3, #0
 8002f32:	f7ff fed9 	bl	8002ce8 <__aeabi_f2d>
 8002f36:	0002      	movs	r2, r0
 8002f38:	000b      	movs	r3, r1
 8002f3a:	491f      	ldr	r1, [pc, #124]	; (8002fb8 <testCase2+0x140>)
 8002f3c:	0008      	movs	r0, r1
 8002f3e:	f001 f8dd 	bl	80040fc <print>
	}

	mlx90614_setUnit(MLX90614_UNIT_K);
 8002f42:	2001      	movs	r0, #1
 8002f44:	f002 f800 	bl	8004f48 <mlx90614_setUnit>
	status = mlx90614_getObject1(&temp);
 8002f48:	1d3b      	adds	r3, r7, #4
 8002f4a:	0018      	movs	r0, r3
 8002f4c:	f002 f904 	bl	8005158 <mlx90614_getObject1>
 8002f50:	0003      	movs	r3, r0
 8002f52:	001a      	movs	r2, r3
 8002f54:	4b14      	ldr	r3, [pc, #80]	; (8002fa8 <testCase2+0x130>)
 8002f56:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002f58:	4b13      	ldr	r3, [pc, #76]	; (8002fa8 <testCase2+0x130>)
 8002f5a:	781b      	ldrb	r3, [r3, #0]
 8002f5c:	2b00      	cmp	r3, #0
 8002f5e:	d109      	bne.n	8002f74 <testCase2+0xfc>
		print("Temp in Kelvin: = 	%f		", temp);
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	1c18      	adds	r0, r3, #0
 8002f64:	f7ff fec0 	bl	8002ce8 <__aeabi_f2d>
 8002f68:	0002      	movs	r2, r0
 8002f6a:	000b      	movs	r3, r1
 8002f6c:	4913      	ldr	r1, [pc, #76]	; (8002fbc <testCase2+0x144>)
 8002f6e:	0008      	movs	r0, r1
 8002f70:	f001 f8c4 	bl	80040fc <print>
	}
	status = mlx90614_getAmbient(&ambient);
 8002f74:	003b      	movs	r3, r7
 8002f76:	0018      	movs	r0, r3
 8002f78:	f002 f8cc 	bl	8005114 <mlx90614_getAmbient>
 8002f7c:	0003      	movs	r3, r0
 8002f7e:	001a      	movs	r2, r3
 8002f80:	4b09      	ldr	r3, [pc, #36]	; (8002fa8 <testCase2+0x130>)
 8002f82:	701a      	strb	r2, [r3, #0]
	if (status == BML_OK) {
 8002f84:	4b08      	ldr	r3, [pc, #32]	; (8002fa8 <testCase2+0x130>)
 8002f86:	781b      	ldrb	r3, [r3, #0]
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	d109      	bne.n	8002fa0 <testCase2+0x128>
		print("Ambient in Kelvin: = 	%f\n\r", ambient);
 8002f8c:	683b      	ldr	r3, [r7, #0]
 8002f8e:	1c18      	adds	r0, r3, #0
 8002f90:	f7ff feaa 	bl	8002ce8 <__aeabi_f2d>
 8002f94:	0002      	movs	r2, r0
 8002f96:	000b      	movs	r3, r1
 8002f98:	4909      	ldr	r1, [pc, #36]	; (8002fc0 <testCase2+0x148>)
 8002f9a:	0008      	movs	r0, r1
 8002f9c:	f001 f8ae 	bl	80040fc <print>
	}
}
 8002fa0:	46c0      	nop			; (mov r8, r8)
 8002fa2:	46bd      	mov	sp, r7
 8002fa4:	b002      	add	sp, #8
 8002fa6:	bd80      	pop	{r7, pc}
 8002fa8:	20000238 	.word	0x20000238
 8002fac:	080081c4 	.word	0x080081c4
 8002fb0:	080081e0 	.word	0x080081e0
 8002fb4:	080081fc 	.word	0x080081fc
 8002fb8:	08008218 	.word	0x08008218
 8002fbc:	08008238 	.word	0x08008238
 8002fc0:	08008250 	.word	0x08008250

08002fc4 <main>:

int main(void) {
 8002fc4:	b580      	push	{r7, lr}
 8002fc6:	b082      	sub	sp, #8
 8002fc8:	af02      	add	r7, sp, #8

	RCC_CONFIG_48MHZ();
 8002fca:	f001 fb48 	bl	800465e <RCC_CONFIG_48MHZ>
	USART_INIT(USART4, PORTC, PORTC, 10, 11, 9600);
 8002fce:	4a25      	ldr	r2, [pc, #148]	; (8003064 <main+0xa0>)
 8002fd0:	4924      	ldr	r1, [pc, #144]	; (8003064 <main+0xa0>)
 8002fd2:	4825      	ldr	r0, [pc, #148]	; (8003068 <main+0xa4>)
 8002fd4:	2396      	movs	r3, #150	; 0x96
 8002fd6:	019b      	lsls	r3, r3, #6
 8002fd8:	9301      	str	r3, [sp, #4]
 8002fda:	230b      	movs	r3, #11
 8002fdc:	9300      	str	r3, [sp, #0]
 8002fde:	230a      	movs	r3, #10
 8002fe0:	f001 f976 	bl	80042d0 <USART_INIT>
	USART_WRITE(USART4, "Working\n", 9);
 8002fe4:	4b21      	ldr	r3, [pc, #132]	; (800306c <main+0xa8>)
 8002fe6:	4820      	ldr	r0, [pc, #128]	; (8003068 <main+0xa4>)
 8002fe8:	2209      	movs	r2, #9
 8002fea:	0019      	movs	r1, r3
 8002fec:	f001 fb04 	bl	80045f8 <USART_WRITE>

	gpio_config(SCL_PORT, SCL_PIN, ALT_MODE, HIGH_SPEED, EN_PU, OD);
 8002ff0:	481f      	ldr	r0, [pc, #124]	; (8003070 <main+0xac>)
 8002ff2:	2301      	movs	r3, #1
 8002ff4:	9301      	str	r3, [sp, #4]
 8002ff6:	2301      	movs	r3, #1
 8002ff8:	9300      	str	r3, [sp, #0]
 8002ffa:	2302      	movs	r3, #2
 8002ffc:	2202      	movs	r2, #2
 8002ffe:	2108      	movs	r1, #8
 8003000:	f000 ff90 	bl	8003f24 <gpio_config>
	gpio_config(SDA_PORT, SDA_PIN, ALT_MODE, HIGH_SPEED, EN_PU, OD);
 8003004:	481a      	ldr	r0, [pc, #104]	; (8003070 <main+0xac>)
 8003006:	2301      	movs	r3, #1
 8003008:	9301      	str	r3, [sp, #4]
 800300a:	2301      	movs	r3, #1
 800300c:	9300      	str	r3, [sp, #0]
 800300e:	2302      	movs	r3, #2
 8003010:	2202      	movs	r2, #2
 8003012:	2109      	movs	r1, #9
 8003014:	f000 ff86 	bl	8003f24 <gpio_config>

	gpio_altfn(SCL_PORT, SCL_PIN, I2C1_SCL_PB8);
 8003018:	4b15      	ldr	r3, [pc, #84]	; (8003070 <main+0xac>)
 800301a:	2201      	movs	r2, #1
 800301c:	2108      	movs	r1, #8
 800301e:	0018      	movs	r0, r3
 8003020:	f001 f849 	bl	80040b6 <gpio_altfn>
	gpio_altfn(SDA_PORT, SDA_PIN, I2C1_SDA_PB9);
 8003024:	4b12      	ldr	r3, [pc, #72]	; (8003070 <main+0xac>)
 8003026:	2201      	movs	r2, #1
 8003028:	2109      	movs	r1, #9
 800302a:	0018      	movs	r0, r3
 800302c:	f001 f843 	bl	80040b6 <gpio_altfn>

	status = mlx90614_init();
 8003030:	f001 ff3e 	bl	8004eb0 <mlx90614_init>
 8003034:	0003      	movs	r3, r0
 8003036:	001a      	movs	r2, r3
 8003038:	4b0e      	ldr	r3, [pc, #56]	; (8003074 <main+0xb0>)
 800303a:	701a      	strb	r2, [r3, #0]
	if (status != BML_OK) {
 800303c:	4b0d      	ldr	r3, [pc, #52]	; (8003074 <main+0xb0>)
 800303e:	781b      	ldrb	r3, [r3, #0]
 8003040:	2b00      	cmp	r3, #0
 8003042:	d004      	beq.n	800304e <main+0x8a>
		print("Error in Init\n\r");
 8003044:	4b0c      	ldr	r3, [pc, #48]	; (8003078 <main+0xb4>)
 8003046:	0018      	movs	r0, r3
 8003048:	f001 f858 	bl	80040fc <print>
		while (1)
 800304c:	e7fe      	b.n	800304c <main+0x88>
			;
	}

	testCase1();
 800304e:	f7ff feb1 	bl	8002db4 <testCase1>

	while (1) {
		testCase2();
 8003052:	f7ff ff11 	bl	8002e78 <testCase2>
		HAL_Delay(500);
 8003056:	23fa      	movs	r3, #250	; 0xfa
 8003058:	005b      	lsls	r3, r3, #1
 800305a:	0018      	movs	r0, r3
 800305c:	f000 f962 	bl	8003324 <HAL_Delay>
		testCase2();
 8003060:	e7f7      	b.n	8003052 <main+0x8e>
 8003062:	46c0      	nop			; (mov r8, r8)
 8003064:	48000800 	.word	0x48000800
 8003068:	40004c00 	.word	0x40004c00
 800306c:	0800826c 	.word	0x0800826c
 8003070:	48000400 	.word	0x48000400
 8003074:	20000238 	.word	0x20000238
 8003078:	08008278 	.word	0x08008278

0800307c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800307c:	b580      	push	{r7, lr}
 800307e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003080:	e7fe      	b.n	8003080 <NMI_Handler+0x4>

08003082 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003082:	b580      	push	{r7, lr}
 8003084:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003086:	e7fe      	b.n	8003086 <HardFault_Handler+0x4>

08003088 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003088:	b580      	push	{r7, lr}
 800308a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800308c:	46c0      	nop			; (mov r8, r8)
 800308e:	46bd      	mov	sp, r7
 8003090:	bd80      	pop	{r7, pc}

08003092 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003092:	b580      	push	{r7, lr}
 8003094:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003096:	46c0      	nop			; (mov r8, r8)
 8003098:	46bd      	mov	sp, r7
 800309a:	bd80      	pop	{r7, pc}

0800309c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800309c:	b580      	push	{r7, lr}
 800309e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80030a0:	f000 f924 	bl	80032ec <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80030a4:	46c0      	nop			; (mov r8, r8)
 80030a6:	46bd      	mov	sp, r7
 80030a8:	bd80      	pop	{r7, pc}

080030aa <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80030aa:	b580      	push	{r7, lr}
 80030ac:	af00      	add	r7, sp, #0
	return 1;
 80030ae:	2301      	movs	r3, #1
}
 80030b0:	0018      	movs	r0, r3
 80030b2:	46bd      	mov	sp, r7
 80030b4:	bd80      	pop	{r7, pc}

080030b6 <_kill>:

int _kill(int pid, int sig)
{
 80030b6:	b580      	push	{r7, lr}
 80030b8:	b082      	sub	sp, #8
 80030ba:	af00      	add	r7, sp, #0
 80030bc:	6078      	str	r0, [r7, #4]
 80030be:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80030c0:	f002 f874 	bl	80051ac <__errno>
 80030c4:	0003      	movs	r3, r0
 80030c6:	2216      	movs	r2, #22
 80030c8:	601a      	str	r2, [r3, #0]
	return -1;
 80030ca:	2301      	movs	r3, #1
 80030cc:	425b      	negs	r3, r3
}
 80030ce:	0018      	movs	r0, r3
 80030d0:	46bd      	mov	sp, r7
 80030d2:	b002      	add	sp, #8
 80030d4:	bd80      	pop	{r7, pc}

080030d6 <_exit>:

void _exit (int status)
{
 80030d6:	b580      	push	{r7, lr}
 80030d8:	b082      	sub	sp, #8
 80030da:	af00      	add	r7, sp, #0
 80030dc:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80030de:	2301      	movs	r3, #1
 80030e0:	425a      	negs	r2, r3
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	0011      	movs	r1, r2
 80030e6:	0018      	movs	r0, r3
 80030e8:	f7ff ffe5 	bl	80030b6 <_kill>
	while (1) {}		/* Make sure we hang here */
 80030ec:	e7fe      	b.n	80030ec <_exit+0x16>

080030ee <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80030ee:	b580      	push	{r7, lr}
 80030f0:	b086      	sub	sp, #24
 80030f2:	af00      	add	r7, sp, #0
 80030f4:	60f8      	str	r0, [r7, #12]
 80030f6:	60b9      	str	r1, [r7, #8]
 80030f8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80030fa:	2300      	movs	r3, #0
 80030fc:	617b      	str	r3, [r7, #20]
 80030fe:	e00a      	b.n	8003116 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8003100:	e000      	b.n	8003104 <_read+0x16>
 8003102:	bf00      	nop
 8003104:	0001      	movs	r1, r0
 8003106:	68bb      	ldr	r3, [r7, #8]
 8003108:	1c5a      	adds	r2, r3, #1
 800310a:	60ba      	str	r2, [r7, #8]
 800310c:	b2ca      	uxtb	r2, r1
 800310e:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003110:	697b      	ldr	r3, [r7, #20]
 8003112:	3301      	adds	r3, #1
 8003114:	617b      	str	r3, [r7, #20]
 8003116:	697a      	ldr	r2, [r7, #20]
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	429a      	cmp	r2, r3
 800311c:	dbf0      	blt.n	8003100 <_read+0x12>
	}

return len;
 800311e:	687b      	ldr	r3, [r7, #4]
}
 8003120:	0018      	movs	r0, r3
 8003122:	46bd      	mov	sp, r7
 8003124:	b006      	add	sp, #24
 8003126:	bd80      	pop	{r7, pc}

08003128 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003128:	b580      	push	{r7, lr}
 800312a:	b086      	sub	sp, #24
 800312c:	af00      	add	r7, sp, #0
 800312e:	60f8      	str	r0, [r7, #12]
 8003130:	60b9      	str	r1, [r7, #8]
 8003132:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003134:	2300      	movs	r3, #0
 8003136:	617b      	str	r3, [r7, #20]
 8003138:	e009      	b.n	800314e <_write+0x26>
	{
		__io_putchar(*ptr++);
 800313a:	68bb      	ldr	r3, [r7, #8]
 800313c:	1c5a      	adds	r2, r3, #1
 800313e:	60ba      	str	r2, [r7, #8]
 8003140:	781b      	ldrb	r3, [r3, #0]
 8003142:	0018      	movs	r0, r3
 8003144:	e000      	b.n	8003148 <_write+0x20>
 8003146:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003148:	697b      	ldr	r3, [r7, #20]
 800314a:	3301      	adds	r3, #1
 800314c:	617b      	str	r3, [r7, #20]
 800314e:	697a      	ldr	r2, [r7, #20]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	429a      	cmp	r2, r3
 8003154:	dbf1      	blt.n	800313a <_write+0x12>
	}
	return len;
 8003156:	687b      	ldr	r3, [r7, #4]
}
 8003158:	0018      	movs	r0, r3
 800315a:	46bd      	mov	sp, r7
 800315c:	b006      	add	sp, #24
 800315e:	bd80      	pop	{r7, pc}

08003160 <_close>:

int _close(int file)
{
 8003160:	b580      	push	{r7, lr}
 8003162:	b082      	sub	sp, #8
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
	return -1;
 8003168:	2301      	movs	r3, #1
 800316a:	425b      	negs	r3, r3
}
 800316c:	0018      	movs	r0, r3
 800316e:	46bd      	mov	sp, r7
 8003170:	b002      	add	sp, #8
 8003172:	bd80      	pop	{r7, pc}

08003174 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8003174:	b580      	push	{r7, lr}
 8003176:	b082      	sub	sp, #8
 8003178:	af00      	add	r7, sp, #0
 800317a:	6078      	str	r0, [r7, #4]
 800317c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800317e:	683b      	ldr	r3, [r7, #0]
 8003180:	2280      	movs	r2, #128	; 0x80
 8003182:	0192      	lsls	r2, r2, #6
 8003184:	605a      	str	r2, [r3, #4]
	return 0;
 8003186:	2300      	movs	r3, #0
}
 8003188:	0018      	movs	r0, r3
 800318a:	46bd      	mov	sp, r7
 800318c:	b002      	add	sp, #8
 800318e:	bd80      	pop	{r7, pc}

08003190 <_isatty>:

int _isatty(int file)
{
 8003190:	b580      	push	{r7, lr}
 8003192:	b082      	sub	sp, #8
 8003194:	af00      	add	r7, sp, #0
 8003196:	6078      	str	r0, [r7, #4]
	return 1;
 8003198:	2301      	movs	r3, #1
}
 800319a:	0018      	movs	r0, r3
 800319c:	46bd      	mov	sp, r7
 800319e:	b002      	add	sp, #8
 80031a0:	bd80      	pop	{r7, pc}

080031a2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80031a2:	b580      	push	{r7, lr}
 80031a4:	b084      	sub	sp, #16
 80031a6:	af00      	add	r7, sp, #0
 80031a8:	60f8      	str	r0, [r7, #12]
 80031aa:	60b9      	str	r1, [r7, #8]
 80031ac:	607a      	str	r2, [r7, #4]
	return 0;
 80031ae:	2300      	movs	r3, #0
}
 80031b0:	0018      	movs	r0, r3
 80031b2:	46bd      	mov	sp, r7
 80031b4:	b004      	add	sp, #16
 80031b6:	bd80      	pop	{r7, pc}

080031b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80031b8:	b580      	push	{r7, lr}
 80031ba:	b086      	sub	sp, #24
 80031bc:	af00      	add	r7, sp, #0
 80031be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80031c0:	4a14      	ldr	r2, [pc, #80]	; (8003214 <_sbrk+0x5c>)
 80031c2:	4b15      	ldr	r3, [pc, #84]	; (8003218 <_sbrk+0x60>)
 80031c4:	1ad3      	subs	r3, r2, r3
 80031c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80031c8:	697b      	ldr	r3, [r7, #20]
 80031ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80031cc:	4b13      	ldr	r3, [pc, #76]	; (800321c <_sbrk+0x64>)
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	d102      	bne.n	80031da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80031d4:	4b11      	ldr	r3, [pc, #68]	; (800321c <_sbrk+0x64>)
 80031d6:	4a12      	ldr	r2, [pc, #72]	; (8003220 <_sbrk+0x68>)
 80031d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80031da:	4b10      	ldr	r3, [pc, #64]	; (800321c <_sbrk+0x64>)
 80031dc:	681a      	ldr	r2, [r3, #0]
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	18d3      	adds	r3, r2, r3
 80031e2:	693a      	ldr	r2, [r7, #16]
 80031e4:	429a      	cmp	r2, r3
 80031e6:	d207      	bcs.n	80031f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80031e8:	f001 ffe0 	bl	80051ac <__errno>
 80031ec:	0003      	movs	r3, r0
 80031ee:	220c      	movs	r2, #12
 80031f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80031f2:	2301      	movs	r3, #1
 80031f4:	425b      	negs	r3, r3
 80031f6:	e009      	b.n	800320c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80031f8:	4b08      	ldr	r3, [pc, #32]	; (800321c <_sbrk+0x64>)
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80031fe:	4b07      	ldr	r3, [pc, #28]	; (800321c <_sbrk+0x64>)
 8003200:	681a      	ldr	r2, [r3, #0]
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	18d2      	adds	r2, r2, r3
 8003206:	4b05      	ldr	r3, [pc, #20]	; (800321c <_sbrk+0x64>)
 8003208:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800320a:	68fb      	ldr	r3, [r7, #12]
}
 800320c:	0018      	movs	r0, r3
 800320e:	46bd      	mov	sp, r7
 8003210:	b006      	add	sp, #24
 8003212:	bd80      	pop	{r7, pc}
 8003214:	20004000 	.word	0x20004000
 8003218:	00000400 	.word	0x00000400
 800321c:	2000023c 	.word	0x2000023c
 8003220:	20000390 	.word	0x20000390

08003224 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8003224:	b580      	push	{r7, lr}
 8003226:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8003228:	46c0      	nop			; (mov r8, r8)
 800322a:	46bd      	mov	sp, r7
 800322c:	bd80      	pop	{r7, pc}
	...

08003230 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003230:	480d      	ldr	r0, [pc, #52]	; (8003268 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003232:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003234:	480d      	ldr	r0, [pc, #52]	; (800326c <LoopForever+0x6>)
  ldr r1, =_edata
 8003236:	490e      	ldr	r1, [pc, #56]	; (8003270 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003238:	4a0e      	ldr	r2, [pc, #56]	; (8003274 <LoopForever+0xe>)
  movs r3, #0
 800323a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800323c:	e002      	b.n	8003244 <LoopCopyDataInit>

0800323e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800323e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003240:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003242:	3304      	adds	r3, #4

08003244 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003244:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003246:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003248:	d3f9      	bcc.n	800323e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800324a:	4a0b      	ldr	r2, [pc, #44]	; (8003278 <LoopForever+0x12>)
  ldr r4, =_ebss
 800324c:	4c0b      	ldr	r4, [pc, #44]	; (800327c <LoopForever+0x16>)
  movs r3, #0
 800324e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003250:	e001      	b.n	8003256 <LoopFillZerobss>

08003252 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003252:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003254:	3204      	adds	r2, #4

08003256 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003256:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003258:	d3fb      	bcc.n	8003252 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800325a:	f7ff ffe3 	bl	8003224 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 800325e:	f001 ffab 	bl	80051b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8003262:	f7ff feaf 	bl	8002fc4 <main>

08003266 <LoopForever>:

LoopForever:
    b LoopForever
 8003266:	e7fe      	b.n	8003266 <LoopForever>
  ldr   r0, =_estack
 8003268:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 800326c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003270:	2000021c 	.word	0x2000021c
  ldr r2, =_sidata
 8003274:	08008814 	.word	0x08008814
  ldr r2, =_sbss
 8003278:	2000021c 	.word	0x2000021c
  ldr r4, =_ebss
 800327c:	2000038c 	.word	0x2000038c

08003280 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003280:	e7fe      	b.n	8003280 <ADC1_COMP_IRQHandler>
	...

08003284 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003284:	b590      	push	{r4, r7, lr}
 8003286:	b083      	sub	sp, #12
 8003288:	af00      	add	r7, sp, #0
 800328a:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800328c:	4b14      	ldr	r3, [pc, #80]	; (80032e0 <HAL_InitTick+0x5c>)
 800328e:	681c      	ldr	r4, [r3, #0]
 8003290:	4b14      	ldr	r3, [pc, #80]	; (80032e4 <HAL_InitTick+0x60>)
 8003292:	781b      	ldrb	r3, [r3, #0]
 8003294:	0019      	movs	r1, r3
 8003296:	23fa      	movs	r3, #250	; 0xfa
 8003298:	0098      	lsls	r0, r3, #2
 800329a:	f7fc ff51 	bl	8000140 <__udivsi3>
 800329e:	0003      	movs	r3, r0
 80032a0:	0019      	movs	r1, r3
 80032a2:	0020      	movs	r0, r4
 80032a4:	f7fc ff4c 	bl	8000140 <__udivsi3>
 80032a8:	0003      	movs	r3, r0
 80032aa:	0018      	movs	r0, r3
 80032ac:	f000 f905 	bl	80034ba <HAL_SYSTICK_Config>
 80032b0:	1e03      	subs	r3, r0, #0
 80032b2:	d001      	beq.n	80032b8 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 80032b4:	2301      	movs	r3, #1
 80032b6:	e00f      	b.n	80032d8 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	2b03      	cmp	r3, #3
 80032bc:	d80b      	bhi.n	80032d6 <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80032be:	6879      	ldr	r1, [r7, #4]
 80032c0:	2301      	movs	r3, #1
 80032c2:	425b      	negs	r3, r3
 80032c4:	2200      	movs	r2, #0
 80032c6:	0018      	movs	r0, r3
 80032c8:	f000 f8e2 	bl	8003490 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80032cc:	4b06      	ldr	r3, [pc, #24]	; (80032e8 <HAL_InitTick+0x64>)
 80032ce:	687a      	ldr	r2, [r7, #4]
 80032d0:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 80032d2:	2300      	movs	r3, #0
 80032d4:	e000      	b.n	80032d8 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80032d6:	2301      	movs	r3, #1
}
 80032d8:	0018      	movs	r0, r3
 80032da:	46bd      	mov	sp, r7
 80032dc:	b003      	add	sp, #12
 80032de:	bd90      	pop	{r4, r7, pc}
 80032e0:	20000000 	.word	0x20000000
 80032e4:	20000008 	.word	0x20000008
 80032e8:	20000004 	.word	0x20000004

080032ec <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80032ec:	b580      	push	{r7, lr}
 80032ee:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80032f0:	4b05      	ldr	r3, [pc, #20]	; (8003308 <HAL_IncTick+0x1c>)
 80032f2:	781b      	ldrb	r3, [r3, #0]
 80032f4:	001a      	movs	r2, r3
 80032f6:	4b05      	ldr	r3, [pc, #20]	; (800330c <HAL_IncTick+0x20>)
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	18d2      	adds	r2, r2, r3
 80032fc:	4b03      	ldr	r3, [pc, #12]	; (800330c <HAL_IncTick+0x20>)
 80032fe:	601a      	str	r2, [r3, #0]
}
 8003300:	46c0      	nop			; (mov r8, r8)
 8003302:	46bd      	mov	sp, r7
 8003304:	bd80      	pop	{r7, pc}
 8003306:	46c0      	nop			; (mov r8, r8)
 8003308:	20000008 	.word	0x20000008
 800330c:	20000240 	.word	0x20000240

08003310 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003310:	b580      	push	{r7, lr}
 8003312:	af00      	add	r7, sp, #0
  return uwTick;
 8003314:	4b02      	ldr	r3, [pc, #8]	; (8003320 <HAL_GetTick+0x10>)
 8003316:	681b      	ldr	r3, [r3, #0]
}
 8003318:	0018      	movs	r0, r3
 800331a:	46bd      	mov	sp, r7
 800331c:	bd80      	pop	{r7, pc}
 800331e:	46c0      	nop			; (mov r8, r8)
 8003320:	20000240 	.word	0x20000240

08003324 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003324:	b580      	push	{r7, lr}
 8003326:	b084      	sub	sp, #16
 8003328:	af00      	add	r7, sp, #0
 800332a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 800332c:	f7ff fff0 	bl	8003310 <HAL_GetTick>
 8003330:	0003      	movs	r3, r0
 8003332:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	60fb      	str	r3, [r7, #12]
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	3301      	adds	r3, #1
 800333c:	d005      	beq.n	800334a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800333e:	4b0a      	ldr	r3, [pc, #40]	; (8003368 <HAL_Delay+0x44>)
 8003340:	781b      	ldrb	r3, [r3, #0]
 8003342:	001a      	movs	r2, r3
 8003344:	68fb      	ldr	r3, [r7, #12]
 8003346:	189b      	adds	r3, r3, r2
 8003348:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 800334a:	46c0      	nop			; (mov r8, r8)
 800334c:	f7ff ffe0 	bl	8003310 <HAL_GetTick>
 8003350:	0002      	movs	r2, r0
 8003352:	68bb      	ldr	r3, [r7, #8]
 8003354:	1ad3      	subs	r3, r2, r3
 8003356:	68fa      	ldr	r2, [r7, #12]
 8003358:	429a      	cmp	r2, r3
 800335a:	d8f7      	bhi.n	800334c <HAL_Delay+0x28>
  {
  }
}
 800335c:	46c0      	nop			; (mov r8, r8)
 800335e:	46c0      	nop			; (mov r8, r8)
 8003360:	46bd      	mov	sp, r7
 8003362:	b004      	add	sp, #16
 8003364:	bd80      	pop	{r7, pc}
 8003366:	46c0      	nop			; (mov r8, r8)
 8003368:	20000008 	.word	0x20000008

0800336c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800336c:	b590      	push	{r4, r7, lr}
 800336e:	b083      	sub	sp, #12
 8003370:	af00      	add	r7, sp, #0
 8003372:	0002      	movs	r2, r0
 8003374:	6039      	str	r1, [r7, #0]
 8003376:	1dfb      	adds	r3, r7, #7
 8003378:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800337a:	1dfb      	adds	r3, r7, #7
 800337c:	781b      	ldrb	r3, [r3, #0]
 800337e:	2b7f      	cmp	r3, #127	; 0x7f
 8003380:	d828      	bhi.n	80033d4 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003382:	4a2f      	ldr	r2, [pc, #188]	; (8003440 <__NVIC_SetPriority+0xd4>)
 8003384:	1dfb      	adds	r3, r7, #7
 8003386:	781b      	ldrb	r3, [r3, #0]
 8003388:	b25b      	sxtb	r3, r3
 800338a:	089b      	lsrs	r3, r3, #2
 800338c:	33c0      	adds	r3, #192	; 0xc0
 800338e:	009b      	lsls	r3, r3, #2
 8003390:	589b      	ldr	r3, [r3, r2]
 8003392:	1dfa      	adds	r2, r7, #7
 8003394:	7812      	ldrb	r2, [r2, #0]
 8003396:	0011      	movs	r1, r2
 8003398:	2203      	movs	r2, #3
 800339a:	400a      	ands	r2, r1
 800339c:	00d2      	lsls	r2, r2, #3
 800339e:	21ff      	movs	r1, #255	; 0xff
 80033a0:	4091      	lsls	r1, r2
 80033a2:	000a      	movs	r2, r1
 80033a4:	43d2      	mvns	r2, r2
 80033a6:	401a      	ands	r2, r3
 80033a8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80033aa:	683b      	ldr	r3, [r7, #0]
 80033ac:	019b      	lsls	r3, r3, #6
 80033ae:	22ff      	movs	r2, #255	; 0xff
 80033b0:	401a      	ands	r2, r3
 80033b2:	1dfb      	adds	r3, r7, #7
 80033b4:	781b      	ldrb	r3, [r3, #0]
 80033b6:	0018      	movs	r0, r3
 80033b8:	2303      	movs	r3, #3
 80033ba:	4003      	ands	r3, r0
 80033bc:	00db      	lsls	r3, r3, #3
 80033be:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80033c0:	481f      	ldr	r0, [pc, #124]	; (8003440 <__NVIC_SetPriority+0xd4>)
 80033c2:	1dfb      	adds	r3, r7, #7
 80033c4:	781b      	ldrb	r3, [r3, #0]
 80033c6:	b25b      	sxtb	r3, r3
 80033c8:	089b      	lsrs	r3, r3, #2
 80033ca:	430a      	orrs	r2, r1
 80033cc:	33c0      	adds	r3, #192	; 0xc0
 80033ce:	009b      	lsls	r3, r3, #2
 80033d0:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80033d2:	e031      	b.n	8003438 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80033d4:	4a1b      	ldr	r2, [pc, #108]	; (8003444 <__NVIC_SetPriority+0xd8>)
 80033d6:	1dfb      	adds	r3, r7, #7
 80033d8:	781b      	ldrb	r3, [r3, #0]
 80033da:	0019      	movs	r1, r3
 80033dc:	230f      	movs	r3, #15
 80033de:	400b      	ands	r3, r1
 80033e0:	3b08      	subs	r3, #8
 80033e2:	089b      	lsrs	r3, r3, #2
 80033e4:	3306      	adds	r3, #6
 80033e6:	009b      	lsls	r3, r3, #2
 80033e8:	18d3      	adds	r3, r2, r3
 80033ea:	3304      	adds	r3, #4
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	1dfa      	adds	r2, r7, #7
 80033f0:	7812      	ldrb	r2, [r2, #0]
 80033f2:	0011      	movs	r1, r2
 80033f4:	2203      	movs	r2, #3
 80033f6:	400a      	ands	r2, r1
 80033f8:	00d2      	lsls	r2, r2, #3
 80033fa:	21ff      	movs	r1, #255	; 0xff
 80033fc:	4091      	lsls	r1, r2
 80033fe:	000a      	movs	r2, r1
 8003400:	43d2      	mvns	r2, r2
 8003402:	401a      	ands	r2, r3
 8003404:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003406:	683b      	ldr	r3, [r7, #0]
 8003408:	019b      	lsls	r3, r3, #6
 800340a:	22ff      	movs	r2, #255	; 0xff
 800340c:	401a      	ands	r2, r3
 800340e:	1dfb      	adds	r3, r7, #7
 8003410:	781b      	ldrb	r3, [r3, #0]
 8003412:	0018      	movs	r0, r3
 8003414:	2303      	movs	r3, #3
 8003416:	4003      	ands	r3, r0
 8003418:	00db      	lsls	r3, r3, #3
 800341a:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800341c:	4809      	ldr	r0, [pc, #36]	; (8003444 <__NVIC_SetPriority+0xd8>)
 800341e:	1dfb      	adds	r3, r7, #7
 8003420:	781b      	ldrb	r3, [r3, #0]
 8003422:	001c      	movs	r4, r3
 8003424:	230f      	movs	r3, #15
 8003426:	4023      	ands	r3, r4
 8003428:	3b08      	subs	r3, #8
 800342a:	089b      	lsrs	r3, r3, #2
 800342c:	430a      	orrs	r2, r1
 800342e:	3306      	adds	r3, #6
 8003430:	009b      	lsls	r3, r3, #2
 8003432:	18c3      	adds	r3, r0, r3
 8003434:	3304      	adds	r3, #4
 8003436:	601a      	str	r2, [r3, #0]
}
 8003438:	46c0      	nop			; (mov r8, r8)
 800343a:	46bd      	mov	sp, r7
 800343c:	b003      	add	sp, #12
 800343e:	bd90      	pop	{r4, r7, pc}
 8003440:	e000e100 	.word	0xe000e100
 8003444:	e000ed00 	.word	0xe000ed00

08003448 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003448:	b580      	push	{r7, lr}
 800344a:	b082      	sub	sp, #8
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	1e5a      	subs	r2, r3, #1
 8003454:	2380      	movs	r3, #128	; 0x80
 8003456:	045b      	lsls	r3, r3, #17
 8003458:	429a      	cmp	r2, r3
 800345a:	d301      	bcc.n	8003460 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 800345c:	2301      	movs	r3, #1
 800345e:	e010      	b.n	8003482 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003460:	4b0a      	ldr	r3, [pc, #40]	; (800348c <SysTick_Config+0x44>)
 8003462:	687a      	ldr	r2, [r7, #4]
 8003464:	3a01      	subs	r2, #1
 8003466:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003468:	2301      	movs	r3, #1
 800346a:	425b      	negs	r3, r3
 800346c:	2103      	movs	r1, #3
 800346e:	0018      	movs	r0, r3
 8003470:	f7ff ff7c 	bl	800336c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003474:	4b05      	ldr	r3, [pc, #20]	; (800348c <SysTick_Config+0x44>)
 8003476:	2200      	movs	r2, #0
 8003478:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800347a:	4b04      	ldr	r3, [pc, #16]	; (800348c <SysTick_Config+0x44>)
 800347c:	2207      	movs	r2, #7
 800347e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003480:	2300      	movs	r3, #0
}
 8003482:	0018      	movs	r0, r3
 8003484:	46bd      	mov	sp, r7
 8003486:	b002      	add	sp, #8
 8003488:	bd80      	pop	{r7, pc}
 800348a:	46c0      	nop			; (mov r8, r8)
 800348c:	e000e010 	.word	0xe000e010

08003490 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003490:	b580      	push	{r7, lr}
 8003492:	b084      	sub	sp, #16
 8003494:	af00      	add	r7, sp, #0
 8003496:	60b9      	str	r1, [r7, #8]
 8003498:	607a      	str	r2, [r7, #4]
 800349a:	210f      	movs	r1, #15
 800349c:	187b      	adds	r3, r7, r1
 800349e:	1c02      	adds	r2, r0, #0
 80034a0:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 80034a2:	68ba      	ldr	r2, [r7, #8]
 80034a4:	187b      	adds	r3, r7, r1
 80034a6:	781b      	ldrb	r3, [r3, #0]
 80034a8:	b25b      	sxtb	r3, r3
 80034aa:	0011      	movs	r1, r2
 80034ac:	0018      	movs	r0, r3
 80034ae:	f7ff ff5d 	bl	800336c <__NVIC_SetPriority>
}
 80034b2:	46c0      	nop			; (mov r8, r8)
 80034b4:	46bd      	mov	sp, r7
 80034b6:	b004      	add	sp, #16
 80034b8:	bd80      	pop	{r7, pc}

080034ba <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80034ba:	b580      	push	{r7, lr}
 80034bc:	b082      	sub	sp, #8
 80034be:	af00      	add	r7, sp, #0
 80034c0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	0018      	movs	r0, r3
 80034c6:	f7ff ffbf 	bl	8003448 <SysTick_Config>
 80034ca:	0003      	movs	r3, r0
}
 80034cc:	0018      	movs	r0, r3
 80034ce:	46bd      	mov	sp, r7
 80034d0:	b002      	add	sp, #8
 80034d2:	bd80      	pop	{r7, pc}

080034d4 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80034d4:	b580      	push	{r7, lr}
 80034d6:	b088      	sub	sp, #32
 80034d8:	af00      	add	r7, sp, #0
 80034da:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d102      	bne.n	80034e8 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 80034e2:	2301      	movs	r3, #1
 80034e4:	f000 fb76 	bl	8003bd4 <HAL_RCC_OscConfig+0x700>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	2201      	movs	r2, #1
 80034ee:	4013      	ands	r3, r2
 80034f0:	d100      	bne.n	80034f4 <HAL_RCC_OscConfig+0x20>
 80034f2:	e08e      	b.n	8003612 <HAL_RCC_OscConfig+0x13e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 80034f4:	4bc5      	ldr	r3, [pc, #788]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80034f6:	685b      	ldr	r3, [r3, #4]
 80034f8:	220c      	movs	r2, #12
 80034fa:	4013      	ands	r3, r2
 80034fc:	2b04      	cmp	r3, #4
 80034fe:	d00e      	beq.n	800351e <HAL_RCC_OscConfig+0x4a>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8003500:	4bc2      	ldr	r3, [pc, #776]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003502:	685b      	ldr	r3, [r3, #4]
 8003504:	220c      	movs	r2, #12
 8003506:	4013      	ands	r3, r2
 8003508:	2b08      	cmp	r3, #8
 800350a:	d117      	bne.n	800353c <HAL_RCC_OscConfig+0x68>
 800350c:	4bbf      	ldr	r3, [pc, #764]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800350e:	685a      	ldr	r2, [r3, #4]
 8003510:	23c0      	movs	r3, #192	; 0xc0
 8003512:	025b      	lsls	r3, r3, #9
 8003514:	401a      	ands	r2, r3
 8003516:	2380      	movs	r3, #128	; 0x80
 8003518:	025b      	lsls	r3, r3, #9
 800351a:	429a      	cmp	r2, r3
 800351c:	d10e      	bne.n	800353c <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800351e:	4bbb      	ldr	r3, [pc, #748]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003520:	681a      	ldr	r2, [r3, #0]
 8003522:	2380      	movs	r3, #128	; 0x80
 8003524:	029b      	lsls	r3, r3, #10
 8003526:	4013      	ands	r3, r2
 8003528:	d100      	bne.n	800352c <HAL_RCC_OscConfig+0x58>
 800352a:	e071      	b.n	8003610 <HAL_RCC_OscConfig+0x13c>
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	685b      	ldr	r3, [r3, #4]
 8003530:	2b00      	cmp	r3, #0
 8003532:	d000      	beq.n	8003536 <HAL_RCC_OscConfig+0x62>
 8003534:	e06c      	b.n	8003610 <HAL_RCC_OscConfig+0x13c>
      {
        return HAL_ERROR;
 8003536:	2301      	movs	r3, #1
 8003538:	f000 fb4c 	bl	8003bd4 <HAL_RCC_OscConfig+0x700>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	685b      	ldr	r3, [r3, #4]
 8003540:	2b01      	cmp	r3, #1
 8003542:	d107      	bne.n	8003554 <HAL_RCC_OscConfig+0x80>
 8003544:	4bb1      	ldr	r3, [pc, #708]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003546:	681a      	ldr	r2, [r3, #0]
 8003548:	4bb0      	ldr	r3, [pc, #704]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800354a:	2180      	movs	r1, #128	; 0x80
 800354c:	0249      	lsls	r1, r1, #9
 800354e:	430a      	orrs	r2, r1
 8003550:	601a      	str	r2, [r3, #0]
 8003552:	e02f      	b.n	80035b4 <HAL_RCC_OscConfig+0xe0>
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	685b      	ldr	r3, [r3, #4]
 8003558:	2b00      	cmp	r3, #0
 800355a:	d10c      	bne.n	8003576 <HAL_RCC_OscConfig+0xa2>
 800355c:	4bab      	ldr	r3, [pc, #684]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800355e:	681a      	ldr	r2, [r3, #0]
 8003560:	4baa      	ldr	r3, [pc, #680]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003562:	49ab      	ldr	r1, [pc, #684]	; (8003810 <HAL_RCC_OscConfig+0x33c>)
 8003564:	400a      	ands	r2, r1
 8003566:	601a      	str	r2, [r3, #0]
 8003568:	4ba8      	ldr	r3, [pc, #672]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800356a:	681a      	ldr	r2, [r3, #0]
 800356c:	4ba7      	ldr	r3, [pc, #668]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800356e:	49a9      	ldr	r1, [pc, #676]	; (8003814 <HAL_RCC_OscConfig+0x340>)
 8003570:	400a      	ands	r2, r1
 8003572:	601a      	str	r2, [r3, #0]
 8003574:	e01e      	b.n	80035b4 <HAL_RCC_OscConfig+0xe0>
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	685b      	ldr	r3, [r3, #4]
 800357a:	2b05      	cmp	r3, #5
 800357c:	d10e      	bne.n	800359c <HAL_RCC_OscConfig+0xc8>
 800357e:	4ba3      	ldr	r3, [pc, #652]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003580:	681a      	ldr	r2, [r3, #0]
 8003582:	4ba2      	ldr	r3, [pc, #648]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003584:	2180      	movs	r1, #128	; 0x80
 8003586:	02c9      	lsls	r1, r1, #11
 8003588:	430a      	orrs	r2, r1
 800358a:	601a      	str	r2, [r3, #0]
 800358c:	4b9f      	ldr	r3, [pc, #636]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800358e:	681a      	ldr	r2, [r3, #0]
 8003590:	4b9e      	ldr	r3, [pc, #632]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003592:	2180      	movs	r1, #128	; 0x80
 8003594:	0249      	lsls	r1, r1, #9
 8003596:	430a      	orrs	r2, r1
 8003598:	601a      	str	r2, [r3, #0]
 800359a:	e00b      	b.n	80035b4 <HAL_RCC_OscConfig+0xe0>
 800359c:	4b9b      	ldr	r3, [pc, #620]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800359e:	681a      	ldr	r2, [r3, #0]
 80035a0:	4b9a      	ldr	r3, [pc, #616]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80035a2:	499b      	ldr	r1, [pc, #620]	; (8003810 <HAL_RCC_OscConfig+0x33c>)
 80035a4:	400a      	ands	r2, r1
 80035a6:	601a      	str	r2, [r3, #0]
 80035a8:	4b98      	ldr	r3, [pc, #608]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80035aa:	681a      	ldr	r2, [r3, #0]
 80035ac:	4b97      	ldr	r3, [pc, #604]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80035ae:	4999      	ldr	r1, [pc, #612]	; (8003814 <HAL_RCC_OscConfig+0x340>)
 80035b0:	400a      	ands	r2, r1
 80035b2:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	685b      	ldr	r3, [r3, #4]
 80035b8:	2b00      	cmp	r3, #0
 80035ba:	d014      	beq.n	80035e6 <HAL_RCC_OscConfig+0x112>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80035bc:	f7ff fea8 	bl	8003310 <HAL_GetTick>
 80035c0:	0003      	movs	r3, r0
 80035c2:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80035c4:	e008      	b.n	80035d8 <HAL_RCC_OscConfig+0x104>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80035c6:	f7ff fea3 	bl	8003310 <HAL_GetTick>
 80035ca:	0002      	movs	r2, r0
 80035cc:	69bb      	ldr	r3, [r7, #24]
 80035ce:	1ad3      	subs	r3, r2, r3
 80035d0:	2b64      	cmp	r3, #100	; 0x64
 80035d2:	d901      	bls.n	80035d8 <HAL_RCC_OscConfig+0x104>
          {
            return HAL_TIMEOUT;
 80035d4:	2303      	movs	r3, #3
 80035d6:	e2fd      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80035d8:	4b8c      	ldr	r3, [pc, #560]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80035da:	681a      	ldr	r2, [r3, #0]
 80035dc:	2380      	movs	r3, #128	; 0x80
 80035de:	029b      	lsls	r3, r3, #10
 80035e0:	4013      	ands	r3, r2
 80035e2:	d0f0      	beq.n	80035c6 <HAL_RCC_OscConfig+0xf2>
 80035e4:	e015      	b.n	8003612 <HAL_RCC_OscConfig+0x13e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80035e6:	f7ff fe93 	bl	8003310 <HAL_GetTick>
 80035ea:	0003      	movs	r3, r0
 80035ec:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80035ee:	e008      	b.n	8003602 <HAL_RCC_OscConfig+0x12e>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80035f0:	f7ff fe8e 	bl	8003310 <HAL_GetTick>
 80035f4:	0002      	movs	r2, r0
 80035f6:	69bb      	ldr	r3, [r7, #24]
 80035f8:	1ad3      	subs	r3, r2, r3
 80035fa:	2b64      	cmp	r3, #100	; 0x64
 80035fc:	d901      	bls.n	8003602 <HAL_RCC_OscConfig+0x12e>
          {
            return HAL_TIMEOUT;
 80035fe:	2303      	movs	r3, #3
 8003600:	e2e8      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003602:	4b82      	ldr	r3, [pc, #520]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003604:	681a      	ldr	r2, [r3, #0]
 8003606:	2380      	movs	r3, #128	; 0x80
 8003608:	029b      	lsls	r3, r3, #10
 800360a:	4013      	ands	r3, r2
 800360c:	d1f0      	bne.n	80035f0 <HAL_RCC_OscConfig+0x11c>
 800360e:	e000      	b.n	8003612 <HAL_RCC_OscConfig+0x13e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003610:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	2202      	movs	r2, #2
 8003618:	4013      	ands	r3, r2
 800361a:	d100      	bne.n	800361e <HAL_RCC_OscConfig+0x14a>
 800361c:	e06c      	b.n	80036f8 <HAL_RCC_OscConfig+0x224>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 800361e:	4b7b      	ldr	r3, [pc, #492]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003620:	685b      	ldr	r3, [r3, #4]
 8003622:	220c      	movs	r2, #12
 8003624:	4013      	ands	r3, r2
 8003626:	d00e      	beq.n	8003646 <HAL_RCC_OscConfig+0x172>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8003628:	4b78      	ldr	r3, [pc, #480]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800362a:	685b      	ldr	r3, [r3, #4]
 800362c:	220c      	movs	r2, #12
 800362e:	4013      	ands	r3, r2
 8003630:	2b08      	cmp	r3, #8
 8003632:	d11f      	bne.n	8003674 <HAL_RCC_OscConfig+0x1a0>
 8003634:	4b75      	ldr	r3, [pc, #468]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003636:	685a      	ldr	r2, [r3, #4]
 8003638:	23c0      	movs	r3, #192	; 0xc0
 800363a:	025b      	lsls	r3, r3, #9
 800363c:	401a      	ands	r2, r3
 800363e:	2380      	movs	r3, #128	; 0x80
 8003640:	021b      	lsls	r3, r3, #8
 8003642:	429a      	cmp	r2, r3
 8003644:	d116      	bne.n	8003674 <HAL_RCC_OscConfig+0x1a0>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003646:	4b71      	ldr	r3, [pc, #452]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	2202      	movs	r2, #2
 800364c:	4013      	ands	r3, r2
 800364e:	d005      	beq.n	800365c <HAL_RCC_OscConfig+0x188>
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	68db      	ldr	r3, [r3, #12]
 8003654:	2b01      	cmp	r3, #1
 8003656:	d001      	beq.n	800365c <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 8003658:	2301      	movs	r3, #1
 800365a:	e2bb      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800365c:	4b6b      	ldr	r3, [pc, #428]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	22f8      	movs	r2, #248	; 0xf8
 8003662:	4393      	bics	r3, r2
 8003664:	0019      	movs	r1, r3
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	691b      	ldr	r3, [r3, #16]
 800366a:	00da      	lsls	r2, r3, #3
 800366c:	4b67      	ldr	r3, [pc, #412]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800366e:	430a      	orrs	r2, r1
 8003670:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003672:	e041      	b.n	80036f8 <HAL_RCC_OscConfig+0x224>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	68db      	ldr	r3, [r3, #12]
 8003678:	2b00      	cmp	r3, #0
 800367a:	d024      	beq.n	80036c6 <HAL_RCC_OscConfig+0x1f2>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800367c:	4b63      	ldr	r3, [pc, #396]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800367e:	681a      	ldr	r2, [r3, #0]
 8003680:	4b62      	ldr	r3, [pc, #392]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003682:	2101      	movs	r1, #1
 8003684:	430a      	orrs	r2, r1
 8003686:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003688:	f7ff fe42 	bl	8003310 <HAL_GetTick>
 800368c:	0003      	movs	r3, r0
 800368e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003690:	e008      	b.n	80036a4 <HAL_RCC_OscConfig+0x1d0>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003692:	f7ff fe3d 	bl	8003310 <HAL_GetTick>
 8003696:	0002      	movs	r2, r0
 8003698:	69bb      	ldr	r3, [r7, #24]
 800369a:	1ad3      	subs	r3, r2, r3
 800369c:	2b02      	cmp	r3, #2
 800369e:	d901      	bls.n	80036a4 <HAL_RCC_OscConfig+0x1d0>
          {
            return HAL_TIMEOUT;
 80036a0:	2303      	movs	r3, #3
 80036a2:	e297      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80036a4:	4b59      	ldr	r3, [pc, #356]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	2202      	movs	r2, #2
 80036aa:	4013      	ands	r3, r2
 80036ac:	d0f1      	beq.n	8003692 <HAL_RCC_OscConfig+0x1be>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80036ae:	4b57      	ldr	r3, [pc, #348]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	22f8      	movs	r2, #248	; 0xf8
 80036b4:	4393      	bics	r3, r2
 80036b6:	0019      	movs	r1, r3
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	691b      	ldr	r3, [r3, #16]
 80036bc:	00da      	lsls	r2, r3, #3
 80036be:	4b53      	ldr	r3, [pc, #332]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80036c0:	430a      	orrs	r2, r1
 80036c2:	601a      	str	r2, [r3, #0]
 80036c4:	e018      	b.n	80036f8 <HAL_RCC_OscConfig+0x224>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80036c6:	4b51      	ldr	r3, [pc, #324]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80036c8:	681a      	ldr	r2, [r3, #0]
 80036ca:	4b50      	ldr	r3, [pc, #320]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80036cc:	2101      	movs	r1, #1
 80036ce:	438a      	bics	r2, r1
 80036d0:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80036d2:	f7ff fe1d 	bl	8003310 <HAL_GetTick>
 80036d6:	0003      	movs	r3, r0
 80036d8:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80036da:	e008      	b.n	80036ee <HAL_RCC_OscConfig+0x21a>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80036dc:	f7ff fe18 	bl	8003310 <HAL_GetTick>
 80036e0:	0002      	movs	r2, r0
 80036e2:	69bb      	ldr	r3, [r7, #24]
 80036e4:	1ad3      	subs	r3, r2, r3
 80036e6:	2b02      	cmp	r3, #2
 80036e8:	d901      	bls.n	80036ee <HAL_RCC_OscConfig+0x21a>
          {
            return HAL_TIMEOUT;
 80036ea:	2303      	movs	r3, #3
 80036ec:	e272      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80036ee:	4b47      	ldr	r3, [pc, #284]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	2202      	movs	r2, #2
 80036f4:	4013      	ands	r3, r2
 80036f6:	d1f1      	bne.n	80036dc <HAL_RCC_OscConfig+0x208>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	2208      	movs	r2, #8
 80036fe:	4013      	ands	r3, r2
 8003700:	d036      	beq.n	8003770 <HAL_RCC_OscConfig+0x29c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	69db      	ldr	r3, [r3, #28]
 8003706:	2b00      	cmp	r3, #0
 8003708:	d019      	beq.n	800373e <HAL_RCC_OscConfig+0x26a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800370a:	4b40      	ldr	r3, [pc, #256]	; (800380c <HAL_RCC_OscConfig+0x338>)
 800370c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800370e:	4b3f      	ldr	r3, [pc, #252]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003710:	2101      	movs	r1, #1
 8003712:	430a      	orrs	r2, r1
 8003714:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003716:	f7ff fdfb 	bl	8003310 <HAL_GetTick>
 800371a:	0003      	movs	r3, r0
 800371c:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800371e:	e008      	b.n	8003732 <HAL_RCC_OscConfig+0x25e>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003720:	f7ff fdf6 	bl	8003310 <HAL_GetTick>
 8003724:	0002      	movs	r2, r0
 8003726:	69bb      	ldr	r3, [r7, #24]
 8003728:	1ad3      	subs	r3, r2, r3
 800372a:	2b02      	cmp	r3, #2
 800372c:	d901      	bls.n	8003732 <HAL_RCC_OscConfig+0x25e>
        {
          return HAL_TIMEOUT;
 800372e:	2303      	movs	r3, #3
 8003730:	e250      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003732:	4b36      	ldr	r3, [pc, #216]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003734:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003736:	2202      	movs	r2, #2
 8003738:	4013      	ands	r3, r2
 800373a:	d0f1      	beq.n	8003720 <HAL_RCC_OscConfig+0x24c>
 800373c:	e018      	b.n	8003770 <HAL_RCC_OscConfig+0x29c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800373e:	4b33      	ldr	r3, [pc, #204]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003740:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003742:	4b32      	ldr	r3, [pc, #200]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003744:	2101      	movs	r1, #1
 8003746:	438a      	bics	r2, r1
 8003748:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800374a:	f7ff fde1 	bl	8003310 <HAL_GetTick>
 800374e:	0003      	movs	r3, r0
 8003750:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003752:	e008      	b.n	8003766 <HAL_RCC_OscConfig+0x292>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003754:	f7ff fddc 	bl	8003310 <HAL_GetTick>
 8003758:	0002      	movs	r2, r0
 800375a:	69bb      	ldr	r3, [r7, #24]
 800375c:	1ad3      	subs	r3, r2, r3
 800375e:	2b02      	cmp	r3, #2
 8003760:	d901      	bls.n	8003766 <HAL_RCC_OscConfig+0x292>
        {
          return HAL_TIMEOUT;
 8003762:	2303      	movs	r3, #3
 8003764:	e236      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003766:	4b29      	ldr	r3, [pc, #164]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003768:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800376a:	2202      	movs	r2, #2
 800376c:	4013      	ands	r3, r2
 800376e:	d1f1      	bne.n	8003754 <HAL_RCC_OscConfig+0x280>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	681b      	ldr	r3, [r3, #0]
 8003774:	2204      	movs	r2, #4
 8003776:	4013      	ands	r3, r2
 8003778:	d100      	bne.n	800377c <HAL_RCC_OscConfig+0x2a8>
 800377a:	e0b5      	b.n	80038e8 <HAL_RCC_OscConfig+0x414>
  {
    FlagStatus       pwrclkchanged = RESET;
 800377c:	201f      	movs	r0, #31
 800377e:	183b      	adds	r3, r7, r0
 8003780:	2200      	movs	r2, #0
 8003782:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003784:	4b21      	ldr	r3, [pc, #132]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003786:	69da      	ldr	r2, [r3, #28]
 8003788:	2380      	movs	r3, #128	; 0x80
 800378a:	055b      	lsls	r3, r3, #21
 800378c:	4013      	ands	r3, r2
 800378e:	d110      	bne.n	80037b2 <HAL_RCC_OscConfig+0x2de>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003790:	4b1e      	ldr	r3, [pc, #120]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003792:	69da      	ldr	r2, [r3, #28]
 8003794:	4b1d      	ldr	r3, [pc, #116]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003796:	2180      	movs	r1, #128	; 0x80
 8003798:	0549      	lsls	r1, r1, #21
 800379a:	430a      	orrs	r2, r1
 800379c:	61da      	str	r2, [r3, #28]
 800379e:	4b1b      	ldr	r3, [pc, #108]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80037a0:	69da      	ldr	r2, [r3, #28]
 80037a2:	2380      	movs	r3, #128	; 0x80
 80037a4:	055b      	lsls	r3, r3, #21
 80037a6:	4013      	ands	r3, r2
 80037a8:	60fb      	str	r3, [r7, #12]
 80037aa:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 80037ac:	183b      	adds	r3, r7, r0
 80037ae:	2201      	movs	r2, #1
 80037b0:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80037b2:	4b19      	ldr	r3, [pc, #100]	; (8003818 <HAL_RCC_OscConfig+0x344>)
 80037b4:	681a      	ldr	r2, [r3, #0]
 80037b6:	2380      	movs	r3, #128	; 0x80
 80037b8:	005b      	lsls	r3, r3, #1
 80037ba:	4013      	ands	r3, r2
 80037bc:	d11a      	bne.n	80037f4 <HAL_RCC_OscConfig+0x320>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80037be:	4b16      	ldr	r3, [pc, #88]	; (8003818 <HAL_RCC_OscConfig+0x344>)
 80037c0:	681a      	ldr	r2, [r3, #0]
 80037c2:	4b15      	ldr	r3, [pc, #84]	; (8003818 <HAL_RCC_OscConfig+0x344>)
 80037c4:	2180      	movs	r1, #128	; 0x80
 80037c6:	0049      	lsls	r1, r1, #1
 80037c8:	430a      	orrs	r2, r1
 80037ca:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80037cc:	f7ff fda0 	bl	8003310 <HAL_GetTick>
 80037d0:	0003      	movs	r3, r0
 80037d2:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80037d4:	e008      	b.n	80037e8 <HAL_RCC_OscConfig+0x314>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80037d6:	f7ff fd9b 	bl	8003310 <HAL_GetTick>
 80037da:	0002      	movs	r2, r0
 80037dc:	69bb      	ldr	r3, [r7, #24]
 80037de:	1ad3      	subs	r3, r2, r3
 80037e0:	2b64      	cmp	r3, #100	; 0x64
 80037e2:	d901      	bls.n	80037e8 <HAL_RCC_OscConfig+0x314>
        {
          return HAL_TIMEOUT;
 80037e4:	2303      	movs	r3, #3
 80037e6:	e1f5      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80037e8:	4b0b      	ldr	r3, [pc, #44]	; (8003818 <HAL_RCC_OscConfig+0x344>)
 80037ea:	681a      	ldr	r2, [r3, #0]
 80037ec:	2380      	movs	r3, #128	; 0x80
 80037ee:	005b      	lsls	r3, r3, #1
 80037f0:	4013      	ands	r3, r2
 80037f2:	d0f0      	beq.n	80037d6 <HAL_RCC_OscConfig+0x302>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	689b      	ldr	r3, [r3, #8]
 80037f8:	2b01      	cmp	r3, #1
 80037fa:	d10f      	bne.n	800381c <HAL_RCC_OscConfig+0x348>
 80037fc:	4b03      	ldr	r3, [pc, #12]	; (800380c <HAL_RCC_OscConfig+0x338>)
 80037fe:	6a1a      	ldr	r2, [r3, #32]
 8003800:	4b02      	ldr	r3, [pc, #8]	; (800380c <HAL_RCC_OscConfig+0x338>)
 8003802:	2101      	movs	r1, #1
 8003804:	430a      	orrs	r2, r1
 8003806:	621a      	str	r2, [r3, #32]
 8003808:	e036      	b.n	8003878 <HAL_RCC_OscConfig+0x3a4>
 800380a:	46c0      	nop			; (mov r8, r8)
 800380c:	40021000 	.word	0x40021000
 8003810:	fffeffff 	.word	0xfffeffff
 8003814:	fffbffff 	.word	0xfffbffff
 8003818:	40007000 	.word	0x40007000
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	689b      	ldr	r3, [r3, #8]
 8003820:	2b00      	cmp	r3, #0
 8003822:	d10c      	bne.n	800383e <HAL_RCC_OscConfig+0x36a>
 8003824:	4bca      	ldr	r3, [pc, #808]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003826:	6a1a      	ldr	r2, [r3, #32]
 8003828:	4bc9      	ldr	r3, [pc, #804]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800382a:	2101      	movs	r1, #1
 800382c:	438a      	bics	r2, r1
 800382e:	621a      	str	r2, [r3, #32]
 8003830:	4bc7      	ldr	r3, [pc, #796]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003832:	6a1a      	ldr	r2, [r3, #32]
 8003834:	4bc6      	ldr	r3, [pc, #792]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003836:	2104      	movs	r1, #4
 8003838:	438a      	bics	r2, r1
 800383a:	621a      	str	r2, [r3, #32]
 800383c:	e01c      	b.n	8003878 <HAL_RCC_OscConfig+0x3a4>
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	689b      	ldr	r3, [r3, #8]
 8003842:	2b05      	cmp	r3, #5
 8003844:	d10c      	bne.n	8003860 <HAL_RCC_OscConfig+0x38c>
 8003846:	4bc2      	ldr	r3, [pc, #776]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003848:	6a1a      	ldr	r2, [r3, #32]
 800384a:	4bc1      	ldr	r3, [pc, #772]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800384c:	2104      	movs	r1, #4
 800384e:	430a      	orrs	r2, r1
 8003850:	621a      	str	r2, [r3, #32]
 8003852:	4bbf      	ldr	r3, [pc, #764]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003854:	6a1a      	ldr	r2, [r3, #32]
 8003856:	4bbe      	ldr	r3, [pc, #760]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003858:	2101      	movs	r1, #1
 800385a:	430a      	orrs	r2, r1
 800385c:	621a      	str	r2, [r3, #32]
 800385e:	e00b      	b.n	8003878 <HAL_RCC_OscConfig+0x3a4>
 8003860:	4bbb      	ldr	r3, [pc, #748]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003862:	6a1a      	ldr	r2, [r3, #32]
 8003864:	4bba      	ldr	r3, [pc, #744]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003866:	2101      	movs	r1, #1
 8003868:	438a      	bics	r2, r1
 800386a:	621a      	str	r2, [r3, #32]
 800386c:	4bb8      	ldr	r3, [pc, #736]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800386e:	6a1a      	ldr	r2, [r3, #32]
 8003870:	4bb7      	ldr	r3, [pc, #732]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003872:	2104      	movs	r1, #4
 8003874:	438a      	bics	r2, r1
 8003876:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	689b      	ldr	r3, [r3, #8]
 800387c:	2b00      	cmp	r3, #0
 800387e:	d014      	beq.n	80038aa <HAL_RCC_OscConfig+0x3d6>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003880:	f7ff fd46 	bl	8003310 <HAL_GetTick>
 8003884:	0003      	movs	r3, r0
 8003886:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003888:	e009      	b.n	800389e <HAL_RCC_OscConfig+0x3ca>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800388a:	f7ff fd41 	bl	8003310 <HAL_GetTick>
 800388e:	0002      	movs	r2, r0
 8003890:	69bb      	ldr	r3, [r7, #24]
 8003892:	1ad3      	subs	r3, r2, r3
 8003894:	4aaf      	ldr	r2, [pc, #700]	; (8003b54 <HAL_RCC_OscConfig+0x680>)
 8003896:	4293      	cmp	r3, r2
 8003898:	d901      	bls.n	800389e <HAL_RCC_OscConfig+0x3ca>
        {
          return HAL_TIMEOUT;
 800389a:	2303      	movs	r3, #3
 800389c:	e19a      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800389e:	4bac      	ldr	r3, [pc, #688]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80038a0:	6a1b      	ldr	r3, [r3, #32]
 80038a2:	2202      	movs	r2, #2
 80038a4:	4013      	ands	r3, r2
 80038a6:	d0f0      	beq.n	800388a <HAL_RCC_OscConfig+0x3b6>
 80038a8:	e013      	b.n	80038d2 <HAL_RCC_OscConfig+0x3fe>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80038aa:	f7ff fd31 	bl	8003310 <HAL_GetTick>
 80038ae:	0003      	movs	r3, r0
 80038b0:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80038b2:	e009      	b.n	80038c8 <HAL_RCC_OscConfig+0x3f4>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80038b4:	f7ff fd2c 	bl	8003310 <HAL_GetTick>
 80038b8:	0002      	movs	r2, r0
 80038ba:	69bb      	ldr	r3, [r7, #24]
 80038bc:	1ad3      	subs	r3, r2, r3
 80038be:	4aa5      	ldr	r2, [pc, #660]	; (8003b54 <HAL_RCC_OscConfig+0x680>)
 80038c0:	4293      	cmp	r3, r2
 80038c2:	d901      	bls.n	80038c8 <HAL_RCC_OscConfig+0x3f4>
        {
          return HAL_TIMEOUT;
 80038c4:	2303      	movs	r3, #3
 80038c6:	e185      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80038c8:	4ba1      	ldr	r3, [pc, #644]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80038ca:	6a1b      	ldr	r3, [r3, #32]
 80038cc:	2202      	movs	r2, #2
 80038ce:	4013      	ands	r3, r2
 80038d0:	d1f0      	bne.n	80038b4 <HAL_RCC_OscConfig+0x3e0>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80038d2:	231f      	movs	r3, #31
 80038d4:	18fb      	adds	r3, r7, r3
 80038d6:	781b      	ldrb	r3, [r3, #0]
 80038d8:	2b01      	cmp	r3, #1
 80038da:	d105      	bne.n	80038e8 <HAL_RCC_OscConfig+0x414>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80038dc:	4b9c      	ldr	r3, [pc, #624]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80038de:	69da      	ldr	r2, [r3, #28]
 80038e0:	4b9b      	ldr	r3, [pc, #620]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80038e2:	499d      	ldr	r1, [pc, #628]	; (8003b58 <HAL_RCC_OscConfig+0x684>)
 80038e4:	400a      	ands	r2, r1
 80038e6:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	2210      	movs	r2, #16
 80038ee:	4013      	ands	r3, r2
 80038f0:	d063      	beq.n	80039ba <HAL_RCC_OscConfig+0x4e6>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	695b      	ldr	r3, [r3, #20]
 80038f6:	2b01      	cmp	r3, #1
 80038f8:	d12a      	bne.n	8003950 <HAL_RCC_OscConfig+0x47c>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 80038fa:	4b95      	ldr	r3, [pc, #596]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80038fc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80038fe:	4b94      	ldr	r3, [pc, #592]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003900:	2104      	movs	r1, #4
 8003902:	430a      	orrs	r2, r1
 8003904:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8003906:	4b92      	ldr	r3, [pc, #584]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003908:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800390a:	4b91      	ldr	r3, [pc, #580]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800390c:	2101      	movs	r1, #1
 800390e:	430a      	orrs	r2, r1
 8003910:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003912:	f7ff fcfd 	bl	8003310 <HAL_GetTick>
 8003916:	0003      	movs	r3, r0
 8003918:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800391a:	e008      	b.n	800392e <HAL_RCC_OscConfig+0x45a>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800391c:	f7ff fcf8 	bl	8003310 <HAL_GetTick>
 8003920:	0002      	movs	r2, r0
 8003922:	69bb      	ldr	r3, [r7, #24]
 8003924:	1ad3      	subs	r3, r2, r3
 8003926:	2b02      	cmp	r3, #2
 8003928:	d901      	bls.n	800392e <HAL_RCC_OscConfig+0x45a>
        {
          return HAL_TIMEOUT;
 800392a:	2303      	movs	r3, #3
 800392c:	e152      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800392e:	4b88      	ldr	r3, [pc, #544]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003930:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003932:	2202      	movs	r2, #2
 8003934:	4013      	ands	r3, r2
 8003936:	d0f1      	beq.n	800391c <HAL_RCC_OscConfig+0x448>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003938:	4b85      	ldr	r3, [pc, #532]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800393a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800393c:	22f8      	movs	r2, #248	; 0xf8
 800393e:	4393      	bics	r3, r2
 8003940:	0019      	movs	r1, r3
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	699b      	ldr	r3, [r3, #24]
 8003946:	00da      	lsls	r2, r3, #3
 8003948:	4b81      	ldr	r3, [pc, #516]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800394a:	430a      	orrs	r2, r1
 800394c:	635a      	str	r2, [r3, #52]	; 0x34
 800394e:	e034      	b.n	80039ba <HAL_RCC_OscConfig+0x4e6>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	695b      	ldr	r3, [r3, #20]
 8003954:	3305      	adds	r3, #5
 8003956:	d111      	bne.n	800397c <HAL_RCC_OscConfig+0x4a8>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8003958:	4b7d      	ldr	r3, [pc, #500]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800395a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800395c:	4b7c      	ldr	r3, [pc, #496]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800395e:	2104      	movs	r1, #4
 8003960:	438a      	bics	r2, r1
 8003962:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003964:	4b7a      	ldr	r3, [pc, #488]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003966:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003968:	22f8      	movs	r2, #248	; 0xf8
 800396a:	4393      	bics	r3, r2
 800396c:	0019      	movs	r1, r3
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	699b      	ldr	r3, [r3, #24]
 8003972:	00da      	lsls	r2, r3, #3
 8003974:	4b76      	ldr	r3, [pc, #472]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003976:	430a      	orrs	r2, r1
 8003978:	635a      	str	r2, [r3, #52]	; 0x34
 800397a:	e01e      	b.n	80039ba <HAL_RCC_OscConfig+0x4e6>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 800397c:	4b74      	ldr	r3, [pc, #464]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800397e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003980:	4b73      	ldr	r3, [pc, #460]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003982:	2104      	movs	r1, #4
 8003984:	430a      	orrs	r2, r1
 8003986:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8003988:	4b71      	ldr	r3, [pc, #452]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800398a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800398c:	4b70      	ldr	r3, [pc, #448]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 800398e:	2101      	movs	r1, #1
 8003990:	438a      	bics	r2, r1
 8003992:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003994:	f7ff fcbc 	bl	8003310 <HAL_GetTick>
 8003998:	0003      	movs	r3, r0
 800399a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 800399c:	e008      	b.n	80039b0 <HAL_RCC_OscConfig+0x4dc>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800399e:	f7ff fcb7 	bl	8003310 <HAL_GetTick>
 80039a2:	0002      	movs	r2, r0
 80039a4:	69bb      	ldr	r3, [r7, #24]
 80039a6:	1ad3      	subs	r3, r2, r3
 80039a8:	2b02      	cmp	r3, #2
 80039aa:	d901      	bls.n	80039b0 <HAL_RCC_OscConfig+0x4dc>
        {
          return HAL_TIMEOUT;
 80039ac:	2303      	movs	r3, #3
 80039ae:	e111      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80039b0:	4b67      	ldr	r3, [pc, #412]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80039b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80039b4:	2202      	movs	r2, #2
 80039b6:	4013      	ands	r3, r2
 80039b8:	d1f1      	bne.n	800399e <HAL_RCC_OscConfig+0x4ca>
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	2220      	movs	r2, #32
 80039c0:	4013      	ands	r3, r2
 80039c2:	d05c      	beq.n	8003a7e <HAL_RCC_OscConfig+0x5aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* When the HSI48 is used as system clock it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 80039c4:	4b62      	ldr	r3, [pc, #392]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80039c6:	685b      	ldr	r3, [r3, #4]
 80039c8:	220c      	movs	r2, #12
 80039ca:	4013      	ands	r3, r2
 80039cc:	2b0c      	cmp	r3, #12
 80039ce:	d00e      	beq.n	80039ee <HAL_RCC_OscConfig+0x51a>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 80039d0:	4b5f      	ldr	r3, [pc, #380]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80039d2:	685b      	ldr	r3, [r3, #4]
 80039d4:	220c      	movs	r2, #12
 80039d6:	4013      	ands	r3, r2
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 80039d8:	2b08      	cmp	r3, #8
 80039da:	d114      	bne.n	8003a06 <HAL_RCC_OscConfig+0x532>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 80039dc:	4b5c      	ldr	r3, [pc, #368]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80039de:	685a      	ldr	r2, [r3, #4]
 80039e0:	23c0      	movs	r3, #192	; 0xc0
 80039e2:	025b      	lsls	r3, r3, #9
 80039e4:	401a      	ands	r2, r3
 80039e6:	23c0      	movs	r3, #192	; 0xc0
 80039e8:	025b      	lsls	r3, r3, #9
 80039ea:	429a      	cmp	r2, r3
 80039ec:	d10b      	bne.n	8003a06 <HAL_RCC_OscConfig+0x532>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 80039ee:	4b58      	ldr	r3, [pc, #352]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 80039f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80039f2:	2380      	movs	r3, #128	; 0x80
 80039f4:	025b      	lsls	r3, r3, #9
 80039f6:	4013      	ands	r3, r2
 80039f8:	d040      	beq.n	8003a7c <HAL_RCC_OscConfig+0x5a8>
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	6a1b      	ldr	r3, [r3, #32]
 80039fe:	2b01      	cmp	r3, #1
 8003a00:	d03c      	beq.n	8003a7c <HAL_RCC_OscConfig+0x5a8>
      {
        return HAL_ERROR;
 8003a02:	2301      	movs	r3, #1
 8003a04:	e0e6      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      }
    }
    else
    {
      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	6a1b      	ldr	r3, [r3, #32]
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	d01b      	beq.n	8003a46 <HAL_RCC_OscConfig+0x572>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8003a0e:	4b50      	ldr	r3, [pc, #320]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003a10:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a12:	4b4f      	ldr	r3, [pc, #316]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003a14:	2180      	movs	r1, #128	; 0x80
 8003a16:	0249      	lsls	r1, r1, #9
 8003a18:	430a      	orrs	r2, r1
 8003a1a:	635a      	str	r2, [r3, #52]	; 0x34

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003a1c:	f7ff fc78 	bl	8003310 <HAL_GetTick>
 8003a20:	0003      	movs	r3, r0
 8003a22:	61bb      	str	r3, [r7, #24]
      
        /* Wait till HSI48 is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003a24:	e008      	b.n	8003a38 <HAL_RCC_OscConfig+0x564>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003a26:	f7ff fc73 	bl	8003310 <HAL_GetTick>
 8003a2a:	0002      	movs	r2, r0
 8003a2c:	69bb      	ldr	r3, [r7, #24]
 8003a2e:	1ad3      	subs	r3, r2, r3
 8003a30:	2b02      	cmp	r3, #2
 8003a32:	d901      	bls.n	8003a38 <HAL_RCC_OscConfig+0x564>
          {
            return HAL_TIMEOUT;
 8003a34:	2303      	movs	r3, #3
 8003a36:	e0cd      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003a38:	4b45      	ldr	r3, [pc, #276]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003a3a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a3c:	2380      	movs	r3, #128	; 0x80
 8003a3e:	025b      	lsls	r3, r3, #9
 8003a40:	4013      	ands	r3, r2
 8003a42:	d0f0      	beq.n	8003a26 <HAL_RCC_OscConfig+0x552>
 8003a44:	e01b      	b.n	8003a7e <HAL_RCC_OscConfig+0x5aa>
        } 
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 8003a46:	4b42      	ldr	r3, [pc, #264]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003a48:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a4a:	4b41      	ldr	r3, [pc, #260]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003a4c:	4943      	ldr	r1, [pc, #268]	; (8003b5c <HAL_RCC_OscConfig+0x688>)
 8003a4e:	400a      	ands	r2, r1
 8003a50:	635a      	str	r2, [r3, #52]	; 0x34

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003a52:	f7ff fc5d 	bl	8003310 <HAL_GetTick>
 8003a56:	0003      	movs	r3, r0
 8003a58:	61bb      	str	r3, [r7, #24]
      
        /* Wait till HSI48 is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8003a5a:	e008      	b.n	8003a6e <HAL_RCC_OscConfig+0x59a>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003a5c:	f7ff fc58 	bl	8003310 <HAL_GetTick>
 8003a60:	0002      	movs	r2, r0
 8003a62:	69bb      	ldr	r3, [r7, #24]
 8003a64:	1ad3      	subs	r3, r2, r3
 8003a66:	2b02      	cmp	r3, #2
 8003a68:	d901      	bls.n	8003a6e <HAL_RCC_OscConfig+0x59a>
          {
            return HAL_TIMEOUT;
 8003a6a:	2303      	movs	r3, #3
 8003a6c:	e0b2      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8003a6e:	4b38      	ldr	r3, [pc, #224]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003a70:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a72:	2380      	movs	r3, #128	; 0x80
 8003a74:	025b      	lsls	r3, r3, #9
 8003a76:	4013      	ands	r3, r2
 8003a78:	d1f0      	bne.n	8003a5c <HAL_RCC_OscConfig+0x588>
 8003a7a:	e000      	b.n	8003a7e <HAL_RCC_OscConfig+0x5aa>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 8003a7c:	46c0      	nop			; (mov r8, r8)
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	d100      	bne.n	8003a88 <HAL_RCC_OscConfig+0x5b4>
 8003a86:	e0a4      	b.n	8003bd2 <HAL_RCC_OscConfig+0x6fe>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003a88:	4b31      	ldr	r3, [pc, #196]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003a8a:	685b      	ldr	r3, [r3, #4]
 8003a8c:	220c      	movs	r2, #12
 8003a8e:	4013      	ands	r3, r2
 8003a90:	2b08      	cmp	r3, #8
 8003a92:	d100      	bne.n	8003a96 <HAL_RCC_OscConfig+0x5c2>
 8003a94:	e078      	b.n	8003b88 <HAL_RCC_OscConfig+0x6b4>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a9a:	2b02      	cmp	r3, #2
 8003a9c:	d14c      	bne.n	8003b38 <HAL_RCC_OscConfig+0x664>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003a9e:	4b2c      	ldr	r3, [pc, #176]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003aa0:	681a      	ldr	r2, [r3, #0]
 8003aa2:	4b2b      	ldr	r3, [pc, #172]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003aa4:	492e      	ldr	r1, [pc, #184]	; (8003b60 <HAL_RCC_OscConfig+0x68c>)
 8003aa6:	400a      	ands	r2, r1
 8003aa8:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003aaa:	f7ff fc31 	bl	8003310 <HAL_GetTick>
 8003aae:	0003      	movs	r3, r0
 8003ab0:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003ab2:	e008      	b.n	8003ac6 <HAL_RCC_OscConfig+0x5f2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003ab4:	f7ff fc2c 	bl	8003310 <HAL_GetTick>
 8003ab8:	0002      	movs	r2, r0
 8003aba:	69bb      	ldr	r3, [r7, #24]
 8003abc:	1ad3      	subs	r3, r2, r3
 8003abe:	2b02      	cmp	r3, #2
 8003ac0:	d901      	bls.n	8003ac6 <HAL_RCC_OscConfig+0x5f2>
          {
            return HAL_TIMEOUT;
 8003ac2:	2303      	movs	r3, #3
 8003ac4:	e086      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003ac6:	4b22      	ldr	r3, [pc, #136]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003ac8:	681a      	ldr	r2, [r3, #0]
 8003aca:	2380      	movs	r3, #128	; 0x80
 8003acc:	049b      	lsls	r3, r3, #18
 8003ace:	4013      	ands	r3, r2
 8003ad0:	d1f0      	bne.n	8003ab4 <HAL_RCC_OscConfig+0x5e0>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003ad2:	4b1f      	ldr	r3, [pc, #124]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003ad4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ad6:	220f      	movs	r2, #15
 8003ad8:	4393      	bics	r3, r2
 8003ada:	0019      	movs	r1, r3
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ae0:	4b1b      	ldr	r3, [pc, #108]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003ae2:	430a      	orrs	r2, r1
 8003ae4:	62da      	str	r2, [r3, #44]	; 0x2c
 8003ae6:	4b1a      	ldr	r3, [pc, #104]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003ae8:	685b      	ldr	r3, [r3, #4]
 8003aea:	4a1e      	ldr	r2, [pc, #120]	; (8003b64 <HAL_RCC_OscConfig+0x690>)
 8003aec:	4013      	ands	r3, r2
 8003aee:	0019      	movs	r1, r3
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003af8:	431a      	orrs	r2, r3
 8003afa:	4b15      	ldr	r3, [pc, #84]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003afc:	430a      	orrs	r2, r1
 8003afe:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003b00:	4b13      	ldr	r3, [pc, #76]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003b02:	681a      	ldr	r2, [r3, #0]
 8003b04:	4b12      	ldr	r3, [pc, #72]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003b06:	2180      	movs	r1, #128	; 0x80
 8003b08:	0449      	lsls	r1, r1, #17
 8003b0a:	430a      	orrs	r2, r1
 8003b0c:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003b0e:	f7ff fbff 	bl	8003310 <HAL_GetTick>
 8003b12:	0003      	movs	r3, r0
 8003b14:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003b16:	e008      	b.n	8003b2a <HAL_RCC_OscConfig+0x656>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003b18:	f7ff fbfa 	bl	8003310 <HAL_GetTick>
 8003b1c:	0002      	movs	r2, r0
 8003b1e:	69bb      	ldr	r3, [r7, #24]
 8003b20:	1ad3      	subs	r3, r2, r3
 8003b22:	2b02      	cmp	r3, #2
 8003b24:	d901      	bls.n	8003b2a <HAL_RCC_OscConfig+0x656>
          {
            return HAL_TIMEOUT;
 8003b26:	2303      	movs	r3, #3
 8003b28:	e054      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003b2a:	4b09      	ldr	r3, [pc, #36]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003b2c:	681a      	ldr	r2, [r3, #0]
 8003b2e:	2380      	movs	r3, #128	; 0x80
 8003b30:	049b      	lsls	r3, r3, #18
 8003b32:	4013      	ands	r3, r2
 8003b34:	d0f0      	beq.n	8003b18 <HAL_RCC_OscConfig+0x644>
 8003b36:	e04c      	b.n	8003bd2 <HAL_RCC_OscConfig+0x6fe>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003b38:	4b05      	ldr	r3, [pc, #20]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003b3a:	681a      	ldr	r2, [r3, #0]
 8003b3c:	4b04      	ldr	r3, [pc, #16]	; (8003b50 <HAL_RCC_OscConfig+0x67c>)
 8003b3e:	4908      	ldr	r1, [pc, #32]	; (8003b60 <HAL_RCC_OscConfig+0x68c>)
 8003b40:	400a      	ands	r2, r1
 8003b42:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003b44:	f7ff fbe4 	bl	8003310 <HAL_GetTick>
 8003b48:	0003      	movs	r3, r0
 8003b4a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003b4c:	e015      	b.n	8003b7a <HAL_RCC_OscConfig+0x6a6>
 8003b4e:	46c0      	nop			; (mov r8, r8)
 8003b50:	40021000 	.word	0x40021000
 8003b54:	00001388 	.word	0x00001388
 8003b58:	efffffff 	.word	0xefffffff
 8003b5c:	fffeffff 	.word	0xfffeffff
 8003b60:	feffffff 	.word	0xfeffffff
 8003b64:	ffc27fff 	.word	0xffc27fff
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003b68:	f7ff fbd2 	bl	8003310 <HAL_GetTick>
 8003b6c:	0002      	movs	r2, r0
 8003b6e:	69bb      	ldr	r3, [r7, #24]
 8003b70:	1ad3      	subs	r3, r2, r3
 8003b72:	2b02      	cmp	r3, #2
 8003b74:	d901      	bls.n	8003b7a <HAL_RCC_OscConfig+0x6a6>
          {
            return HAL_TIMEOUT;
 8003b76:	2303      	movs	r3, #3
 8003b78:	e02c      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003b7a:	4b18      	ldr	r3, [pc, #96]	; (8003bdc <HAL_RCC_OscConfig+0x708>)
 8003b7c:	681a      	ldr	r2, [r3, #0]
 8003b7e:	2380      	movs	r3, #128	; 0x80
 8003b80:	049b      	lsls	r3, r3, #18
 8003b82:	4013      	ands	r3, r2
 8003b84:	d1f0      	bne.n	8003b68 <HAL_RCC_OscConfig+0x694>
 8003b86:	e024      	b.n	8003bd2 <HAL_RCC_OscConfig+0x6fe>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b8c:	2b01      	cmp	r3, #1
 8003b8e:	d101      	bne.n	8003b94 <HAL_RCC_OscConfig+0x6c0>
      {
        return HAL_ERROR;
 8003b90:	2301      	movs	r3, #1
 8003b92:	e01f      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8003b94:	4b11      	ldr	r3, [pc, #68]	; (8003bdc <HAL_RCC_OscConfig+0x708>)
 8003b96:	685b      	ldr	r3, [r3, #4]
 8003b98:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8003b9a:	4b10      	ldr	r3, [pc, #64]	; (8003bdc <HAL_RCC_OscConfig+0x708>)
 8003b9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b9e:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003ba0:	697a      	ldr	r2, [r7, #20]
 8003ba2:	23c0      	movs	r3, #192	; 0xc0
 8003ba4:	025b      	lsls	r3, r3, #9
 8003ba6:	401a      	ands	r2, r3
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bac:	429a      	cmp	r2, r3
 8003bae:	d10e      	bne.n	8003bce <HAL_RCC_OscConfig+0x6fa>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003bb0:	693b      	ldr	r3, [r7, #16]
 8003bb2:	220f      	movs	r2, #15
 8003bb4:	401a      	ands	r2, r3
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003bba:	429a      	cmp	r2, r3
 8003bbc:	d107      	bne.n	8003bce <HAL_RCC_OscConfig+0x6fa>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8003bbe:	697a      	ldr	r2, [r7, #20]
 8003bc0:	23f0      	movs	r3, #240	; 0xf0
 8003bc2:	039b      	lsls	r3, r3, #14
 8003bc4:	401a      	ands	r2, r3
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003bca:	429a      	cmp	r2, r3
 8003bcc:	d001      	beq.n	8003bd2 <HAL_RCC_OscConfig+0x6fe>
        {
          return HAL_ERROR;
 8003bce:	2301      	movs	r3, #1
 8003bd0:	e000      	b.n	8003bd4 <HAL_RCC_OscConfig+0x700>
        }
      }
    }
  }

  return HAL_OK;
 8003bd2:	2300      	movs	r3, #0
}
 8003bd4:	0018      	movs	r0, r3
 8003bd6:	46bd      	mov	sp, r7
 8003bd8:	b008      	add	sp, #32
 8003bda:	bd80      	pop	{r7, pc}
 8003bdc:	40021000 	.word	0x40021000

08003be0 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003be0:	b580      	push	{r7, lr}
 8003be2:	b084      	sub	sp, #16
 8003be4:	af00      	add	r7, sp, #0
 8003be6:	6078      	str	r0, [r7, #4]
 8003be8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d101      	bne.n	8003bf4 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003bf0:	2301      	movs	r3, #1
 8003bf2:	e0bf      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003bf4:	4b61      	ldr	r3, [pc, #388]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	2201      	movs	r2, #1
 8003bfa:	4013      	ands	r3, r2
 8003bfc:	683a      	ldr	r2, [r7, #0]
 8003bfe:	429a      	cmp	r2, r3
 8003c00:	d911      	bls.n	8003c26 <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003c02:	4b5e      	ldr	r3, [pc, #376]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	2201      	movs	r2, #1
 8003c08:	4393      	bics	r3, r2
 8003c0a:	0019      	movs	r1, r3
 8003c0c:	4b5b      	ldr	r3, [pc, #364]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003c0e:	683a      	ldr	r2, [r7, #0]
 8003c10:	430a      	orrs	r2, r1
 8003c12:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003c14:	4b59      	ldr	r3, [pc, #356]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	2201      	movs	r2, #1
 8003c1a:	4013      	ands	r3, r2
 8003c1c:	683a      	ldr	r2, [r7, #0]
 8003c1e:	429a      	cmp	r2, r3
 8003c20:	d001      	beq.n	8003c26 <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8003c22:	2301      	movs	r3, #1
 8003c24:	e0a6      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	681b      	ldr	r3, [r3, #0]
 8003c2a:	2202      	movs	r2, #2
 8003c2c:	4013      	ands	r3, r2
 8003c2e:	d015      	beq.n	8003c5c <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	2204      	movs	r2, #4
 8003c36:	4013      	ands	r3, r2
 8003c38:	d006      	beq.n	8003c48 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003c3a:	4b51      	ldr	r3, [pc, #324]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003c3c:	685a      	ldr	r2, [r3, #4]
 8003c3e:	4b50      	ldr	r3, [pc, #320]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003c40:	21e0      	movs	r1, #224	; 0xe0
 8003c42:	00c9      	lsls	r1, r1, #3
 8003c44:	430a      	orrs	r2, r1
 8003c46:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003c48:	4b4d      	ldr	r3, [pc, #308]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003c4a:	685b      	ldr	r3, [r3, #4]
 8003c4c:	22f0      	movs	r2, #240	; 0xf0
 8003c4e:	4393      	bics	r3, r2
 8003c50:	0019      	movs	r1, r3
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	689a      	ldr	r2, [r3, #8]
 8003c56:	4b4a      	ldr	r3, [pc, #296]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003c58:	430a      	orrs	r2, r1
 8003c5a:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	2201      	movs	r2, #1
 8003c62:	4013      	ands	r3, r2
 8003c64:	d04c      	beq.n	8003d00 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	685b      	ldr	r3, [r3, #4]
 8003c6a:	2b01      	cmp	r3, #1
 8003c6c:	d107      	bne.n	8003c7e <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003c6e:	4b44      	ldr	r3, [pc, #272]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003c70:	681a      	ldr	r2, [r3, #0]
 8003c72:	2380      	movs	r3, #128	; 0x80
 8003c74:	029b      	lsls	r3, r3, #10
 8003c76:	4013      	ands	r3, r2
 8003c78:	d120      	bne.n	8003cbc <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 8003c7a:	2301      	movs	r3, #1
 8003c7c:	e07a      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	685b      	ldr	r3, [r3, #4]
 8003c82:	2b02      	cmp	r3, #2
 8003c84:	d107      	bne.n	8003c96 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003c86:	4b3e      	ldr	r3, [pc, #248]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003c88:	681a      	ldr	r2, [r3, #0]
 8003c8a:	2380      	movs	r3, #128	; 0x80
 8003c8c:	049b      	lsls	r3, r3, #18
 8003c8e:	4013      	ands	r3, r2
 8003c90:	d114      	bne.n	8003cbc <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 8003c92:	2301      	movs	r3, #1
 8003c94:	e06e      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
      }
    }
#if defined(RCC_CFGR_SWS_HSI48)
    /* HSI48 is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	685b      	ldr	r3, [r3, #4]
 8003c9a:	2b03      	cmp	r3, #3
 8003c9c:	d107      	bne.n	8003cae <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the HSI48 ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003c9e:	4b38      	ldr	r3, [pc, #224]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003ca0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003ca2:	2380      	movs	r3, #128	; 0x80
 8003ca4:	025b      	lsls	r3, r3, #9
 8003ca6:	4013      	ands	r3, r2
 8003ca8:	d108      	bne.n	8003cbc <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 8003caa:	2301      	movs	r3, #1
 8003cac:	e062      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003cae:	4b34      	ldr	r3, [pc, #208]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	2202      	movs	r2, #2
 8003cb4:	4013      	ands	r3, r2
 8003cb6:	d101      	bne.n	8003cbc <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 8003cb8:	2301      	movs	r3, #1
 8003cba:	e05b      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003cbc:	4b30      	ldr	r3, [pc, #192]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003cbe:	685b      	ldr	r3, [r3, #4]
 8003cc0:	2203      	movs	r2, #3
 8003cc2:	4393      	bics	r3, r2
 8003cc4:	0019      	movs	r1, r3
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	685a      	ldr	r2, [r3, #4]
 8003cca:	4b2d      	ldr	r3, [pc, #180]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003ccc:	430a      	orrs	r2, r1
 8003cce:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003cd0:	f7ff fb1e 	bl	8003310 <HAL_GetTick>
 8003cd4:	0003      	movs	r3, r0
 8003cd6:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003cd8:	e009      	b.n	8003cee <HAL_RCC_ClockConfig+0x10e>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003cda:	f7ff fb19 	bl	8003310 <HAL_GetTick>
 8003cde:	0002      	movs	r2, r0
 8003ce0:	68fb      	ldr	r3, [r7, #12]
 8003ce2:	1ad3      	subs	r3, r2, r3
 8003ce4:	4a27      	ldr	r2, [pc, #156]	; (8003d84 <HAL_RCC_ClockConfig+0x1a4>)
 8003ce6:	4293      	cmp	r3, r2
 8003ce8:	d901      	bls.n	8003cee <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8003cea:	2303      	movs	r3, #3
 8003cec:	e042      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003cee:	4b24      	ldr	r3, [pc, #144]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003cf0:	685b      	ldr	r3, [r3, #4]
 8003cf2:	220c      	movs	r2, #12
 8003cf4:	401a      	ands	r2, r3
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	685b      	ldr	r3, [r3, #4]
 8003cfa:	009b      	lsls	r3, r3, #2
 8003cfc:	429a      	cmp	r2, r3
 8003cfe:	d1ec      	bne.n	8003cda <HAL_RCC_ClockConfig+0xfa>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003d00:	4b1e      	ldr	r3, [pc, #120]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	2201      	movs	r2, #1
 8003d06:	4013      	ands	r3, r2
 8003d08:	683a      	ldr	r2, [r7, #0]
 8003d0a:	429a      	cmp	r2, r3
 8003d0c:	d211      	bcs.n	8003d32 <HAL_RCC_ClockConfig+0x152>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003d0e:	4b1b      	ldr	r3, [pc, #108]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	2201      	movs	r2, #1
 8003d14:	4393      	bics	r3, r2
 8003d16:	0019      	movs	r1, r3
 8003d18:	4b18      	ldr	r3, [pc, #96]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003d1a:	683a      	ldr	r2, [r7, #0]
 8003d1c:	430a      	orrs	r2, r1
 8003d1e:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003d20:	4b16      	ldr	r3, [pc, #88]	; (8003d7c <HAL_RCC_ClockConfig+0x19c>)
 8003d22:	681b      	ldr	r3, [r3, #0]
 8003d24:	2201      	movs	r2, #1
 8003d26:	4013      	ands	r3, r2
 8003d28:	683a      	ldr	r2, [r7, #0]
 8003d2a:	429a      	cmp	r2, r3
 8003d2c:	d001      	beq.n	8003d32 <HAL_RCC_ClockConfig+0x152>
    {
      return HAL_ERROR;
 8003d2e:	2301      	movs	r3, #1
 8003d30:	e020      	b.n	8003d74 <HAL_RCC_ClockConfig+0x194>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	2204      	movs	r2, #4
 8003d38:	4013      	ands	r3, r2
 8003d3a:	d009      	beq.n	8003d50 <HAL_RCC_ClockConfig+0x170>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003d3c:	4b10      	ldr	r3, [pc, #64]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003d3e:	685b      	ldr	r3, [r3, #4]
 8003d40:	4a11      	ldr	r2, [pc, #68]	; (8003d88 <HAL_RCC_ClockConfig+0x1a8>)
 8003d42:	4013      	ands	r3, r2
 8003d44:	0019      	movs	r1, r3
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	68da      	ldr	r2, [r3, #12]
 8003d4a:	4b0d      	ldr	r3, [pc, #52]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003d4c:	430a      	orrs	r2, r1
 8003d4e:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003d50:	f000 f820 	bl	8003d94 <HAL_RCC_GetSysClockFreq>
 8003d54:	0001      	movs	r1, r0
 8003d56:	4b0a      	ldr	r3, [pc, #40]	; (8003d80 <HAL_RCC_ClockConfig+0x1a0>)
 8003d58:	685b      	ldr	r3, [r3, #4]
 8003d5a:	091b      	lsrs	r3, r3, #4
 8003d5c:	220f      	movs	r2, #15
 8003d5e:	4013      	ands	r3, r2
 8003d60:	4a0a      	ldr	r2, [pc, #40]	; (8003d8c <HAL_RCC_ClockConfig+0x1ac>)
 8003d62:	5cd3      	ldrb	r3, [r2, r3]
 8003d64:	000a      	movs	r2, r1
 8003d66:	40da      	lsrs	r2, r3
 8003d68:	4b09      	ldr	r3, [pc, #36]	; (8003d90 <HAL_RCC_ClockConfig+0x1b0>)
 8003d6a:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8003d6c:	2000      	movs	r0, #0
 8003d6e:	f7ff fa89 	bl	8003284 <HAL_InitTick>
  
  return HAL_OK;
 8003d72:	2300      	movs	r3, #0
}
 8003d74:	0018      	movs	r0, r3
 8003d76:	46bd      	mov	sp, r7
 8003d78:	b004      	add	sp, #16
 8003d7a:	bd80      	pop	{r7, pc}
 8003d7c:	40022000 	.word	0x40022000
 8003d80:	40021000 	.word	0x40021000
 8003d84:	00001388 	.word	0x00001388
 8003d88:	fffff8ff 	.word	0xfffff8ff
 8003d8c:	080083e8 	.word	0x080083e8
 8003d90:	20000000 	.word	0x20000000

08003d94 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003d94:	b590      	push	{r4, r7, lr}
 8003d96:	b08f      	sub	sp, #60	; 0x3c
 8003d98:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8003d9a:	2314      	movs	r3, #20
 8003d9c:	18fb      	adds	r3, r7, r3
 8003d9e:	4a38      	ldr	r2, [pc, #224]	; (8003e80 <HAL_RCC_GetSysClockFreq+0xec>)
 8003da0:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003da2:	c313      	stmia	r3!, {r0, r1, r4}
 8003da4:	6812      	ldr	r2, [r2, #0]
 8003da6:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8003da8:	1d3b      	adds	r3, r7, #4
 8003daa:	4a36      	ldr	r2, [pc, #216]	; (8003e84 <HAL_RCC_GetSysClockFreq+0xf0>)
 8003dac:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003dae:	c313      	stmia	r3!, {r0, r1, r4}
 8003db0:	6812      	ldr	r2, [r2, #0]
 8003db2:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8003db4:	2300      	movs	r3, #0
 8003db6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003db8:	2300      	movs	r3, #0
 8003dba:	62bb      	str	r3, [r7, #40]	; 0x28
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	637b      	str	r3, [r7, #52]	; 0x34
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 8003dc4:	2300      	movs	r3, #0
 8003dc6:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 8003dc8:	4b2f      	ldr	r3, [pc, #188]	; (8003e88 <HAL_RCC_GetSysClockFreq+0xf4>)
 8003dca:	685b      	ldr	r3, [r3, #4]
 8003dcc:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003dce:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003dd0:	220c      	movs	r2, #12
 8003dd2:	4013      	ands	r3, r2
 8003dd4:	2b0c      	cmp	r3, #12
 8003dd6:	d047      	beq.n	8003e68 <HAL_RCC_GetSysClockFreq+0xd4>
 8003dd8:	d849      	bhi.n	8003e6e <HAL_RCC_GetSysClockFreq+0xda>
 8003dda:	2b04      	cmp	r3, #4
 8003ddc:	d002      	beq.n	8003de4 <HAL_RCC_GetSysClockFreq+0x50>
 8003dde:	2b08      	cmp	r3, #8
 8003de0:	d003      	beq.n	8003dea <HAL_RCC_GetSysClockFreq+0x56>
 8003de2:	e044      	b.n	8003e6e <HAL_RCC_GetSysClockFreq+0xda>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003de4:	4b29      	ldr	r3, [pc, #164]	; (8003e8c <HAL_RCC_GetSysClockFreq+0xf8>)
 8003de6:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003de8:	e044      	b.n	8003e74 <HAL_RCC_GetSysClockFreq+0xe0>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003dea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003dec:	0c9b      	lsrs	r3, r3, #18
 8003dee:	220f      	movs	r2, #15
 8003df0:	4013      	ands	r3, r2
 8003df2:	2214      	movs	r2, #20
 8003df4:	18ba      	adds	r2, r7, r2
 8003df6:	5cd3      	ldrb	r3, [r2, r3]
 8003df8:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003dfa:	4b23      	ldr	r3, [pc, #140]	; (8003e88 <HAL_RCC_GetSysClockFreq+0xf4>)
 8003dfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003dfe:	220f      	movs	r2, #15
 8003e00:	4013      	ands	r3, r2
 8003e02:	1d3a      	adds	r2, r7, #4
 8003e04:	5cd3      	ldrb	r3, [r2, r3]
 8003e06:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003e08:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003e0a:	23c0      	movs	r3, #192	; 0xc0
 8003e0c:	025b      	lsls	r3, r3, #9
 8003e0e:	401a      	ands	r2, r3
 8003e10:	2380      	movs	r3, #128	; 0x80
 8003e12:	025b      	lsls	r3, r3, #9
 8003e14:	429a      	cmp	r2, r3
 8003e16:	d109      	bne.n	8003e2c <HAL_RCC_GetSysClockFreq+0x98>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003e18:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003e1a:	481c      	ldr	r0, [pc, #112]	; (8003e8c <HAL_RCC_GetSysClockFreq+0xf8>)
 8003e1c:	f7fc f990 	bl	8000140 <__udivsi3>
 8003e20:	0003      	movs	r3, r0
 8003e22:	001a      	movs	r2, r3
 8003e24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e26:	4353      	muls	r3, r2
 8003e28:	637b      	str	r3, [r7, #52]	; 0x34
 8003e2a:	e01a      	b.n	8003e62 <HAL_RCC_GetSysClockFreq+0xce>
      }
#if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
      else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 8003e2c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003e2e:	23c0      	movs	r3, #192	; 0xc0
 8003e30:	025b      	lsls	r3, r3, #9
 8003e32:	401a      	ands	r2, r3
 8003e34:	23c0      	movs	r3, #192	; 0xc0
 8003e36:	025b      	lsls	r3, r3, #9
 8003e38:	429a      	cmp	r2, r3
 8003e3a:	d109      	bne.n	8003e50 <HAL_RCC_GetSysClockFreq+0xbc>
      {
        /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003e3c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003e3e:	4814      	ldr	r0, [pc, #80]	; (8003e90 <HAL_RCC_GetSysClockFreq+0xfc>)
 8003e40:	f7fc f97e 	bl	8000140 <__udivsi3>
 8003e44:	0003      	movs	r3, r0
 8003e46:	001a      	movs	r2, r3
 8003e48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e4a:	4353      	muls	r3, r2
 8003e4c:	637b      	str	r3, [r7, #52]	; 0x34
 8003e4e:	e008      	b.n	8003e62 <HAL_RCC_GetSysClockFreq+0xce>
#endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
      else
      {
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003e50:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003e52:	480e      	ldr	r0, [pc, #56]	; (8003e8c <HAL_RCC_GetSysClockFreq+0xf8>)
 8003e54:	f7fc f974 	bl	8000140 <__udivsi3>
 8003e58:	0003      	movs	r3, r0
 8003e5a:	001a      	movs	r2, r3
 8003e5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e5e:	4353      	muls	r3, r2
 8003e60:	637b      	str	r3, [r7, #52]	; 0x34
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
#endif
      }
      sysclockfreq = pllclk;
 8003e62:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003e64:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003e66:	e005      	b.n	8003e74 <HAL_RCC_GetSysClockFreq+0xe0>
    }
#if defined(RCC_CFGR_SWS_HSI48)
    case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
    {
      sysclockfreq = HSI48_VALUE;
 8003e68:	4b09      	ldr	r3, [pc, #36]	; (8003e90 <HAL_RCC_GetSysClockFreq+0xfc>)
 8003e6a:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003e6c:	e002      	b.n	8003e74 <HAL_RCC_GetSysClockFreq+0xe0>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8003e6e:	4b07      	ldr	r3, [pc, #28]	; (8003e8c <HAL_RCC_GetSysClockFreq+0xf8>)
 8003e70:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003e72:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8003e74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8003e76:	0018      	movs	r0, r3
 8003e78:	46bd      	mov	sp, r7
 8003e7a:	b00f      	add	sp, #60	; 0x3c
 8003e7c:	bd90      	pop	{r4, r7, pc}
 8003e7e:	46c0      	nop			; (mov r8, r8)
 8003e80:	08008288 	.word	0x08008288
 8003e84:	08008298 	.word	0x08008298
 8003e88:	40021000 	.word	0x40021000
 8003e8c:	007a1200 	.word	0x007a1200
 8003e90:	02dc6c00 	.word	0x02dc6c00

08003e94 <gpio_clk_en>:
		uint16_t out_max) {
	return (((x - in_min) * (out_max - out_min)) / ((in_max - in_min) + out_min));
}

/**********************Enable clock Function*************************************/
void gpio_clk_en(GPIO_TypeDef *port) {
 8003e94:	b580      	push	{r7, lr}
 8003e96:	b082      	sub	sp, #8
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	6078      	str	r0, [r7, #4]
	if (port == GPIOA) {
 8003e9c:	687a      	ldr	r2, [r7, #4]
 8003e9e:	2390      	movs	r3, #144	; 0x90
 8003ea0:	05db      	lsls	r3, r3, #23
 8003ea2:	429a      	cmp	r2, r3
 8003ea4:	d107      	bne.n	8003eb6 <gpio_clk_en+0x22>
		GPIOA_CLK_EN;
 8003ea6:	4b1b      	ldr	r3, [pc, #108]	; (8003f14 <gpio_clk_en+0x80>)
 8003ea8:	695a      	ldr	r2, [r3, #20]
 8003eaa:	4b1a      	ldr	r3, [pc, #104]	; (8003f14 <gpio_clk_en+0x80>)
 8003eac:	2180      	movs	r1, #128	; 0x80
 8003eae:	0289      	lsls	r1, r1, #10
 8003eb0:	430a      	orrs	r2, r1
 8003eb2:	615a      	str	r2, [r3, #20]
	} else if (port == GPIOD) {
		GPIOD_CLK_EN;
	} else {
		GPIOF_CLK_EN;
	}
}
 8003eb4:	e02a      	b.n	8003f0c <gpio_clk_en+0x78>
	} else if (port == GPIOB) {
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	4a17      	ldr	r2, [pc, #92]	; (8003f18 <gpio_clk_en+0x84>)
 8003eba:	4293      	cmp	r3, r2
 8003ebc:	d107      	bne.n	8003ece <gpio_clk_en+0x3a>
		GPIOB_CLK_EN;
 8003ebe:	4b15      	ldr	r3, [pc, #84]	; (8003f14 <gpio_clk_en+0x80>)
 8003ec0:	695a      	ldr	r2, [r3, #20]
 8003ec2:	4b14      	ldr	r3, [pc, #80]	; (8003f14 <gpio_clk_en+0x80>)
 8003ec4:	2180      	movs	r1, #128	; 0x80
 8003ec6:	02c9      	lsls	r1, r1, #11
 8003ec8:	430a      	orrs	r2, r1
 8003eca:	615a      	str	r2, [r3, #20]
}
 8003ecc:	e01e      	b.n	8003f0c <gpio_clk_en+0x78>
	} else if (port == GPIOC) {
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	4a12      	ldr	r2, [pc, #72]	; (8003f1c <gpio_clk_en+0x88>)
 8003ed2:	4293      	cmp	r3, r2
 8003ed4:	d107      	bne.n	8003ee6 <gpio_clk_en+0x52>
		GPIOC_CLK_EN;
 8003ed6:	4b0f      	ldr	r3, [pc, #60]	; (8003f14 <gpio_clk_en+0x80>)
 8003ed8:	695a      	ldr	r2, [r3, #20]
 8003eda:	4b0e      	ldr	r3, [pc, #56]	; (8003f14 <gpio_clk_en+0x80>)
 8003edc:	2180      	movs	r1, #128	; 0x80
 8003ede:	0309      	lsls	r1, r1, #12
 8003ee0:	430a      	orrs	r2, r1
 8003ee2:	615a      	str	r2, [r3, #20]
}
 8003ee4:	e012      	b.n	8003f0c <gpio_clk_en+0x78>
	} else if (port == GPIOD) {
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	4a0d      	ldr	r2, [pc, #52]	; (8003f20 <gpio_clk_en+0x8c>)
 8003eea:	4293      	cmp	r3, r2
 8003eec:	d107      	bne.n	8003efe <gpio_clk_en+0x6a>
		GPIOD_CLK_EN;
 8003eee:	4b09      	ldr	r3, [pc, #36]	; (8003f14 <gpio_clk_en+0x80>)
 8003ef0:	695a      	ldr	r2, [r3, #20]
 8003ef2:	4b08      	ldr	r3, [pc, #32]	; (8003f14 <gpio_clk_en+0x80>)
 8003ef4:	2180      	movs	r1, #128	; 0x80
 8003ef6:	0349      	lsls	r1, r1, #13
 8003ef8:	430a      	orrs	r2, r1
 8003efa:	615a      	str	r2, [r3, #20]
}
 8003efc:	e006      	b.n	8003f0c <gpio_clk_en+0x78>
		GPIOF_CLK_EN;
 8003efe:	4b05      	ldr	r3, [pc, #20]	; (8003f14 <gpio_clk_en+0x80>)
 8003f00:	695a      	ldr	r2, [r3, #20]
 8003f02:	4b04      	ldr	r3, [pc, #16]	; (8003f14 <gpio_clk_en+0x80>)
 8003f04:	2180      	movs	r1, #128	; 0x80
 8003f06:	03c9      	lsls	r1, r1, #15
 8003f08:	430a      	orrs	r2, r1
 8003f0a:	615a      	str	r2, [r3, #20]
}
 8003f0c:	46c0      	nop			; (mov r8, r8)
 8003f0e:	46bd      	mov	sp, r7
 8003f10:	b002      	add	sp, #8
 8003f12:	bd80      	pop	{r7, pc}
 8003f14:	40021000 	.word	0x40021000
 8003f18:	48000400 	.word	0x48000400
 8003f1c:	48000800 	.word	0x48000800
 8003f20:	48000c00 	.word	0x48000c00

08003f24 <gpio_config>:
/**********************************************************************************/

/********************GPIO Configuration Functions**********************************/
void gpio_config(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinMode,
		uint32_t pinSpeed, uint32_t pinPUPD, uint32_t PHPL_OD) {
 8003f24:	b580      	push	{r7, lr}
 8003f26:	b084      	sub	sp, #16
 8003f28:	af00      	add	r7, sp, #0
 8003f2a:	60f8      	str	r0, [r7, #12]
 8003f2c:	60b9      	str	r1, [r7, #8]
 8003f2e:	607a      	str	r2, [r7, #4]
 8003f30:	603b      	str	r3, [r7, #0]

	if (pinMode == OUTPUT_MODE) {
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	2b01      	cmp	r3, #1
 8003f36:	d11c      	bne.n	8003f72 <gpio_config+0x4e>
		gpio_clk_en(port);
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	0018      	movs	r0, r3
 8003f3c:	f7ff ffaa 	bl	8003e94 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003f40:	687a      	ldr	r2, [r7, #4]
 8003f42:	68b9      	ldr	r1, [r7, #8]
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	0018      	movs	r0, r3
 8003f48:	f000 f85a 	bl	8004000 <gpio_moder>
		gpio_speed(port, pinNumber, pinSpeed);
 8003f4c:	683a      	ldr	r2, [r7, #0]
 8003f4e:	68b9      	ldr	r1, [r7, #8]
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	0018      	movs	r0, r3
 8003f54:	f000 f86c 	bl	8004030 <gpio_speed>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003f58:	69ba      	ldr	r2, [r7, #24]
 8003f5a:	68b9      	ldr	r1, [r7, #8]
 8003f5c:	68fb      	ldr	r3, [r7, #12]
 8003f5e:	0018      	movs	r0, r3
 8003f60:	f000 f87e 	bl	8004060 <gpio_PUPD>
		gpio_PHPL_OD(port, pinNumber, PHPL_OD);
 8003f64:	69fa      	ldr	r2, [r7, #28]
 8003f66:	68b9      	ldr	r1, [r7, #8]
 8003f68:	68fb      	ldr	r3, [r7, #12]
 8003f6a:	0018      	movs	r0, r3
 8003f6c:	f000 f890 	bl	8004090 <gpio_PHPL_OD>
	} else if (pinMode == ANALOG_MODE) {
		gpio_clk_en(port);
		gpio_moder(port, pinNumber, pinMode);
		adc_chsel(port, pinNumber);
	}
}
 8003f70:	e041      	b.n	8003ff6 <gpio_config+0xd2>
	} else if (pinMode == INPUT_MODE) {
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	d110      	bne.n	8003f9a <gpio_config+0x76>
		gpio_clk_en(port);
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	0018      	movs	r0, r3
 8003f7c:	f7ff ff8a 	bl	8003e94 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003f80:	687a      	ldr	r2, [r7, #4]
 8003f82:	68b9      	ldr	r1, [r7, #8]
 8003f84:	68fb      	ldr	r3, [r7, #12]
 8003f86:	0018      	movs	r0, r3
 8003f88:	f000 f83a 	bl	8004000 <gpio_moder>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003f8c:	69ba      	ldr	r2, [r7, #24]
 8003f8e:	68b9      	ldr	r1, [r7, #8]
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	0018      	movs	r0, r3
 8003f94:	f000 f864 	bl	8004060 <gpio_PUPD>
}
 8003f98:	e02d      	b.n	8003ff6 <gpio_config+0xd2>
	} else if (pinMode == ALT_MODE) {
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	2b02      	cmp	r3, #2
 8003f9e:	d116      	bne.n	8003fce <gpio_config+0xaa>
		gpio_clk_en(port);
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	0018      	movs	r0, r3
 8003fa4:	f7ff ff76 	bl	8003e94 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003fa8:	687a      	ldr	r2, [r7, #4]
 8003faa:	68b9      	ldr	r1, [r7, #8]
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	0018      	movs	r0, r3
 8003fb0:	f000 f826 	bl	8004000 <gpio_moder>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003fb4:	69ba      	ldr	r2, [r7, #24]
 8003fb6:	68b9      	ldr	r1, [r7, #8]
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	0018      	movs	r0, r3
 8003fbc:	f000 f850 	bl	8004060 <gpio_PUPD>
		gpio_PHPL_OD(port, pinNumber, PHPL_OD);
 8003fc0:	69fa      	ldr	r2, [r7, #28]
 8003fc2:	68b9      	ldr	r1, [r7, #8]
 8003fc4:	68fb      	ldr	r3, [r7, #12]
 8003fc6:	0018      	movs	r0, r3
 8003fc8:	f000 f862 	bl	8004090 <gpio_PHPL_OD>
}
 8003fcc:	e013      	b.n	8003ff6 <gpio_config+0xd2>
	} else if (pinMode == ANALOG_MODE) {
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	2b03      	cmp	r3, #3
 8003fd2:	d110      	bne.n	8003ff6 <gpio_config+0xd2>
		gpio_clk_en(port);
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	0018      	movs	r0, r3
 8003fd8:	f7ff ff5c 	bl	8003e94 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003fdc:	687a      	ldr	r2, [r7, #4]
 8003fde:	68b9      	ldr	r1, [r7, #8]
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	0018      	movs	r0, r3
 8003fe4:	f000 f80c 	bl	8004000 <gpio_moder>
		adc_chsel(port, pinNumber);
 8003fe8:	68bb      	ldr	r3, [r7, #8]
 8003fea:	b29a      	uxth	r2, r3
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	0011      	movs	r1, r2
 8003ff0:	0018      	movs	r0, r3
 8003ff2:	f000 f8c1 	bl	8004178 <adc_chsel>
}
 8003ff6:	46c0      	nop			; (mov r8, r8)
 8003ff8:	46bd      	mov	sp, r7
 8003ffa:	b004      	add	sp, #16
 8003ffc:	bd80      	pop	{r7, pc}
	...

08004000 <gpio_moder>:

void gpio_moder(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinMode) {	// Config the mode
 8004000:	b580      	push	{r7, lr}
 8004002:	b084      	sub	sp, #16
 8004004:	af00      	add	r7, sp, #0
 8004006:	60f8      	str	r0, [r7, #12]
 8004008:	60b9      	str	r1, [r7, #8]
 800400a:	607a      	str	r2, [r7, #4]
	port->MODER |= (pinMode << (PINPOS_2B[pinNumber]));	// IN/OP/Alternate/ANALOG
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	681a      	ldr	r2, [r3, #0]
 8004010:	4b06      	ldr	r3, [pc, #24]	; (800402c <gpio_moder+0x2c>)
 8004012:	68b9      	ldr	r1, [r7, #8]
 8004014:	0089      	lsls	r1, r1, #2
 8004016:	58cb      	ldr	r3, [r1, r3]
 8004018:	6879      	ldr	r1, [r7, #4]
 800401a:	4099      	lsls	r1, r3
 800401c:	000b      	movs	r3, r1
 800401e:	431a      	orrs	r2, r3
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	601a      	str	r2, [r3, #0]
}
 8004024:	46c0      	nop			; (mov r8, r8)
 8004026:	46bd      	mov	sp, r7
 8004028:	b004      	add	sp, #16
 800402a:	bd80      	pop	{r7, pc}
 800402c:	2000000c 	.word	0x2000000c

08004030 <gpio_speed>:

void gpio_speed(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinSpeed) {// Config the speed
 8004030:	b580      	push	{r7, lr}
 8004032:	b084      	sub	sp, #16
 8004034:	af00      	add	r7, sp, #0
 8004036:	60f8      	str	r0, [r7, #12]
 8004038:	60b9      	str	r1, [r7, #8]
 800403a:	607a      	str	r2, [r7, #4]
	port->OSPEEDR |= (pinSpeed << PINPOS_2B[pinNumber]);		// LOW/MED/HIGH
 800403c:	68fb      	ldr	r3, [r7, #12]
 800403e:	689a      	ldr	r2, [r3, #8]
 8004040:	4b06      	ldr	r3, [pc, #24]	; (800405c <gpio_speed+0x2c>)
 8004042:	68b9      	ldr	r1, [r7, #8]
 8004044:	0089      	lsls	r1, r1, #2
 8004046:	58cb      	ldr	r3, [r1, r3]
 8004048:	6879      	ldr	r1, [r7, #4]
 800404a:	4099      	lsls	r1, r3
 800404c:	000b      	movs	r3, r1
 800404e:	431a      	orrs	r2, r3
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	609a      	str	r2, [r3, #8]
}
 8004054:	46c0      	nop			; (mov r8, r8)
 8004056:	46bd      	mov	sp, r7
 8004058:	b004      	add	sp, #16
 800405a:	bd80      	pop	{r7, pc}
 800405c:	2000000c 	.word	0x2000000c

08004060 <gpio_PUPD>:

void gpio_PUPD(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinPUPD) {// ENABLE/DISABLE
 8004060:	b580      	push	{r7, lr}
 8004062:	b084      	sub	sp, #16
 8004064:	af00      	add	r7, sp, #0
 8004066:	60f8      	str	r0, [r7, #12]
 8004068:	60b9      	str	r1, [r7, #8]
 800406a:	607a      	str	r2, [r7, #4]
	port->PUPDR |= (pinPUPD << PINPOS_2B[pinNumber]);		// PULL-UP/PULL-DOWN
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	68da      	ldr	r2, [r3, #12]
 8004070:	4b06      	ldr	r3, [pc, #24]	; (800408c <gpio_PUPD+0x2c>)
 8004072:	68b9      	ldr	r1, [r7, #8]
 8004074:	0089      	lsls	r1, r1, #2
 8004076:	58cb      	ldr	r3, [r1, r3]
 8004078:	6879      	ldr	r1, [r7, #4]
 800407a:	4099      	lsls	r1, r3
 800407c:	000b      	movs	r3, r1
 800407e:	431a      	orrs	r2, r3
 8004080:	68fb      	ldr	r3, [r7, #12]
 8004082:	60da      	str	r2, [r3, #12]
}
 8004084:	46c0      	nop			; (mov r8, r8)
 8004086:	46bd      	mov	sp, r7
 8004088:	b004      	add	sp, #16
 800408a:	bd80      	pop	{r7, pc}
 800408c:	2000000c 	.word	0x2000000c

08004090 <gpio_PHPL_OD>:
void gpio_PHPL_OD(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t PHPL_OD) {// ENABLE/DISABLE
 8004090:	b580      	push	{r7, lr}
 8004092:	b084      	sub	sp, #16
 8004094:	af00      	add	r7, sp, #0
 8004096:	60f8      	str	r0, [r7, #12]
 8004098:	60b9      	str	r1, [r7, #8]
 800409a:	607a      	str	r2, [r7, #4]
	port->OTYPER |= (PHPL_OD << pinNumber);	// PUSH-PULL/OPEN DRAIN
 800409c:	68fb      	ldr	r3, [r7, #12]
 800409e:	685a      	ldr	r2, [r3, #4]
 80040a0:	6879      	ldr	r1, [r7, #4]
 80040a2:	68bb      	ldr	r3, [r7, #8]
 80040a4:	4099      	lsls	r1, r3
 80040a6:	000b      	movs	r3, r1
 80040a8:	431a      	orrs	r2, r3
 80040aa:	68fb      	ldr	r3, [r7, #12]
 80040ac:	605a      	str	r2, [r3, #4]
}
 80040ae:	46c0      	nop			; (mov r8, r8)
 80040b0:	46bd      	mov	sp, r7
 80040b2:	b004      	add	sp, #16
 80040b4:	bd80      	pop	{r7, pc}

080040b6 <gpio_altfn>:

void gpio_altfn(GPIO_TypeDef *port, uint32_t pinNumber,
		uint32_t alternate_function) {
 80040b6:	b580      	push	{r7, lr}
 80040b8:	b084      	sub	sp, #16
 80040ba:	af00      	add	r7, sp, #0
 80040bc:	60f8      	str	r0, [r7, #12]
 80040be:	60b9      	str	r1, [r7, #8]
 80040c0:	607a      	str	r2, [r7, #4]
	if (pinNumber < 8) {
 80040c2:	68bb      	ldr	r3, [r7, #8]
 80040c4:	2b07      	cmp	r3, #7
 80040c6:	d80a      	bhi.n	80040de <gpio_altfn+0x28>
		port->AFR[0] |= (alternate_function << (4 * pinNumber));
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	6a1a      	ldr	r2, [r3, #32]
 80040cc:	68bb      	ldr	r3, [r7, #8]
 80040ce:	009b      	lsls	r3, r3, #2
 80040d0:	6879      	ldr	r1, [r7, #4]
 80040d2:	4099      	lsls	r1, r3
 80040d4:	000b      	movs	r3, r1
 80040d6:	431a      	orrs	r2, r3
 80040d8:	68fb      	ldr	r3, [r7, #12]
 80040da:	621a      	str	r2, [r3, #32]
	} else {
		port->AFR[1] |= (alternate_function << (4 * (pinNumber - 8)));
	}
}
 80040dc:	e00a      	b.n	80040f4 <gpio_altfn+0x3e>
		port->AFR[1] |= (alternate_function << (4 * (pinNumber - 8)));
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80040e2:	68bb      	ldr	r3, [r7, #8]
 80040e4:	3b08      	subs	r3, #8
 80040e6:	009b      	lsls	r3, r3, #2
 80040e8:	6879      	ldr	r1, [r7, #4]
 80040ea:	4099      	lsls	r1, r3
 80040ec:	000b      	movs	r3, r1
 80040ee:	431a      	orrs	r2, r3
 80040f0:	68fb      	ldr	r3, [r7, #12]
 80040f2:	625a      	str	r2, [r3, #36]	; 0x24
}
 80040f4:	46c0      	nop			; (mov r8, r8)
 80040f6:	46bd      	mov	sp, r7
 80040f8:	b004      	add	sp, #16
 80040fa:	bd80      	pop	{r7, pc}

080040fc <print>:

//*******************************************************************************************//

//************************** UART SERIAL PRINTING *******************************************//

void print(const char *fmt, ...) {
 80040fc:	b40f      	push	{r0, r1, r2, r3}
 80040fe:	b580      	push	{r7, lr}
 8004100:	b082      	sub	sp, #8
 8004102:	af00      	add	r7, sp, #0
	static char buffer[256];
	va_list args;
	va_start(args, fmt);
 8004104:	2314      	movs	r3, #20
 8004106:	18fb      	adds	r3, r7, r3
 8004108:	603b      	str	r3, [r7, #0]
	vsnprintf(buffer, sizeof(buffer), fmt, args);
 800410a:	683b      	ldr	r3, [r7, #0]
 800410c:	693a      	ldr	r2, [r7, #16]
 800410e:	2180      	movs	r1, #128	; 0x80
 8004110:	0049      	lsls	r1, r1, #1
 8004112:	480c      	ldr	r0, [pc, #48]	; (8004144 <print+0x48>)
 8004114:	f001 fd16 	bl	8005b44 <vsniprintf>
	va_end(args);

	uint16_t len = strlen(buffer);
 8004118:	4b0a      	ldr	r3, [pc, #40]	; (8004144 <print+0x48>)
 800411a:	0018      	movs	r0, r3
 800411c:	f7fb fff4 	bl	8000108 <strlen>
 8004120:	0002      	movs	r2, r0
 8004122:	1dbb      	adds	r3, r7, #6
 8004124:	801a      	strh	r2, [r3, #0]
//	for (uint8_t i = 0; i < len; i++) {
//		USART2->TDR = buffer[i];
//		while (!(USART2->ISR & USART_ISR_TXE))
//			;
//	}
	USART_WRITE(USART4, buffer, len);
 8004126:	1dbb      	adds	r3, r7, #6
 8004128:	881a      	ldrh	r2, [r3, #0]
 800412a:	4b06      	ldr	r3, [pc, #24]	; (8004144 <print+0x48>)
 800412c:	4806      	ldr	r0, [pc, #24]	; (8004148 <print+0x4c>)
 800412e:	0019      	movs	r1, r3
 8004130:	f000 fa62 	bl	80045f8 <USART_WRITE>

}
 8004134:	46c0      	nop			; (mov r8, r8)
 8004136:	46bd      	mov	sp, r7
 8004138:	b002      	add	sp, #8
 800413a:	bc80      	pop	{r7}
 800413c:	bc08      	pop	{r3}
 800413e:	b004      	add	sp, #16
 8004140:	4718      	bx	r3
 8004142:	46c0      	nop			; (mov r8, r8)
 8004144:	20000248 	.word	0x20000248
 8004148:	40004c00 	.word	0x40004c00

0800414c <TIM6_DAC_IRQHandler>:
	return ticks;
}
void ticks_reset() {
	ticks = 0;
}
void TIM6_IRQHandler(void) {		// Timer Interrupt helping in delay
 800414c:	b580      	push	{r7, lr}
 800414e:	af00      	add	r7, sp, #0
	ticks++;
 8004150:	4b07      	ldr	r3, [pc, #28]	; (8004170 <TIM6_DAC_IRQHandler+0x24>)
 8004152:	881b      	ldrh	r3, [r3, #0]
 8004154:	3301      	adds	r3, #1
 8004156:	b29a      	uxth	r2, r3
 8004158:	4b05      	ldr	r3, [pc, #20]	; (8004170 <TIM6_DAC_IRQHandler+0x24>)
 800415a:	801a      	strh	r2, [r3, #0]
	TIM6->SR &= ~TIM_SR_UIF;
 800415c:	4b05      	ldr	r3, [pc, #20]	; (8004174 <TIM6_DAC_IRQHandler+0x28>)
 800415e:	691a      	ldr	r2, [r3, #16]
 8004160:	4b04      	ldr	r3, [pc, #16]	; (8004174 <TIM6_DAC_IRQHandler+0x28>)
 8004162:	2101      	movs	r1, #1
 8004164:	438a      	bics	r2, r1
 8004166:	611a      	str	r2, [r3, #16]
}
 8004168:	46c0      	nop			; (mov r8, r8)
 800416a:	46bd      	mov	sp, r7
 800416c:	bd80      	pop	{r7, pc}
 800416e:	46c0      	nop			; (mov r8, r8)
 8004170:	20000244 	.word	0x20000244
 8004174:	40001000 	.word	0x40001000

08004178 <adc_chsel>:
	while ((ADC1->CR & ADC_CR_ADEN) != 0) /* (4) */
	{
		/* For robust implementation, add here time-out management */
	}
}
void adc_chsel(GPIO_TypeDef *port, uint16_t pin) {
 8004178:	b580      	push	{r7, lr}
 800417a:	b082      	sub	sp, #8
 800417c:	af00      	add	r7, sp, #0
 800417e:	6078      	str	r0, [r7, #4]
 8004180:	000a      	movs	r2, r1
 8004182:	1cbb      	adds	r3, r7, #2
 8004184:	801a      	strh	r2, [r3, #0]

	if (port == GPIOA) {
 8004186:	687a      	ldr	r2, [r7, #4]
 8004188:	2390      	movs	r3, #144	; 0x90
 800418a:	05db      	lsls	r3, r3, #23
 800418c:	429a      	cmp	r2, r3
 800418e:	d133      	bne.n	80041f8 <adc_chsel+0x80>
		switch (pin) {
 8004190:	1cbb      	adds	r3, r7, #2
 8004192:	881b      	ldrh	r3, [r3, #0]
 8004194:	2b07      	cmp	r3, #7
 8004196:	d900      	bls.n	800419a <adc_chsel+0x22>
 8004198:	e086      	b.n	80042a8 <adc_chsel+0x130>
 800419a:	009a      	lsls	r2, r3, #2
 800419c:	4b47      	ldr	r3, [pc, #284]	; (80042bc <adc_chsel+0x144>)
 800419e:	18d3      	adds	r3, r2, r3
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	469f      	mov	pc, r3
		case 0:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL0;
 80041a4:	4b46      	ldr	r3, [pc, #280]	; (80042c0 <adc_chsel+0x148>)
 80041a6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041a8:	4b45      	ldr	r3, [pc, #276]	; (80042c0 <adc_chsel+0x148>)
 80041aa:	2101      	movs	r1, #1
 80041ac:	430a      	orrs	r2, r1
 80041ae:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041b0:	e07f      	b.n	80042b2 <adc_chsel+0x13a>
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL1;
 80041b2:	4b43      	ldr	r3, [pc, #268]	; (80042c0 <adc_chsel+0x148>)
 80041b4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041b6:	4b42      	ldr	r3, [pc, #264]	; (80042c0 <adc_chsel+0x148>)
 80041b8:	2102      	movs	r1, #2
 80041ba:	430a      	orrs	r2, r1
 80041bc:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041be:	e078      	b.n	80042b2 <adc_chsel+0x13a>
		case 4:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL4;
 80041c0:	4b3f      	ldr	r3, [pc, #252]	; (80042c0 <adc_chsel+0x148>)
 80041c2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041c4:	4b3e      	ldr	r3, [pc, #248]	; (80042c0 <adc_chsel+0x148>)
 80041c6:	2110      	movs	r1, #16
 80041c8:	430a      	orrs	r2, r1
 80041ca:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041cc:	e071      	b.n	80042b2 <adc_chsel+0x13a>
		case 5:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL5;
 80041ce:	4b3c      	ldr	r3, [pc, #240]	; (80042c0 <adc_chsel+0x148>)
 80041d0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041d2:	4b3b      	ldr	r3, [pc, #236]	; (80042c0 <adc_chsel+0x148>)
 80041d4:	2120      	movs	r1, #32
 80041d6:	430a      	orrs	r2, r1
 80041d8:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041da:	e06a      	b.n	80042b2 <adc_chsel+0x13a>
		case 6:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL6;
 80041dc:	4b38      	ldr	r3, [pc, #224]	; (80042c0 <adc_chsel+0x148>)
 80041de:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041e0:	4b37      	ldr	r3, [pc, #220]	; (80042c0 <adc_chsel+0x148>)
 80041e2:	2140      	movs	r1, #64	; 0x40
 80041e4:	430a      	orrs	r2, r1
 80041e6:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041e8:	e063      	b.n	80042b2 <adc_chsel+0x13a>
		case 7:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL7;
 80041ea:	4b35      	ldr	r3, [pc, #212]	; (80042c0 <adc_chsel+0x148>)
 80041ec:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041ee:	4b34      	ldr	r3, [pc, #208]	; (80042c0 <adc_chsel+0x148>)
 80041f0:	2180      	movs	r1, #128	; 0x80
 80041f2:	430a      	orrs	r2, r1
 80041f4:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041f6:	e05c      	b.n	80042b2 <adc_chsel+0x13a>
		default:
			break;
		}
	} else if (port == GPIOB) {
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	4a32      	ldr	r2, [pc, #200]	; (80042c4 <adc_chsel+0x14c>)
 80041fc:	4293      	cmp	r3, r2
 80041fe:	d116      	bne.n	800422e <adc_chsel+0xb6>
		switch (pin) {
 8004200:	1cbb      	adds	r3, r7, #2
 8004202:	881b      	ldrh	r3, [r3, #0]
 8004204:	2b00      	cmp	r3, #0
 8004206:	d002      	beq.n	800420e <adc_chsel+0x96>
 8004208:	2b01      	cmp	r3, #1
 800420a:	d008      	beq.n	800421e <adc_chsel+0xa6>
			break;
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL9;
			break;
		default:
			break;
 800420c:	e051      	b.n	80042b2 <adc_chsel+0x13a>
			ADC1->CHSELR |= ADC_CHSELR_CHSEL8;
 800420e:	4b2c      	ldr	r3, [pc, #176]	; (80042c0 <adc_chsel+0x148>)
 8004210:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004212:	4b2b      	ldr	r3, [pc, #172]	; (80042c0 <adc_chsel+0x148>)
 8004214:	2180      	movs	r1, #128	; 0x80
 8004216:	0049      	lsls	r1, r1, #1
 8004218:	430a      	orrs	r2, r1
 800421a:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 800421c:	e049      	b.n	80042b2 <adc_chsel+0x13a>
			ADC1->CHSELR |= ADC_CHSELR_CHSEL9;
 800421e:	4b28      	ldr	r3, [pc, #160]	; (80042c0 <adc_chsel+0x148>)
 8004220:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004222:	4b27      	ldr	r3, [pc, #156]	; (80042c0 <adc_chsel+0x148>)
 8004224:	2180      	movs	r1, #128	; 0x80
 8004226:	0089      	lsls	r1, r1, #2
 8004228:	430a      	orrs	r2, r1
 800422a:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 800422c:	e041      	b.n	80042b2 <adc_chsel+0x13a>
		}
	} else if (port == GPIOC) {
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	4a25      	ldr	r2, [pc, #148]	; (80042c8 <adc_chsel+0x150>)
 8004232:	4293      	cmp	r3, r2
 8004234:	d13a      	bne.n	80042ac <adc_chsel+0x134>
		switch (pin) {
 8004236:	1cbb      	adds	r3, r7, #2
 8004238:	881b      	ldrh	r3, [r3, #0]
 800423a:	2b05      	cmp	r3, #5
 800423c:	d838      	bhi.n	80042b0 <adc_chsel+0x138>
 800423e:	009a      	lsls	r2, r3, #2
 8004240:	4b22      	ldr	r3, [pc, #136]	; (80042cc <adc_chsel+0x154>)
 8004242:	18d3      	adds	r3, r2, r3
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	469f      	mov	pc, r3
		case 0:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL10;
 8004248:	4b1d      	ldr	r3, [pc, #116]	; (80042c0 <adc_chsel+0x148>)
 800424a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800424c:	4b1c      	ldr	r3, [pc, #112]	; (80042c0 <adc_chsel+0x148>)
 800424e:	2180      	movs	r1, #128	; 0x80
 8004250:	00c9      	lsls	r1, r1, #3
 8004252:	430a      	orrs	r2, r1
 8004254:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004256:	e02c      	b.n	80042b2 <adc_chsel+0x13a>
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL11;
 8004258:	4b19      	ldr	r3, [pc, #100]	; (80042c0 <adc_chsel+0x148>)
 800425a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800425c:	4b18      	ldr	r3, [pc, #96]	; (80042c0 <adc_chsel+0x148>)
 800425e:	2180      	movs	r1, #128	; 0x80
 8004260:	0109      	lsls	r1, r1, #4
 8004262:	430a      	orrs	r2, r1
 8004264:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004266:	e024      	b.n	80042b2 <adc_chsel+0x13a>
		case 2:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL12;
 8004268:	4b15      	ldr	r3, [pc, #84]	; (80042c0 <adc_chsel+0x148>)
 800426a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800426c:	4b14      	ldr	r3, [pc, #80]	; (80042c0 <adc_chsel+0x148>)
 800426e:	2180      	movs	r1, #128	; 0x80
 8004270:	0149      	lsls	r1, r1, #5
 8004272:	430a      	orrs	r2, r1
 8004274:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004276:	e01c      	b.n	80042b2 <adc_chsel+0x13a>
		case 3:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL13;
 8004278:	4b11      	ldr	r3, [pc, #68]	; (80042c0 <adc_chsel+0x148>)
 800427a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800427c:	4b10      	ldr	r3, [pc, #64]	; (80042c0 <adc_chsel+0x148>)
 800427e:	2180      	movs	r1, #128	; 0x80
 8004280:	0189      	lsls	r1, r1, #6
 8004282:	430a      	orrs	r2, r1
 8004284:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004286:	e014      	b.n	80042b2 <adc_chsel+0x13a>
		case 4:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL14;
 8004288:	4b0d      	ldr	r3, [pc, #52]	; (80042c0 <adc_chsel+0x148>)
 800428a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800428c:	4b0c      	ldr	r3, [pc, #48]	; (80042c0 <adc_chsel+0x148>)
 800428e:	2180      	movs	r1, #128	; 0x80
 8004290:	01c9      	lsls	r1, r1, #7
 8004292:	430a      	orrs	r2, r1
 8004294:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004296:	e00c      	b.n	80042b2 <adc_chsel+0x13a>
		case 5:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL15;
 8004298:	4b09      	ldr	r3, [pc, #36]	; (80042c0 <adc_chsel+0x148>)
 800429a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800429c:	4b08      	ldr	r3, [pc, #32]	; (80042c0 <adc_chsel+0x148>)
 800429e:	2180      	movs	r1, #128	; 0x80
 80042a0:	0209      	lsls	r1, r1, #8
 80042a2:	430a      	orrs	r2, r1
 80042a4:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80042a6:	e004      	b.n	80042b2 <adc_chsel+0x13a>
			break;
 80042a8:	46c0      	nop			; (mov r8, r8)
 80042aa:	e002      	b.n	80042b2 <adc_chsel+0x13a>
		default:
			break;
		}
	}
 80042ac:	46c0      	nop			; (mov r8, r8)
 80042ae:	e000      	b.n	80042b2 <adc_chsel+0x13a>
			break;
 80042b0:	46c0      	nop			; (mov r8, r8)
}
 80042b2:	46c0      	nop			; (mov r8, r8)
 80042b4:	46bd      	mov	sp, r7
 80042b6:	b002      	add	sp, #8
 80042b8:	bd80      	pop	{r7, pc}
 80042ba:	46c0      	nop			; (mov r8, r8)
 80042bc:	080083f8 	.word	0x080083f8
 80042c0:	40012400 	.word	0x40012400
 80042c4:	48000400 	.word	0x48000400
 80042c8:	48000800 	.word	0x48000800
 80042cc:	08008418 	.word	0x08008418

080042d0 <USART_INIT>:

//*******************************| USART FUNCTIONS |*****************************//

void USART_INIT(USART_TypeDef *usart, GPIO_TypeDef *tx_port,
		GPIO_TypeDef *rx_port, uint32_t tx_pinNumber, uint32_t rx_pinNumber,
		uint32_t bd_rate) {
 80042d0:	b590      	push	{r4, r7, lr}
 80042d2:	b087      	sub	sp, #28
 80042d4:	af02      	add	r7, sp, #8
 80042d6:	60f8      	str	r0, [r7, #12]
 80042d8:	60b9      	str	r1, [r7, #8]
 80042da:	607a      	str	r2, [r7, #4]
 80042dc:	603b      	str	r3, [r7, #0]

	USART_CLK_EN(usart);
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	0018      	movs	r0, r3
 80042e2:	f000 f819 	bl	8004318 <USART_CLK_EN>

	USART_PIN_CONFIG(usart, tx_port, rx_port, tx_pinNumber, rx_pinNumber);
 80042e6:	683c      	ldr	r4, [r7, #0]
 80042e8:	687a      	ldr	r2, [r7, #4]
 80042ea:	68b9      	ldr	r1, [r7, #8]
 80042ec:	68f8      	ldr	r0, [r7, #12]
 80042ee:	6a3b      	ldr	r3, [r7, #32]
 80042f0:	9300      	str	r3, [sp, #0]
 80042f2:	0023      	movs	r3, r4
 80042f4:	f000 f852 	bl	800439c <USART_PIN_CONFIG>

	USART_BDR_SEL(usart, bd_rate);
 80042f8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80042fa:	68fb      	ldr	r3, [r7, #12]
 80042fc:	0011      	movs	r1, r2
 80042fe:	0018      	movs	r0, r3
 8004300:	f000 f960 	bl	80045c4 <USART_BDR_SEL>

	usart->CR1 |= USART_CR1_RE | USART_CR1_TE | USART_CR1_UE;
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	220d      	movs	r2, #13
 800430a:	431a      	orrs	r2, r3
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	601a      	str	r2, [r3, #0]

}
 8004310:	46c0      	nop			; (mov r8, r8)
 8004312:	46bd      	mov	sp, r7
 8004314:	b005      	add	sp, #20
 8004316:	bd90      	pop	{r4, r7, pc}

08004318 <USART_CLK_EN>:
	if (IDLE_IT) {
		usart->CR1 |= USART_CR1_IDLEIE;
	}
}
// Initialize UART pins, Baudrate
void USART_CLK_EN(USART_TypeDef *usart) {
 8004318:	b580      	push	{r7, lr}
 800431a:	b082      	sub	sp, #8
 800431c:	af00      	add	r7, sp, #0
 800431e:	6078      	str	r0, [r7, #4]
	if (usart == USART1) {
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	4a19      	ldr	r2, [pc, #100]	; (8004388 <USART_CLK_EN+0x70>)
 8004324:	4293      	cmp	r3, r2
 8004326:	d107      	bne.n	8004338 <USART_CLK_EN+0x20>
		USART1_CLK_EN;
 8004328:	4b18      	ldr	r3, [pc, #96]	; (800438c <USART_CLK_EN+0x74>)
 800432a:	69da      	ldr	r2, [r3, #28]
 800432c:	4b17      	ldr	r3, [pc, #92]	; (800438c <USART_CLK_EN+0x74>)
 800432e:	2180      	movs	r1, #128	; 0x80
 8004330:	01c9      	lsls	r1, r1, #7
 8004332:	430a      	orrs	r2, r1
 8004334:	61da      	str	r2, [r3, #28]
	} else if (usart == USART3) {
		USART3_CLK_EN;
	} else if (usart == USART4) {
		USART4_CLK_EN;
	}
}
 8004336:	e022      	b.n	800437e <USART_CLK_EN+0x66>
	} else if (usart == USART2) {
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	4a15      	ldr	r2, [pc, #84]	; (8004390 <USART_CLK_EN+0x78>)
 800433c:	4293      	cmp	r3, r2
 800433e:	d107      	bne.n	8004350 <USART_CLK_EN+0x38>
		USART2_CLK_EN;
 8004340:	4b12      	ldr	r3, [pc, #72]	; (800438c <USART_CLK_EN+0x74>)
 8004342:	69da      	ldr	r2, [r3, #28]
 8004344:	4b11      	ldr	r3, [pc, #68]	; (800438c <USART_CLK_EN+0x74>)
 8004346:	2180      	movs	r1, #128	; 0x80
 8004348:	0289      	lsls	r1, r1, #10
 800434a:	430a      	orrs	r2, r1
 800434c:	61da      	str	r2, [r3, #28]
}
 800434e:	e016      	b.n	800437e <USART_CLK_EN+0x66>
	} else if (usart == USART3) {
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	4a10      	ldr	r2, [pc, #64]	; (8004394 <USART_CLK_EN+0x7c>)
 8004354:	4293      	cmp	r3, r2
 8004356:	d107      	bne.n	8004368 <USART_CLK_EN+0x50>
		USART3_CLK_EN;
 8004358:	4b0c      	ldr	r3, [pc, #48]	; (800438c <USART_CLK_EN+0x74>)
 800435a:	69da      	ldr	r2, [r3, #28]
 800435c:	4b0b      	ldr	r3, [pc, #44]	; (800438c <USART_CLK_EN+0x74>)
 800435e:	2180      	movs	r1, #128	; 0x80
 8004360:	02c9      	lsls	r1, r1, #11
 8004362:	430a      	orrs	r2, r1
 8004364:	61da      	str	r2, [r3, #28]
}
 8004366:	e00a      	b.n	800437e <USART_CLK_EN+0x66>
	} else if (usart == USART4) {
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	4a0b      	ldr	r2, [pc, #44]	; (8004398 <USART_CLK_EN+0x80>)
 800436c:	4293      	cmp	r3, r2
 800436e:	d106      	bne.n	800437e <USART_CLK_EN+0x66>
		USART4_CLK_EN;
 8004370:	4b06      	ldr	r3, [pc, #24]	; (800438c <USART_CLK_EN+0x74>)
 8004372:	69da      	ldr	r2, [r3, #28]
 8004374:	4b05      	ldr	r3, [pc, #20]	; (800438c <USART_CLK_EN+0x74>)
 8004376:	2180      	movs	r1, #128	; 0x80
 8004378:	0309      	lsls	r1, r1, #12
 800437a:	430a      	orrs	r2, r1
 800437c:	61da      	str	r2, [r3, #28]
}
 800437e:	46c0      	nop			; (mov r8, r8)
 8004380:	46bd      	mov	sp, r7
 8004382:	b002      	add	sp, #8
 8004384:	bd80      	pop	{r7, pc}
 8004386:	46c0      	nop			; (mov r8, r8)
 8004388:	40013800 	.word	0x40013800
 800438c:	40021000 	.word	0x40021000
 8004390:	40004400 	.word	0x40004400
 8004394:	40004800 	.word	0x40004800
 8004398:	40004c00 	.word	0x40004c00

0800439c <USART_PIN_CONFIG>:

void USART_PIN_CONFIG(USART_TypeDef *usart, GPIO_TypeDef *tx_port,
		GPIO_TypeDef *rx_port, uint32_t tx_pinNumber, uint32_t rx_pinNumber) {
 800439c:	b580      	push	{r7, lr}
 800439e:	b086      	sub	sp, #24
 80043a0:	af02      	add	r7, sp, #8
 80043a2:	60f8      	str	r0, [r7, #12]
 80043a4:	60b9      	str	r1, [r7, #8]
 80043a6:	607a      	str	r2, [r7, #4]
 80043a8:	603b      	str	r3, [r7, #0]

	gpio_config(tx_port, tx_pinNumber, ALT_MODE, HIGH_SPEED, DI_PUPD, PHPL);
 80043aa:	6839      	ldr	r1, [r7, #0]
 80043ac:	68b8      	ldr	r0, [r7, #8]
 80043ae:	2300      	movs	r3, #0
 80043b0:	9301      	str	r3, [sp, #4]
 80043b2:	2300      	movs	r3, #0
 80043b4:	9300      	str	r3, [sp, #0]
 80043b6:	2302      	movs	r3, #2
 80043b8:	2202      	movs	r2, #2
 80043ba:	f7ff fdb3 	bl	8003f24 <gpio_config>
	gpio_config(rx_port, rx_pinNumber, ALT_MODE, HIGH_SPEED, DI_PUPD, PHPL);
 80043be:	69b9      	ldr	r1, [r7, #24]
 80043c0:	6878      	ldr	r0, [r7, #4]
 80043c2:	2300      	movs	r3, #0
 80043c4:	9301      	str	r3, [sp, #4]
 80043c6:	2300      	movs	r3, #0
 80043c8:	9300      	str	r3, [sp, #0]
 80043ca:	2302      	movs	r3, #2
 80043cc:	2202      	movs	r2, #2
 80043ce:	f7ff fda9 	bl	8003f24 <gpio_config>

	if (usart == USART1) {
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	4a75      	ldr	r2, [pc, #468]	; (80045ac <USART_PIN_CONFIG+0x210>)
 80043d6:	4293      	cmp	r3, r2
 80043d8:	d13a      	bne.n	8004450 <USART_PIN_CONFIG+0xb4>
		// TX
		if (tx_port == PORTA && tx_pinNumber == 9) {
 80043da:	68ba      	ldr	r2, [r7, #8]
 80043dc:	2390      	movs	r3, #144	; 0x90
 80043de:	05db      	lsls	r3, r3, #23
 80043e0:	429a      	cmp	r2, r3
 80043e2:	d109      	bne.n	80043f8 <USART_PIN_CONFIG+0x5c>
 80043e4:	683b      	ldr	r3, [r7, #0]
 80043e6:	2b09      	cmp	r3, #9
 80043e8:	d106      	bne.n	80043f8 <USART_PIN_CONFIG+0x5c>
			gpio_altfn(tx_port, tx_pinNumber, USART1_TX_PA9);
 80043ea:	6839      	ldr	r1, [r7, #0]
 80043ec:	68bb      	ldr	r3, [r7, #8]
 80043ee:	2201      	movs	r2, #1
 80043f0:	0018      	movs	r0, r3
 80043f2:	f7ff fe60 	bl	80040b6 <gpio_altfn>
 80043f6:	e00c      	b.n	8004412 <USART_PIN_CONFIG+0x76>
		} else if (tx_port == PORTB && tx_pinNumber == 6) {
 80043f8:	68bb      	ldr	r3, [r7, #8]
 80043fa:	4a6d      	ldr	r2, [pc, #436]	; (80045b0 <USART_PIN_CONFIG+0x214>)
 80043fc:	4293      	cmp	r3, r2
 80043fe:	d108      	bne.n	8004412 <USART_PIN_CONFIG+0x76>
 8004400:	683b      	ldr	r3, [r7, #0]
 8004402:	2b06      	cmp	r3, #6
 8004404:	d105      	bne.n	8004412 <USART_PIN_CONFIG+0x76>
			gpio_altfn(tx_port, tx_pinNumber, USART1_TX_PB6);
 8004406:	6839      	ldr	r1, [r7, #0]
 8004408:	68bb      	ldr	r3, [r7, #8]
 800440a:	2200      	movs	r2, #0
 800440c:	0018      	movs	r0, r3
 800440e:	f7ff fe52 	bl	80040b6 <gpio_altfn>
		}

		// RX
		if (rx_port == PORTA && rx_pinNumber == 10) {
 8004412:	687a      	ldr	r2, [r7, #4]
 8004414:	2390      	movs	r3, #144	; 0x90
 8004416:	05db      	lsls	r3, r3, #23
 8004418:	429a      	cmp	r2, r3
 800441a:	d109      	bne.n	8004430 <USART_PIN_CONFIG+0x94>
 800441c:	69bb      	ldr	r3, [r7, #24]
 800441e:	2b0a      	cmp	r3, #10
 8004420:	d106      	bne.n	8004430 <USART_PIN_CONFIG+0x94>
			gpio_altfn(rx_port, rx_pinNumber, USART1_RX_PA10);
 8004422:	69b9      	ldr	r1, [r7, #24]
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	2201      	movs	r2, #1
 8004428:	0018      	movs	r0, r3
 800442a:	f7ff fe44 	bl	80040b6 <gpio_altfn>
 800442e:	e0b8      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTB && rx_pinNumber == 7) {
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	4a5f      	ldr	r2, [pc, #380]	; (80045b0 <USART_PIN_CONFIG+0x214>)
 8004434:	4293      	cmp	r3, r2
 8004436:	d000      	beq.n	800443a <USART_PIN_CONFIG+0x9e>
 8004438:	e0b3      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
 800443a:	69bb      	ldr	r3, [r7, #24]
 800443c:	2b07      	cmp	r3, #7
 800443e:	d000      	beq.n	8004442 <USART_PIN_CONFIG+0xa6>
 8004440:	e0af      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART1_RX_PB7);
 8004442:	69b9      	ldr	r1, [r7, #24]
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	2200      	movs	r2, #0
 8004448:	0018      	movs	r0, r3
 800444a:	f7ff fe34 	bl	80040b6 <gpio_altfn>
		}
	} else if (usart == USART4) {
		gpio_altfn(tx_port, tx_pinNumber, USART4_TX_PA0);
		gpio_altfn(rx_port, rx_pinNumber, USART4_RX_PA1);
	}
}
 800444e:	e0a8      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
	} else if (usart == USART2) {
 8004450:	68fb      	ldr	r3, [r7, #12]
 8004452:	4a58      	ldr	r2, [pc, #352]	; (80045b4 <USART_PIN_CONFIG+0x218>)
 8004454:	4293      	cmp	r3, r2
 8004456:	d13c      	bne.n	80044d2 <USART_PIN_CONFIG+0x136>
		if (tx_port == PORTA && tx_pinNumber == 2) {
 8004458:	68ba      	ldr	r2, [r7, #8]
 800445a:	2390      	movs	r3, #144	; 0x90
 800445c:	05db      	lsls	r3, r3, #23
 800445e:	429a      	cmp	r2, r3
 8004460:	d109      	bne.n	8004476 <USART_PIN_CONFIG+0xda>
 8004462:	683b      	ldr	r3, [r7, #0]
 8004464:	2b02      	cmp	r3, #2
 8004466:	d106      	bne.n	8004476 <USART_PIN_CONFIG+0xda>
			gpio_altfn(tx_port, tx_pinNumber, USART2_TX_PA2);
 8004468:	6839      	ldr	r1, [r7, #0]
 800446a:	68bb      	ldr	r3, [r7, #8]
 800446c:	2201      	movs	r2, #1
 800446e:	0018      	movs	r0, r3
 8004470:	f7ff fe21 	bl	80040b6 <gpio_altfn>
 8004474:	e00d      	b.n	8004492 <USART_PIN_CONFIG+0xf6>
		} else if (tx_port == PORTA && tx_pinNumber == 14) {
 8004476:	68ba      	ldr	r2, [r7, #8]
 8004478:	2390      	movs	r3, #144	; 0x90
 800447a:	05db      	lsls	r3, r3, #23
 800447c:	429a      	cmp	r2, r3
 800447e:	d108      	bne.n	8004492 <USART_PIN_CONFIG+0xf6>
 8004480:	683b      	ldr	r3, [r7, #0]
 8004482:	2b0e      	cmp	r3, #14
 8004484:	d105      	bne.n	8004492 <USART_PIN_CONFIG+0xf6>
			gpio_altfn(tx_port, tx_pinNumber, USART2_TX_PA14);
 8004486:	6839      	ldr	r1, [r7, #0]
 8004488:	68bb      	ldr	r3, [r7, #8]
 800448a:	2201      	movs	r2, #1
 800448c:	0018      	movs	r0, r3
 800448e:	f7ff fe12 	bl	80040b6 <gpio_altfn>
		if (rx_port == PORTA && rx_pinNumber == 3) {
 8004492:	687a      	ldr	r2, [r7, #4]
 8004494:	2390      	movs	r3, #144	; 0x90
 8004496:	05db      	lsls	r3, r3, #23
 8004498:	429a      	cmp	r2, r3
 800449a:	d109      	bne.n	80044b0 <USART_PIN_CONFIG+0x114>
 800449c:	69bb      	ldr	r3, [r7, #24]
 800449e:	2b03      	cmp	r3, #3
 80044a0:	d106      	bne.n	80044b0 <USART_PIN_CONFIG+0x114>
			gpio_altfn(rx_port, rx_pinNumber, USART2_RX_PA3);
 80044a2:	69b9      	ldr	r1, [r7, #24]
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	2201      	movs	r2, #1
 80044a8:	0018      	movs	r0, r3
 80044aa:	f7ff fe04 	bl	80040b6 <gpio_altfn>
 80044ae:	e078      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTA && rx_pinNumber == 15) {
 80044b0:	687a      	ldr	r2, [r7, #4]
 80044b2:	2390      	movs	r3, #144	; 0x90
 80044b4:	05db      	lsls	r3, r3, #23
 80044b6:	429a      	cmp	r2, r3
 80044b8:	d000      	beq.n	80044bc <USART_PIN_CONFIG+0x120>
 80044ba:	e072      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
 80044bc:	69bb      	ldr	r3, [r7, #24]
 80044be:	2b0f      	cmp	r3, #15
 80044c0:	d000      	beq.n	80044c4 <USART_PIN_CONFIG+0x128>
 80044c2:	e06e      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART2_RX_PA15);
 80044c4:	69b9      	ldr	r1, [r7, #24]
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	2201      	movs	r2, #1
 80044ca:	0018      	movs	r0, r3
 80044cc:	f7ff fdf3 	bl	80040b6 <gpio_altfn>
}
 80044d0:	e067      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
	} else if (usart == USART3) {
 80044d2:	68fb      	ldr	r3, [r7, #12]
 80044d4:	4a38      	ldr	r2, [pc, #224]	; (80045b8 <USART_PIN_CONFIG+0x21c>)
 80044d6:	4293      	cmp	r3, r2
 80044d8:	d152      	bne.n	8004580 <USART_PIN_CONFIG+0x1e4>
		if (tx_port == PORTC && tx_pinNumber == 4) {
 80044da:	68bb      	ldr	r3, [r7, #8]
 80044dc:	4a37      	ldr	r2, [pc, #220]	; (80045bc <USART_PIN_CONFIG+0x220>)
 80044de:	4293      	cmp	r3, r2
 80044e0:	d109      	bne.n	80044f6 <USART_PIN_CONFIG+0x15a>
 80044e2:	683b      	ldr	r3, [r7, #0]
 80044e4:	2b04      	cmp	r3, #4
 80044e6:	d106      	bne.n	80044f6 <USART_PIN_CONFIG+0x15a>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PC4);
 80044e8:	6839      	ldr	r1, [r7, #0]
 80044ea:	68bb      	ldr	r3, [r7, #8]
 80044ec:	2201      	movs	r2, #1
 80044ee:	0018      	movs	r0, r3
 80044f0:	f7ff fde1 	bl	80040b6 <gpio_altfn>
 80044f4:	e01a      	b.n	800452c <USART_PIN_CONFIG+0x190>
		} else if (tx_port == PORTB && tx_pinNumber == 10) {
 80044f6:	68bb      	ldr	r3, [r7, #8]
 80044f8:	4a2d      	ldr	r2, [pc, #180]	; (80045b0 <USART_PIN_CONFIG+0x214>)
 80044fa:	4293      	cmp	r3, r2
 80044fc:	d109      	bne.n	8004512 <USART_PIN_CONFIG+0x176>
 80044fe:	683b      	ldr	r3, [r7, #0]
 8004500:	2b0a      	cmp	r3, #10
 8004502:	d106      	bne.n	8004512 <USART_PIN_CONFIG+0x176>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PB10);
 8004504:	6839      	ldr	r1, [r7, #0]
 8004506:	68bb      	ldr	r3, [r7, #8]
 8004508:	2204      	movs	r2, #4
 800450a:	0018      	movs	r0, r3
 800450c:	f7ff fdd3 	bl	80040b6 <gpio_altfn>
 8004510:	e00c      	b.n	800452c <USART_PIN_CONFIG+0x190>
		} else if (tx_port == PORTC && tx_pinNumber == 10) {
 8004512:	68bb      	ldr	r3, [r7, #8]
 8004514:	4a29      	ldr	r2, [pc, #164]	; (80045bc <USART_PIN_CONFIG+0x220>)
 8004516:	4293      	cmp	r3, r2
 8004518:	d108      	bne.n	800452c <USART_PIN_CONFIG+0x190>
 800451a:	683b      	ldr	r3, [r7, #0]
 800451c:	2b0a      	cmp	r3, #10
 800451e:	d105      	bne.n	800452c <USART_PIN_CONFIG+0x190>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PC10);
 8004520:	6839      	ldr	r1, [r7, #0]
 8004522:	68bb      	ldr	r3, [r7, #8]
 8004524:	2201      	movs	r2, #1
 8004526:	0018      	movs	r0, r3
 8004528:	f7ff fdc5 	bl	80040b6 <gpio_altfn>
		if (rx_port == PORTC && rx_pinNumber == 5) {
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	4a23      	ldr	r2, [pc, #140]	; (80045bc <USART_PIN_CONFIG+0x220>)
 8004530:	4293      	cmp	r3, r2
 8004532:	d109      	bne.n	8004548 <USART_PIN_CONFIG+0x1ac>
 8004534:	69bb      	ldr	r3, [r7, #24]
 8004536:	2b05      	cmp	r3, #5
 8004538:	d106      	bne.n	8004548 <USART_PIN_CONFIG+0x1ac>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PC5);
 800453a:	69b9      	ldr	r1, [r7, #24]
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	2201      	movs	r2, #1
 8004540:	0018      	movs	r0, r3
 8004542:	f7ff fdb8 	bl	80040b6 <gpio_altfn>
 8004546:	e02c      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTC && rx_pinNumber == 11) {
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	4a1c      	ldr	r2, [pc, #112]	; (80045bc <USART_PIN_CONFIG+0x220>)
 800454c:	4293      	cmp	r3, r2
 800454e:	d109      	bne.n	8004564 <USART_PIN_CONFIG+0x1c8>
 8004550:	69bb      	ldr	r3, [r7, #24]
 8004552:	2b0b      	cmp	r3, #11
 8004554:	d106      	bne.n	8004564 <USART_PIN_CONFIG+0x1c8>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PC11);
 8004556:	69b9      	ldr	r1, [r7, #24]
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	2201      	movs	r2, #1
 800455c:	0018      	movs	r0, r3
 800455e:	f7ff fdaa 	bl	80040b6 <gpio_altfn>
 8004562:	e01e      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTB && rx_pinNumber == 11) {
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	4a12      	ldr	r2, [pc, #72]	; (80045b0 <USART_PIN_CONFIG+0x214>)
 8004568:	4293      	cmp	r3, r2
 800456a:	d11a      	bne.n	80045a2 <USART_PIN_CONFIG+0x206>
 800456c:	69bb      	ldr	r3, [r7, #24]
 800456e:	2b0b      	cmp	r3, #11
 8004570:	d117      	bne.n	80045a2 <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PB11);
 8004572:	69b9      	ldr	r1, [r7, #24]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	2204      	movs	r2, #4
 8004578:	0018      	movs	r0, r3
 800457a:	f7ff fd9c 	bl	80040b6 <gpio_altfn>
}
 800457e:	e010      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
	} else if (usart == USART4) {
 8004580:	68fb      	ldr	r3, [r7, #12]
 8004582:	4a0f      	ldr	r2, [pc, #60]	; (80045c0 <USART_PIN_CONFIG+0x224>)
 8004584:	4293      	cmp	r3, r2
 8004586:	d10c      	bne.n	80045a2 <USART_PIN_CONFIG+0x206>
		gpio_altfn(tx_port, tx_pinNumber, USART4_TX_PA0);
 8004588:	6839      	ldr	r1, [r7, #0]
 800458a:	68bb      	ldr	r3, [r7, #8]
 800458c:	2204      	movs	r2, #4
 800458e:	0018      	movs	r0, r3
 8004590:	f7ff fd91 	bl	80040b6 <gpio_altfn>
		gpio_altfn(rx_port, rx_pinNumber, USART4_RX_PA1);
 8004594:	69b9      	ldr	r1, [r7, #24]
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	2204      	movs	r2, #4
 800459a:	0018      	movs	r0, r3
 800459c:	f7ff fd8b 	bl	80040b6 <gpio_altfn>
}
 80045a0:	e7ff      	b.n	80045a2 <USART_PIN_CONFIG+0x206>
 80045a2:	46c0      	nop			; (mov r8, r8)
 80045a4:	46bd      	mov	sp, r7
 80045a6:	b004      	add	sp, #16
 80045a8:	bd80      	pop	{r7, pc}
 80045aa:	46c0      	nop			; (mov r8, r8)
 80045ac:	40013800 	.word	0x40013800
 80045b0:	48000400 	.word	0x48000400
 80045b4:	40004400 	.word	0x40004400
 80045b8:	40004800 	.word	0x40004800
 80045bc:	48000800 	.word	0x48000800
 80045c0:	40004c00 	.word	0x40004c00

080045c4 <USART_BDR_SEL>:

void USART_BDR_SEL(USART_TypeDef *usart, uint32_t bd_rate) {
 80045c4:	b580      	push	{r7, lr}
 80045c6:	b084      	sub	sp, #16
 80045c8:	af00      	add	r7, sp, #0
 80045ca:	6078      	str	r0, [r7, #4]
 80045cc:	6039      	str	r1, [r7, #0]

//==============================================================//
// clkPer / (baudR x 16) = 48MHz / (9600 x 16) = 312.5 = 1388   //
//==============================================================//
	uint32_t baud = (uint32_t) (SystemCoreClock / bd_rate);
 80045ce:	4b09      	ldr	r3, [pc, #36]	; (80045f4 <USART_BDR_SEL+0x30>)
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	6839      	ldr	r1, [r7, #0]
 80045d4:	0018      	movs	r0, r3
 80045d6:	f7fb fdb3 	bl	8000140 <__udivsi3>
 80045da:	0003      	movs	r3, r0
 80045dc:	60fb      	str	r3, [r7, #12]
	usart->BRR |= baud;
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	68da      	ldr	r2, [r3, #12]
 80045e2:	68fb      	ldr	r3, [r7, #12]
 80045e4:	431a      	orrs	r2, r3
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	60da      	str	r2, [r3, #12]
}
 80045ea:	46c0      	nop			; (mov r8, r8)
 80045ec:	46bd      	mov	sp, r7
 80045ee:	b004      	add	sp, #16
 80045f0:	bd80      	pop	{r7, pc}
 80045f2:	46c0      	nop			; (mov r8, r8)
 80045f4:	20000000 	.word	0x20000000

080045f8 <USART_WRITE>:

/* Write a character to USART1 */
void USART_WRITE(USART_TypeDef *usart, uint8_t *ch, uint32_t len) {
 80045f8:	b580      	push	{r7, lr}
 80045fa:	b086      	sub	sp, #24
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	60f8      	str	r0, [r7, #12]
 8004600:	60b9      	str	r1, [r7, #8]
 8004602:	607a      	str	r2, [r7, #4]
	for (uint8_t i = 0; i < len; i++) {
 8004604:	2317      	movs	r3, #23
 8004606:	18fb      	adds	r3, r7, r3
 8004608:	2200      	movs	r2, #0
 800460a:	701a      	strb	r2, [r3, #0]
 800460c:	e01c      	b.n	8004648 <USART_WRITE+0x50>
		if (len == 1) {
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	2b01      	cmp	r3, #1
 8004612:	d104      	bne.n	800461e <USART_WRITE+0x26>
			usart->TDR = ch;
 8004614:	68bb      	ldr	r3, [r7, #8]
 8004616:	b29a      	uxth	r2, r3
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	851a      	strh	r2, [r3, #40]	; 0x28
 800461c:	e008      	b.n	8004630 <USART_WRITE+0x38>
		} else {
			usart->TDR = ch[i];
 800461e:	2317      	movs	r3, #23
 8004620:	18fb      	adds	r3, r7, r3
 8004622:	781b      	ldrb	r3, [r3, #0]
 8004624:	68ba      	ldr	r2, [r7, #8]
 8004626:	18d3      	adds	r3, r2, r3
 8004628:	781b      	ldrb	r3, [r3, #0]
 800462a:	b29a      	uxth	r2, r3
 800462c:	68fb      	ldr	r3, [r7, #12]
 800462e:	851a      	strh	r2, [r3, #40]	; 0x28
		}
		while (!(usart->ISR & USART_ISR_TXE))
 8004630:	46c0      	nop			; (mov r8, r8)
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	69db      	ldr	r3, [r3, #28]
 8004636:	2280      	movs	r2, #128	; 0x80
 8004638:	4013      	ands	r3, r2
 800463a:	d0fa      	beq.n	8004632 <USART_WRITE+0x3a>
	for (uint8_t i = 0; i < len; i++) {
 800463c:	2117      	movs	r1, #23
 800463e:	187b      	adds	r3, r7, r1
 8004640:	781a      	ldrb	r2, [r3, #0]
 8004642:	187b      	adds	r3, r7, r1
 8004644:	3201      	adds	r2, #1
 8004646:	701a      	strb	r2, [r3, #0]
 8004648:	2317      	movs	r3, #23
 800464a:	18fb      	adds	r3, r7, r3
 800464c:	781b      	ldrb	r3, [r3, #0]
 800464e:	687a      	ldr	r2, [r7, #4]
 8004650:	429a      	cmp	r2, r3
 8004652:	d8dc      	bhi.n	800460e <USART_WRITE+0x16>
			;
	}
}
 8004654:	46c0      	nop			; (mov r8, r8)
 8004656:	46c0      	nop			; (mov r8, r8)
 8004658:	46bd      	mov	sp, r7
 800465a:	b006      	add	sp, #24
 800465c:	bd80      	pop	{r7, pc}

0800465e <RCC_CONFIG_48MHZ>:
}

//*******************************************************************************//

//*****************************| RCC CLOCK FUNCTION |****************************//
void RCC_CONFIG_48MHZ() {
 800465e:	b590      	push	{r4, r7, lr}
 8004660:	b093      	sub	sp, #76	; 0x4c
 8004662:	af00      	add	r7, sp, #0
//	}
//
//	SystemCoreClockUpdate();
//	SysTick_Config(SystemCoreClock/1000);

	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8004664:	2414      	movs	r4, #20
 8004666:	193b      	adds	r3, r7, r4
 8004668:	0018      	movs	r0, r3
 800466a:	2334      	movs	r3, #52	; 0x34
 800466c:	001a      	movs	r2, r3
 800466e:	2100      	movs	r1, #0
 8004670:	f000 fdc6 	bl	8005200 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8004674:	1d3b      	adds	r3, r7, #4
 8004676:	0018      	movs	r0, r3
 8004678:	2310      	movs	r3, #16
 800467a:	001a      	movs	r2, r3
 800467c:	2100      	movs	r1, #0
 800467e:	f000 fdbf 	bl	8005200 <memset>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48;
 8004682:	193b      	adds	r3, r7, r4
 8004684:	2220      	movs	r2, #32
 8004686:	601a      	str	r2, [r3, #0]
	RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 8004688:	193b      	adds	r3, r7, r4
 800468a:	2201      	movs	r2, #1
 800468c:	621a      	str	r2, [r3, #32]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800468e:	193b      	adds	r3, r7, r4
 8004690:	2200      	movs	r2, #0
 8004692:	625a      	str	r2, [r3, #36]	; 0x24
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8004694:	193b      	adds	r3, r7, r4
 8004696:	0018      	movs	r0, r3
 8004698:	f7fe ff1c 	bl	80034d4 <HAL_RCC_OscConfig>
 800469c:	1e03      	subs	r3, r0, #0
 800469e:	d000      	beq.n	80046a2 <RCC_CONFIG_48MHZ+0x44>
//	    Error_Handler();
//		print("Error in CLK func(1)");
//		USART_WRITE(USART2, "Error in CLK func(1)\n", 21);
		while (1)
 80046a0:	e7fe      	b.n	80046a0 <RCC_CONFIG_48MHZ+0x42>
			;
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80046a2:	1d3b      	adds	r3, r7, #4
 80046a4:	2207      	movs	r2, #7
 80046a6:	601a      	str	r2, [r3, #0]
			| RCC_CLOCKTYPE_PCLK1;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 80046a8:	1d3b      	adds	r3, r7, #4
 80046aa:	2203      	movs	r2, #3
 80046ac:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80046ae:	1d3b      	adds	r3, r7, #4
 80046b0:	2200      	movs	r2, #0
 80046b2:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80046b4:	1d3b      	adds	r3, r7, #4
 80046b6:	2200      	movs	r2, #0
 80046b8:	60da      	str	r2, [r3, #12]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 80046ba:	1d3b      	adds	r3, r7, #4
 80046bc:	2101      	movs	r1, #1
 80046be:	0018      	movs	r0, r3
 80046c0:	f7ff fa8e 	bl	8003be0 <HAL_RCC_ClockConfig>
 80046c4:	1e03      	subs	r3, r0, #0
 80046c6:	d000      	beq.n	80046ca <RCC_CONFIG_48MHZ+0x6c>
//	    Error_Handler();
//		print("Error in CLK func(2)");
//		USART_WRITE(USART2, "Error in CLK func(2)\n", 21);
		while (1)
 80046c8:	e7fe      	b.n	80046c8 <RCC_CONFIG_48MHZ+0x6a>
			;
	}
}
 80046ca:	46c0      	nop			; (mov r8, r8)
 80046cc:	46bd      	mov	sp, r7
 80046ce:	b013      	add	sp, #76	; 0x4c
 80046d0:	bd90      	pop	{r4, r7, pc}

080046d2 <I2C_EN>:
 *  Created on: Oct 23, 2022
 *      Author: hp
 */
#include "i2c.h"

void I2C_EN(I2C_TypeDef *i2c) {
 80046d2:	b580      	push	{r7, lr}
 80046d4:	b082      	sub	sp, #8
 80046d6:	af00      	add	r7, sp, #0
 80046d8:	6078      	str	r0, [r7, #4]
	i2c->CR1 |= I2C_CR1_PE;
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	2201      	movs	r2, #1
 80046e0:	431a      	orrs	r2, r3
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	601a      	str	r2, [r3, #0]
}
 80046e6:	46c0      	nop			; (mov r8, r8)
 80046e8:	46bd      	mov	sp, r7
 80046ea:	b002      	add	sp, #8
 80046ec:	bd80      	pop	{r7, pc}

080046ee <I2C_DI>:

void I2C_DI(I2C_TypeDef *i2c) {
 80046ee:	b580      	push	{r7, lr}
 80046f0:	b082      	sub	sp, #8
 80046f2:	af00      	add	r7, sp, #0
 80046f4:	6078      	str	r0, [r7, #4]
	i2c->CR1 &= ~I2C_CR1_PE;
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	2201      	movs	r2, #1
 80046fc:	4393      	bics	r3, r2
 80046fe:	001a      	movs	r2, r3
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	601a      	str	r2, [r3, #0]
}
 8004704:	46c0      	nop			; (mov r8, r8)
 8004706:	46bd      	mov	sp, r7
 8004708:	b002      	add	sp, #8
 800470a:	bd80      	pop	{r7, pc}

0800470c <I2C_INIT>:

void I2C_INIT(I2C_TypeDef *i2c, uint32_t timing) {
 800470c:	b580      	push	{r7, lr}
 800470e:	b082      	sub	sp, #8
 8004710:	af00      	add	r7, sp, #0
 8004712:	6078      	str	r0, [r7, #4]
 8004714:	6039      	str	r1, [r7, #0]
	if (i2c == I2C1) {
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	4a11      	ldr	r2, [pc, #68]	; (8004760 <I2C_INIT+0x54>)
 800471a:	4293      	cmp	r3, r2
 800471c:	d107      	bne.n	800472e <I2C_INIT+0x22>
		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 800471e:	4b11      	ldr	r3, [pc, #68]	; (8004764 <I2C_INIT+0x58>)
 8004720:	69da      	ldr	r2, [r3, #28]
 8004722:	4b10      	ldr	r3, [pc, #64]	; (8004764 <I2C_INIT+0x58>)
 8004724:	2180      	movs	r1, #128	; 0x80
 8004726:	0389      	lsls	r1, r1, #14
 8004728:	430a      	orrs	r2, r1
 800472a:	61da      	str	r2, [r3, #28]
 800472c:	e00a      	b.n	8004744 <I2C_INIT+0x38>
	} else if (i2c == I2C2) {
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	4a0d      	ldr	r2, [pc, #52]	; (8004768 <I2C_INIT+0x5c>)
 8004732:	4293      	cmp	r3, r2
 8004734:	d106      	bne.n	8004744 <I2C_INIT+0x38>
		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 8004736:	4b0b      	ldr	r3, [pc, #44]	; (8004764 <I2C_INIT+0x58>)
 8004738:	69da      	ldr	r2, [r3, #28]
 800473a:	4b0a      	ldr	r3, [pc, #40]	; (8004764 <I2C_INIT+0x58>)
 800473c:	2180      	movs	r1, #128	; 0x80
 800473e:	03c9      	lsls	r1, r1, #15
 8004740:	430a      	orrs	r2, r1
 8004742:	61da      	str	r2, [r3, #28]
	}
	i2c->CR1 = 0; /* software reset I2C1 */
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	2200      	movs	r2, #0
 8004748:	601a      	str	r2, [r3, #0]
	i2c->TIMINGR = timing; /* 100 KHz, peripheral clock is 8/48 MHz */
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	683a      	ldr	r2, [r7, #0]
 800474e:	611a      	str	r2, [r3, #16]
	I2C_EN(i2c);
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	0018      	movs	r0, r3
 8004754:	f7ff ffbd 	bl	80046d2 <I2C_EN>
}
 8004758:	46c0      	nop			; (mov r8, r8)
 800475a:	46bd      	mov	sp, r7
 800475c:	b002      	add	sp, #8
 800475e:	bd80      	pop	{r7, pc}
 8004760:	40005400 	.word	0x40005400
 8004764:	40021000 	.word	0x40021000
 8004768:	40005800 	.word	0x40005800

0800476c <I2C_CR2>:
	} else if (i2c == I2C2) {
		RCC->APB1ENR &= ~RCC_APB1ENR_I2C2EN;
	}
}

void I2C_CR2(I2C_TypeDef *i2c, uint32_t val) {
 800476c:	b580      	push	{r7, lr}
 800476e:	b082      	sub	sp, #8
 8004770:	af00      	add	r7, sp, #0
 8004772:	6078      	str	r0, [r7, #4]
 8004774:	6039      	str	r1, [r7, #0]
	i2c->CR2 = val;
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	683a      	ldr	r2, [r7, #0]
 800477a:	605a      	str	r2, [r3, #4]
}
 800477c:	46c0      	nop			; (mov r8, r8)
 800477e:	46bd      	mov	sp, r7
 8004780:	b002      	add	sp, #8
 8004782:	bd80      	pop	{r7, pc}

08004784 <I2C_DeviceReady>:

BML_StatusTypeDef I2C_DeviceReady(I2C_TypeDef *i2c, uint8_t saddr,
		uint16_t timeout) {
 8004784:	b580      	push	{r7, lr}
 8004786:	b084      	sub	sp, #16
 8004788:	af00      	add	r7, sp, #0
 800478a:	6078      	str	r0, [r7, #4]
 800478c:	0008      	movs	r0, r1
 800478e:	0011      	movs	r1, r2
 8004790:	1cfb      	adds	r3, r7, #3
 8004792:	1c02      	adds	r2, r0, #0
 8004794:	701a      	strb	r2, [r3, #0]
 8004796:	003b      	movs	r3, r7
 8004798:	1c0a      	adds	r2, r1, #0
 800479a:	801a      	strh	r2, [r3, #0]
	uint16_t i = timeout;
 800479c:	230e      	movs	r3, #14
 800479e:	18fb      	adds	r3, r7, r3
 80047a0:	003a      	movs	r2, r7
 80047a2:	8812      	ldrh	r2, [r2, #0]
 80047a4:	801a      	strh	r2, [r3, #0]
	uint8_t flag = 0;
 80047a6:	230d      	movs	r3, #13
 80047a8:	18fb      	adds	r3, r7, r3
 80047aa:	2200      	movs	r2, #0
 80047ac:	701a      	strb	r2, [r3, #0]
	while (i2c->ISR & I2C_ISR_BUSY) {/* wait until bus not busy */
 80047ae:	e00e      	b.n	80047ce <I2C_DeviceReady+0x4a>
		I2C_Delay(1);
 80047b0:	2001      	movs	r0, #1
 80047b2:	f7fe fdb7 	bl	8003324 <HAL_Delay>
		i--;
 80047b6:	210e      	movs	r1, #14
 80047b8:	187b      	adds	r3, r7, r1
 80047ba:	881a      	ldrh	r2, [r3, #0]
 80047bc:	187b      	adds	r3, r7, r1
 80047be:	3a01      	subs	r2, #1
 80047c0:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 80047c2:	187b      	adds	r3, r7, r1
 80047c4:	881b      	ldrh	r3, [r3, #0]
 80047c6:	2b00      	cmp	r3, #0
 80047c8:	d101      	bne.n	80047ce <I2C_DeviceReady+0x4a>
			return BML_BUSY;
 80047ca:	2302      	movs	r3, #2
 80047cc:	e035      	b.n	800483a <I2C_DeviceReady+0xb6>
	while (i2c->ISR & I2C_ISR_BUSY) {/* wait until bus not busy */
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	699a      	ldr	r2, [r3, #24]
 80047d2:	2380      	movs	r3, #128	; 0x80
 80047d4:	021b      	lsls	r3, r3, #8
 80047d6:	4013      	ands	r3, r2
 80047d8:	d1ea      	bne.n	80047b0 <I2C_DeviceReady+0x2c>
		}
	}
	I2C_CR2(i2c, I2C_CR2_START | (saddr << 1));
 80047da:	1cfb      	adds	r3, r7, #3
 80047dc:	781b      	ldrb	r3, [r3, #0]
 80047de:	005b      	lsls	r3, r3, #1
 80047e0:	001a      	movs	r2, r3
 80047e2:	2380      	movs	r3, #128	; 0x80
 80047e4:	019b      	lsls	r3, r3, #6
 80047e6:	431a      	orrs	r2, r3
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	0011      	movs	r1, r2
 80047ec:	0018      	movs	r0, r3
 80047ee:	f7ff ffbd 	bl	800476c <I2C_CR2>

	I2C_Delay(1);
 80047f2:	2001      	movs	r0, #1
 80047f4:	f7fe fd96 	bl	8003324 <HAL_Delay>

	if (!(i2c->ISR & I2C_ISR_NACKF)) {
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	699b      	ldr	r3, [r3, #24]
 80047fc:	2210      	movs	r2, #16
 80047fe:	4013      	ands	r3, r2
 8004800:	d104      	bne.n	800480c <I2C_DeviceReady+0x88>
		flag = 1;
 8004802:	230d      	movs	r3, #13
 8004804:	18fb      	adds	r3, r7, r3
 8004806:	2201      	movs	r2, #1
 8004808:	701a      	strb	r2, [r3, #0]
 800480a:	e003      	b.n	8004814 <I2C_DeviceReady+0x90>
	} else {
		flag = 0;
 800480c:	230d      	movs	r3, #13
 800480e:	18fb      	adds	r3, r7, r3
 8004810:	2200      	movs	r2, #0
 8004812:	701a      	strb	r2, [r3, #0]
	}

	i2c->CR2 = 0;
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	2200      	movs	r2, #0
 8004818:	605a      	str	r2, [r3, #4]
	I2C_DI(i2c);
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	0018      	movs	r0, r3
 800481e:	f7ff ff66 	bl	80046ee <I2C_DI>
	I2C_EN(i2c);
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	0018      	movs	r0, r3
 8004826:	f7ff ff54 	bl	80046d2 <I2C_EN>
	if (flag == LOW) {
 800482a:	230d      	movs	r3, #13
 800482c:	18fb      	adds	r3, r7, r3
 800482e:	781b      	ldrb	r3, [r3, #0]
 8004830:	2b00      	cmp	r3, #0
 8004832:	d101      	bne.n	8004838 <I2C_DeviceReady+0xb4>
		return BML_ERROR;
 8004834:	2301      	movs	r3, #1
 8004836:	e000      	b.n	800483a <I2C_DeviceReady+0xb6>
	}
	return BML_OK;
 8004838:	2300      	movs	r3, #0
}
 800483a:	0018      	movs	r0, r3
 800483c:	46bd      	mov	sp, r7
 800483e:	b004      	add	sp, #16
 8004840:	bd80      	pop	{r7, pc}
	...

08004844 <I2C_MasterMultiWrite>:

	return BML_OK;
}

BML_StatusTypeDef I2C_MasterMultiWrite(I2C_TypeDef *i2c, uint8_t saddr,
		uint8_t maddr, uint32_t n, uint8_t *data, uint16_t timeout) {
 8004844:	b580      	push	{r7, lr}
 8004846:	b086      	sub	sp, #24
 8004848:	af00      	add	r7, sp, #0
 800484a:	60f8      	str	r0, [r7, #12]
 800484c:	0008      	movs	r0, r1
 800484e:	0011      	movs	r1, r2
 8004850:	607b      	str	r3, [r7, #4]
 8004852:	230b      	movs	r3, #11
 8004854:	18fb      	adds	r3, r7, r3
 8004856:	1c02      	adds	r2, r0, #0
 8004858:	701a      	strb	r2, [r3, #0]
 800485a:	230a      	movs	r3, #10
 800485c:	18fb      	adds	r3, r7, r3
 800485e:	1c0a      	adds	r2, r1, #0
 8004860:	701a      	strb	r2, [r3, #0]
	int x;
	uint16_t i = timeout;
 8004862:	2312      	movs	r3, #18
 8004864:	18fb      	adds	r3, r7, r3
 8004866:	2224      	movs	r2, #36	; 0x24
 8004868:	18ba      	adds	r2, r7, r2
 800486a:	8812      	ldrh	r2, [r2, #0]
 800486c:	801a      	strh	r2, [r3, #0]

	while (i2c->ISR & I2C_ISR_BUSY) {
 800486e:	e00e      	b.n	800488e <I2C_MasterMultiWrite+0x4a>
		I2C_Delay(1);
 8004870:	2001      	movs	r0, #1
 8004872:	f7fe fd57 	bl	8003324 <HAL_Delay>
		i--;
 8004876:	2112      	movs	r1, #18
 8004878:	187b      	adds	r3, r7, r1
 800487a:	881a      	ldrh	r2, [r3, #0]
 800487c:	187b      	adds	r3, r7, r1
 800487e:	3a01      	subs	r2, #1
 8004880:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8004882:	187b      	adds	r3, r7, r1
 8004884:	881b      	ldrh	r3, [r3, #0]
 8004886:	2b00      	cmp	r3, #0
 8004888:	d101      	bne.n	800488e <I2C_MasterMultiWrite+0x4a>
			return BML_BUSY;
 800488a:	2302      	movs	r3, #2
 800488c:	e085      	b.n	800499a <I2C_MasterMultiWrite+0x156>
	while (i2c->ISR & I2C_ISR_BUSY) {
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	699a      	ldr	r2, [r3, #24]
 8004892:	2380      	movs	r3, #128	; 0x80
 8004894:	021b      	lsls	r3, r3, #8
 8004896:	4013      	ands	r3, r2
 8004898:	d1ea      	bne.n	8004870 <I2C_MasterMultiWrite+0x2c>
		}
	} /* wait until bus not busy */
	I2C_CR2(i2c,
	I2C_CR2_START | I2C_CR2_AUTOEND | ((n + 1) << 16) | (saddr << 1));
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	3301      	adds	r3, #1
 800489e:	041b      	lsls	r3, r3, #16
 80048a0:	220b      	movs	r2, #11
 80048a2:	18ba      	adds	r2, r7, r2
 80048a4:	7812      	ldrb	r2, [r2, #0]
 80048a6:	0052      	lsls	r2, r2, #1
 80048a8:	4313      	orrs	r3, r2
	I2C_CR2(i2c,
 80048aa:	4a3e      	ldr	r2, [pc, #248]	; (80049a4 <I2C_MasterMultiWrite+0x160>)
 80048ac:	431a      	orrs	r2, r3
 80048ae:	68fb      	ldr	r3, [r7, #12]
 80048b0:	0011      	movs	r1, r2
 80048b2:	0018      	movs	r0, r3
 80048b4:	f7ff ff5a 	bl	800476c <I2C_CR2>
	/* set byte count and send slave address */
	/* generate start, set auto end, */
	i = timeout;
 80048b8:	2312      	movs	r3, #18
 80048ba:	18fb      	adds	r3, r7, r3
 80048bc:	2224      	movs	r2, #36	; 0x24
 80048be:	18ba      	adds	r2, r7, r2
 80048c0:	8812      	ldrh	r2, [r2, #0]
 80048c2:	801a      	strh	r2, [r3, #0]
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 80048c4:	e00e      	b.n	80048e4 <I2C_MasterMultiWrite+0xa0>
		I2C_Delay(1);
 80048c6:	2001      	movs	r0, #1
 80048c8:	f7fe fd2c 	bl	8003324 <HAL_Delay>
		i--;
 80048cc:	2112      	movs	r1, #18
 80048ce:	187b      	adds	r3, r7, r1
 80048d0:	881a      	ldrh	r2, [r3, #0]
 80048d2:	187b      	adds	r3, r7, r1
 80048d4:	3a01      	subs	r2, #1
 80048d6:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 80048d8:	187b      	adds	r3, r7, r1
 80048da:	881b      	ldrh	r3, [r3, #0]
 80048dc:	2b00      	cmp	r3, #0
 80048de:	d101      	bne.n	80048e4 <I2C_MasterMultiWrite+0xa0>
			return BML_TIMEOUT;
 80048e0:	2303      	movs	r3, #3
 80048e2:	e05a      	b.n	800499a <I2C_MasterMultiWrite+0x156>
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 80048e4:	68fb      	ldr	r3, [r7, #12]
 80048e6:	699b      	ldr	r3, [r3, #24]
 80048e8:	2202      	movs	r2, #2
 80048ea:	4013      	ands	r3, r2
 80048ec:	d0eb      	beq.n	80048c6 <I2C_MasterMultiWrite+0x82>
		}
	} /* wait until TXIS is set */
	i2c->TXDR = maddr; /* send memory address */
 80048ee:	230a      	movs	r3, #10
 80048f0:	18fb      	adds	r3, r7, r3
 80048f2:	781a      	ldrb	r2, [r3, #0]
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	629a      	str	r2, [r3, #40]	; 0x28
	i = timeout;
 80048f8:	2312      	movs	r3, #18
 80048fa:	18fb      	adds	r3, r7, r3
 80048fc:	2224      	movs	r2, #36	; 0x24
 80048fe:	18ba      	adds	r2, r7, r2
 8004900:	8812      	ldrh	r2, [r2, #0]
 8004902:	801a      	strh	r2, [r3, #0]
	for (x = 0; x < n; x++) /* send n bytes of data */
 8004904:	2300      	movs	r3, #0
 8004906:	617b      	str	r3, [r7, #20]
 8004908:	e01d      	b.n	8004946 <I2C_MasterMultiWrite+0x102>
	{
		while (!(i2c->ISR & I2C_ISR_TXIS)) {
			I2C_Delay(1);
 800490a:	2001      	movs	r0, #1
 800490c:	f7fe fd0a 	bl	8003324 <HAL_Delay>
			i--;
 8004910:	2112      	movs	r1, #18
 8004912:	187b      	adds	r3, r7, r1
 8004914:	881a      	ldrh	r2, [r3, #0]
 8004916:	187b      	adds	r3, r7, r1
 8004918:	3a01      	subs	r2, #1
 800491a:	801a      	strh	r2, [r3, #0]
			if (i <= 0) {
 800491c:	187b      	adds	r3, r7, r1
 800491e:	881b      	ldrh	r3, [r3, #0]
 8004920:	2b00      	cmp	r3, #0
 8004922:	d101      	bne.n	8004928 <I2C_MasterMultiWrite+0xe4>
				return BML_TIMEOUT;
 8004924:	2303      	movs	r3, #3
 8004926:	e038      	b.n	800499a <I2C_MasterMultiWrite+0x156>
		while (!(i2c->ISR & I2C_ISR_TXIS)) {
 8004928:	68fb      	ldr	r3, [r7, #12]
 800492a:	699b      	ldr	r3, [r3, #24]
 800492c:	2202      	movs	r2, #2
 800492e:	4013      	ands	r3, r2
 8004930:	d0eb      	beq.n	800490a <I2C_MasterMultiWrite+0xc6>
			}
		} /* wait until TXIS is set */
		i2c->TXDR = *data++; /* send a byte of data */
 8004932:	6a3b      	ldr	r3, [r7, #32]
 8004934:	1c5a      	adds	r2, r3, #1
 8004936:	623a      	str	r2, [r7, #32]
 8004938:	781b      	ldrb	r3, [r3, #0]
 800493a:	001a      	movs	r2, r3
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	629a      	str	r2, [r3, #40]	; 0x28
	for (x = 0; x < n; x++) /* send n bytes of data */
 8004940:	697b      	ldr	r3, [r7, #20]
 8004942:	3301      	adds	r3, #1
 8004944:	617b      	str	r3, [r7, #20]
 8004946:	697b      	ldr	r3, [r7, #20]
 8004948:	687a      	ldr	r2, [r7, #4]
 800494a:	429a      	cmp	r2, r3
 800494c:	d8ec      	bhi.n	8004928 <I2C_MasterMultiWrite+0xe4>
	}
	i = timeout;
 800494e:	2312      	movs	r3, #18
 8004950:	18fb      	adds	r3, r7, r3
 8004952:	2224      	movs	r2, #36	; 0x24
 8004954:	18ba      	adds	r2, r7, r2
 8004956:	8812      	ldrh	r2, [r2, #0]
 8004958:	801a      	strh	r2, [r3, #0]
	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 800495a:	e00e      	b.n	800497a <I2C_MasterMultiWrite+0x136>
		I2C_Delay(1);
 800495c:	2001      	movs	r0, #1
 800495e:	f7fe fce1 	bl	8003324 <HAL_Delay>
		i--;
 8004962:	2112      	movs	r1, #18
 8004964:	187b      	adds	r3, r7, r1
 8004966:	881a      	ldrh	r2, [r3, #0]
 8004968:	187b      	adds	r3, r7, r1
 800496a:	3a01      	subs	r2, #1
 800496c:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 800496e:	187b      	adds	r3, r7, r1
 8004970:	881b      	ldrh	r3, [r3, #0]
 8004972:	2b00      	cmp	r3, #0
 8004974:	d101      	bne.n	800497a <I2C_MasterMultiWrite+0x136>
			return BML_TIMEOUT;
 8004976:	2303      	movs	r3, #3
 8004978:	e00f      	b.n	800499a <I2C_MasterMultiWrite+0x156>
	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 800497a:	68fb      	ldr	r3, [r7, #12]
 800497c:	699b      	ldr	r3, [r3, #24]
 800497e:	2220      	movs	r2, #32
 8004980:	4013      	ands	r3, r2
 8004982:	d0eb      	beq.n	800495c <I2C_MasterMultiWrite+0x118>
		}
	} /* wait until stop flag is set */

	i2c->ICR = I2C_ISR_STOPF; /* clear stop flag */
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	2220      	movs	r2, #32
 8004988:	61da      	str	r2, [r3, #28]
	I2C_CR2(i2c, I2C_CR2_AUTOEND);
 800498a:	2380      	movs	r3, #128	; 0x80
 800498c:	049a      	lsls	r2, r3, #18
 800498e:	68fb      	ldr	r3, [r7, #12]
 8004990:	0011      	movs	r1, r2
 8004992:	0018      	movs	r0, r3
 8004994:	f7ff feea 	bl	800476c <I2C_CR2>

	return BML_OK;
 8004998:	2300      	movs	r3, #0
}
 800499a:	0018      	movs	r0, r3
 800499c:	46bd      	mov	sp, r7
 800499e:	b006      	add	sp, #24
 80049a0:	bd80      	pop	{r7, pc}
 80049a2:	46c0      	nop			; (mov r8, r8)
 80049a4:	02002000 	.word	0x02002000

080049a8 <I2C_MasterMultiRead>:

BML_StatusTypeDef I2C_MasterMultiRead(I2C_TypeDef *i2c, uint8_t saddr,
		uint8_t maddr, uint32_t n, uint8_t *data, uint16_t timeout) {
 80049a8:	b580      	push	{r7, lr}
 80049aa:	b086      	sub	sp, #24
 80049ac:	af00      	add	r7, sp, #0
 80049ae:	60f8      	str	r0, [r7, #12]
 80049b0:	0008      	movs	r0, r1
 80049b2:	0011      	movs	r1, r2
 80049b4:	607b      	str	r3, [r7, #4]
 80049b6:	230b      	movs	r3, #11
 80049b8:	18fb      	adds	r3, r7, r3
 80049ba:	1c02      	adds	r2, r0, #0
 80049bc:	701a      	strb	r2, [r3, #0]
 80049be:	230a      	movs	r3, #10
 80049c0:	18fb      	adds	r3, r7, r3
 80049c2:	1c0a      	adds	r2, r1, #0
 80049c4:	701a      	strb	r2, [r3, #0]
	uint16_t i = timeout;
 80049c6:	2316      	movs	r3, #22
 80049c8:	18fb      	adds	r3, r7, r3
 80049ca:	2224      	movs	r2, #36	; 0x24
 80049cc:	18ba      	adds	r2, r7, r2
 80049ce:	8812      	ldrh	r2, [r2, #0]
 80049d0:	801a      	strh	r2, [r3, #0]
	while (i2c->ISR & I2C_ISR_BUSY) {
 80049d2:	e00e      	b.n	80049f2 <I2C_MasterMultiRead+0x4a>
		I2C_Delay(1);
 80049d4:	2001      	movs	r0, #1
 80049d6:	f7fe fca5 	bl	8003324 <HAL_Delay>
		i--;
 80049da:	2116      	movs	r1, #22
 80049dc:	187b      	adds	r3, r7, r1
 80049de:	881a      	ldrh	r2, [r3, #0]
 80049e0:	187b      	adds	r3, r7, r1
 80049e2:	3a01      	subs	r2, #1
 80049e4:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 80049e6:	187b      	adds	r3, r7, r1
 80049e8:	881b      	ldrh	r3, [r3, #0]
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	d101      	bne.n	80049f2 <I2C_MasterMultiRead+0x4a>
			return BML_BUSY;
 80049ee:	2302      	movs	r3, #2
 80049f0:	e0ac      	b.n	8004b4c <I2C_MasterMultiRead+0x1a4>
	while (i2c->ISR & I2C_ISR_BUSY) {
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	699a      	ldr	r2, [r3, #24]
 80049f6:	2380      	movs	r3, #128	; 0x80
 80049f8:	021b      	lsls	r3, r3, #8
 80049fa:	4013      	ands	r3, r2
 80049fc:	d1ea      	bne.n	80049d4 <I2C_MasterMultiRead+0x2c>
		}
	} /* wait until bus not busy */
	i = timeout;
 80049fe:	2316      	movs	r3, #22
 8004a00:	18fb      	adds	r3, r7, r3
 8004a02:	2224      	movs	r2, #36	; 0x24
 8004a04:	18ba      	adds	r2, r7, r2
 8004a06:	8812      	ldrh	r2, [r2, #0]
 8004a08:	801a      	strh	r2, [r3, #0]

	I2C_CR2(i2c, I2C_CR2_START | (1 << 16) | (saddr << 1));/* generate start and send slave address */
 8004a0a:	230b      	movs	r3, #11
 8004a0c:	18fb      	adds	r3, r7, r3
 8004a0e:	781b      	ldrb	r3, [r3, #0]
 8004a10:	005b      	lsls	r3, r3, #1
 8004a12:	001a      	movs	r2, r3
 8004a14:	2390      	movs	r3, #144	; 0x90
 8004a16:	025b      	lsls	r3, r3, #9
 8004a18:	431a      	orrs	r2, r3
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	0011      	movs	r1, r2
 8004a1e:	0018      	movs	r0, r3
 8004a20:	f7ff fea4 	bl	800476c <I2C_CR2>

	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 8004a24:	e00e      	b.n	8004a44 <I2C_MasterMultiRead+0x9c>
		I2C_Delay(1);
 8004a26:	2001      	movs	r0, #1
 8004a28:	f7fe fc7c 	bl	8003324 <HAL_Delay>
		i--;
 8004a2c:	2116      	movs	r1, #22
 8004a2e:	187b      	adds	r3, r7, r1
 8004a30:	881a      	ldrh	r2, [r3, #0]
 8004a32:	187b      	adds	r3, r7, r1
 8004a34:	3a01      	subs	r2, #1
 8004a36:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8004a38:	187b      	adds	r3, r7, r1
 8004a3a:	881b      	ldrh	r3, [r3, #0]
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d101      	bne.n	8004a44 <I2C_MasterMultiRead+0x9c>
			return BML_TIMEOUT;
 8004a40:	2303      	movs	r3, #3
 8004a42:	e083      	b.n	8004b4c <I2C_MasterMultiRead+0x1a4>
	while (!(i2c->ISR & I2C_ISR_TXIS)) {
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	699b      	ldr	r3, [r3, #24]
 8004a48:	2202      	movs	r2, #2
 8004a4a:	4013      	ands	r3, r2
 8004a4c:	d0eb      	beq.n	8004a26 <I2C_MasterMultiRead+0x7e>
		}
	}/* wait until transmitter is ready */

	i = timeout;
 8004a4e:	2316      	movs	r3, #22
 8004a50:	18fb      	adds	r3, r7, r3
 8004a52:	2224      	movs	r2, #36	; 0x24
 8004a54:	18ba      	adds	r2, r7, r2
 8004a56:	8812      	ldrh	r2, [r2, #0]
 8004a58:	801a      	strh	r2, [r3, #0]

	i2c->TXDR = maddr; /* send memory address */
 8004a5a:	230a      	movs	r3, #10
 8004a5c:	18fb      	adds	r3, r7, r3
 8004a5e:	781a      	ldrb	r2, [r3, #0]
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(i2c->ISR & I2C_ISR_TC)) {
 8004a64:	e00e      	b.n	8004a84 <I2C_MasterMultiRead+0xdc>
		I2C_Delay(1);
 8004a66:	2001      	movs	r0, #1
 8004a68:	f7fe fc5c 	bl	8003324 <HAL_Delay>
		i--;
 8004a6c:	2116      	movs	r1, #22
 8004a6e:	187b      	adds	r3, r7, r1
 8004a70:	881a      	ldrh	r2, [r3, #0]
 8004a72:	187b      	adds	r3, r7, r1
 8004a74:	3a01      	subs	r2, #1
 8004a76:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8004a78:	187b      	adds	r3, r7, r1
 8004a7a:	881b      	ldrh	r3, [r3, #0]
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d101      	bne.n	8004a84 <I2C_MasterMultiRead+0xdc>
			return BML_TIMEOUT;
 8004a80:	2303      	movs	r3, #3
 8004a82:	e063      	b.n	8004b4c <I2C_MasterMultiRead+0x1a4>
	while (!(i2c->ISR & I2C_ISR_TC)) {
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	699b      	ldr	r3, [r3, #24]
 8004a88:	2240      	movs	r2, #64	; 0x40
 8004a8a:	4013      	ands	r3, r2
 8004a8c:	d0eb      	beq.n	8004a66 <I2C_MasterMultiRead+0xbe>

	/* generate restart, send slave address, repeat read n bytes, set for auto end */

	I2C_CR2(i2c,
			I2C_CR2_START | I2C_CR2_RD_WRN | I2C_CR2_AUTOEND
					| ((n & 0xFF) << 16) | (saddr << 1));
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	041a      	lsls	r2, r3, #16
 8004a92:	23ff      	movs	r3, #255	; 0xff
 8004a94:	041b      	lsls	r3, r3, #16
 8004a96:	4013      	ands	r3, r2
 8004a98:	220b      	movs	r2, #11
 8004a9a:	18ba      	adds	r2, r7, r2
 8004a9c:	7812      	ldrb	r2, [r2, #0]
 8004a9e:	0052      	lsls	r2, r2, #1
 8004aa0:	4313      	orrs	r3, r2
	I2C_CR2(i2c,
 8004aa2:	4a2c      	ldr	r2, [pc, #176]	; (8004b54 <I2C_MasterMultiRead+0x1ac>)
 8004aa4:	431a      	orrs	r2, r3
 8004aa6:	68fb      	ldr	r3, [r7, #12]
 8004aa8:	0011      	movs	r1, r2
 8004aaa:	0018      	movs	r0, r3
 8004aac:	f7ff fe5e 	bl	800476c <I2C_CR2>

	for (; n > 0; n--) {
 8004ab0:	e023      	b.n	8004afa <I2C_MasterMultiRead+0x152>
		while (!(i2c->ISR & I2C_ISR_RXNE)) {
			I2C_Delay(1);
 8004ab2:	2001      	movs	r0, #1
 8004ab4:	f7fe fc36 	bl	8003324 <HAL_Delay>
			i--;
 8004ab8:	2116      	movs	r1, #22
 8004aba:	187b      	adds	r3, r7, r1
 8004abc:	881a      	ldrh	r2, [r3, #0]
 8004abe:	187b      	adds	r3, r7, r1
 8004ac0:	3a01      	subs	r2, #1
 8004ac2:	801a      	strh	r2, [r3, #0]
			if (i <= 0) {
 8004ac4:	187b      	adds	r3, r7, r1
 8004ac6:	881b      	ldrh	r3, [r3, #0]
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	d101      	bne.n	8004ad0 <I2C_MasterMultiRead+0x128>
				return BML_TIMEOUT;
 8004acc:	2303      	movs	r3, #3
 8004ace:	e03d      	b.n	8004b4c <I2C_MasterMultiRead+0x1a4>
		while (!(i2c->ISR & I2C_ISR_RXNE)) {
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	699b      	ldr	r3, [r3, #24]
 8004ad4:	2204      	movs	r2, #4
 8004ad6:	4013      	ands	r3, r2
 8004ad8:	d0eb      	beq.n	8004ab2 <I2C_MasterMultiRead+0x10a>
			}
		} /* Wait until RXNE flag is set */
		i = timeout;
 8004ada:	2316      	movs	r3, #22
 8004adc:	18fb      	adds	r3, r7, r3
 8004ade:	2224      	movs	r2, #36	; 0x24
 8004ae0:	18ba      	adds	r2, r7, r2
 8004ae2:	8812      	ldrh	r2, [r2, #0]
 8004ae4:	801a      	strh	r2, [r3, #0]
		*data++ = i2c->RXDR; /* Read data from DR */
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004aea:	6a3b      	ldr	r3, [r7, #32]
 8004aec:	1c5a      	adds	r2, r3, #1
 8004aee:	623a      	str	r2, [r7, #32]
 8004af0:	b2ca      	uxtb	r2, r1
 8004af2:	701a      	strb	r2, [r3, #0]
	for (; n > 0; n--) {
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	3b01      	subs	r3, #1
 8004af8:	607b      	str	r3, [r7, #4]
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	2b00      	cmp	r3, #0
 8004afe:	d1e7      	bne.n	8004ad0 <I2C_MasterMultiRead+0x128>
	}

	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 8004b00:	e00e      	b.n	8004b20 <I2C_MasterMultiRead+0x178>
		I2C_Delay(1);
 8004b02:	2001      	movs	r0, #1
 8004b04:	f7fe fc0e 	bl	8003324 <HAL_Delay>
		i--;
 8004b08:	2116      	movs	r1, #22
 8004b0a:	187b      	adds	r3, r7, r1
 8004b0c:	881a      	ldrh	r2, [r3, #0]
 8004b0e:	187b      	adds	r3, r7, r1
 8004b10:	3a01      	subs	r2, #1
 8004b12:	801a      	strh	r2, [r3, #0]
		if (i <= 0) {
 8004b14:	187b      	adds	r3, r7, r1
 8004b16:	881b      	ldrh	r3, [r3, #0]
 8004b18:	2b00      	cmp	r3, #0
 8004b1a:	d101      	bne.n	8004b20 <I2C_MasterMultiRead+0x178>
			return BML_TIMEOUT;
 8004b1c:	2303      	movs	r3, #3
 8004b1e:	e015      	b.n	8004b4c <I2C_MasterMultiRead+0x1a4>
	while (!(i2c->ISR & I2C_ISR_STOPF)) {
 8004b20:	68fb      	ldr	r3, [r7, #12]
 8004b22:	699b      	ldr	r3, [r3, #24]
 8004b24:	2220      	movs	r2, #32
 8004b26:	4013      	ands	r3, r2
 8004b28:	d0eb      	beq.n	8004b02 <I2C_MasterMultiRead+0x15a>
		}
	} /* wait until stop flag is set */
	i = timeout;
 8004b2a:	2316      	movs	r3, #22
 8004b2c:	18fb      	adds	r3, r7, r3
 8004b2e:	2224      	movs	r2, #36	; 0x24
 8004b30:	18ba      	adds	r2, r7, r2
 8004b32:	8812      	ldrh	r2, [r2, #0]
 8004b34:	801a      	strh	r2, [r3, #0]
	i2c->ICR = I2C_ISR_STOPF; /* clear stop flag */
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	2220      	movs	r2, #32
 8004b3a:	61da      	str	r2, [r3, #28]
	I2C_CR2(i2c, I2C_CR2_AUTOEND);
 8004b3c:	2380      	movs	r3, #128	; 0x80
 8004b3e:	049a      	lsls	r2, r3, #18
 8004b40:	68fb      	ldr	r3, [r7, #12]
 8004b42:	0011      	movs	r1, r2
 8004b44:	0018      	movs	r0, r3
 8004b46:	f7ff fe11 	bl	800476c <I2C_CR2>

	return BML_OK;
 8004b4a:	2300      	movs	r3, #0
}
 8004b4c:	0018      	movs	r0, r3
 8004b4e:	46bd      	mov	sp, r7
 8004b50:	b006      	add	sp, #24
 8004b52:	bd80      	pop	{r7, pc}
 8004b54:	02002400 	.word	0x02002400

08004b58 <mlx90614_crc8>:
#define MLX90614_REGISTER_ID3     0x3F
#define MLX90614_REGISTER_SLEEP   0xFF

MLX90614_t mlx90614;
//###################################################################################################
uint8_t mlx90614_crc8(uint8_t *data, uint8_t len) {
 8004b58:	b590      	push	{r4, r7, lr}
 8004b5a:	b085      	sub	sp, #20
 8004b5c:	af00      	add	r7, sp, #0
 8004b5e:	6078      	str	r0, [r7, #4]
 8004b60:	000a      	movs	r2, r1
 8004b62:	1cfb      	adds	r3, r7, #3
 8004b64:	701a      	strb	r2, [r3, #0]
	uint8_t crc = 0;
 8004b66:	230f      	movs	r3, #15
 8004b68:	18fb      	adds	r3, r7, r3
 8004b6a:	2200      	movs	r2, #0
 8004b6c:	701a      	strb	r2, [r3, #0]
	while (len--) {
 8004b6e:	e038      	b.n	8004be2 <mlx90614_crc8+0x8a>
		uint8_t inbyte = *data++;
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	1c5a      	adds	r2, r3, #1
 8004b74:	607a      	str	r2, [r7, #4]
 8004b76:	220e      	movs	r2, #14
 8004b78:	18ba      	adds	r2, r7, r2
 8004b7a:	781b      	ldrb	r3, [r3, #0]
 8004b7c:	7013      	strb	r3, [r2, #0]
		for (uint8_t i = 8; i; i--) {
 8004b7e:	230d      	movs	r3, #13
 8004b80:	18fb      	adds	r3, r7, r3
 8004b82:	2208      	movs	r2, #8
 8004b84:	701a      	strb	r2, [r3, #0]
 8004b86:	e027      	b.n	8004bd8 <mlx90614_crc8+0x80>
			uint8_t carry = (crc ^ inbyte) & 0x80;
 8004b88:	200f      	movs	r0, #15
 8004b8a:	183a      	adds	r2, r7, r0
 8004b8c:	230e      	movs	r3, #14
 8004b8e:	18fb      	adds	r3, r7, r3
 8004b90:	7812      	ldrb	r2, [r2, #0]
 8004b92:	781b      	ldrb	r3, [r3, #0]
 8004b94:	4053      	eors	r3, r2
 8004b96:	b2da      	uxtb	r2, r3
 8004b98:	240c      	movs	r4, #12
 8004b9a:	193b      	adds	r3, r7, r4
 8004b9c:	217f      	movs	r1, #127	; 0x7f
 8004b9e:	438a      	bics	r2, r1
 8004ba0:	701a      	strb	r2, [r3, #0]
			crc <<= 1;
 8004ba2:	183a      	adds	r2, r7, r0
 8004ba4:	183b      	adds	r3, r7, r0
 8004ba6:	781b      	ldrb	r3, [r3, #0]
 8004ba8:	18db      	adds	r3, r3, r3
 8004baa:	7013      	strb	r3, [r2, #0]
			if (carry)
 8004bac:	193b      	adds	r3, r7, r4
 8004bae:	781b      	ldrb	r3, [r3, #0]
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	d005      	beq.n	8004bc0 <mlx90614_crc8+0x68>
				crc ^= 0x7;
 8004bb4:	183b      	adds	r3, r7, r0
 8004bb6:	183a      	adds	r2, r7, r0
 8004bb8:	7812      	ldrb	r2, [r2, #0]
 8004bba:	2107      	movs	r1, #7
 8004bbc:	404a      	eors	r2, r1
 8004bbe:	701a      	strb	r2, [r3, #0]
			inbyte <<= 1;
 8004bc0:	230e      	movs	r3, #14
 8004bc2:	18fa      	adds	r2, r7, r3
 8004bc4:	18fb      	adds	r3, r7, r3
 8004bc6:	781b      	ldrb	r3, [r3, #0]
 8004bc8:	18db      	adds	r3, r3, r3
 8004bca:	7013      	strb	r3, [r2, #0]
		for (uint8_t i = 8; i; i--) {
 8004bcc:	210d      	movs	r1, #13
 8004bce:	187b      	adds	r3, r7, r1
 8004bd0:	781a      	ldrb	r2, [r3, #0]
 8004bd2:	187b      	adds	r3, r7, r1
 8004bd4:	3a01      	subs	r2, #1
 8004bd6:	701a      	strb	r2, [r3, #0]
 8004bd8:	230d      	movs	r3, #13
 8004bda:	18fb      	adds	r3, r7, r3
 8004bdc:	781b      	ldrb	r3, [r3, #0]
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	d1d2      	bne.n	8004b88 <mlx90614_crc8+0x30>
	while (len--) {
 8004be2:	1cfb      	adds	r3, r7, #3
 8004be4:	781b      	ldrb	r3, [r3, #0]
 8004be6:	1cfa      	adds	r2, r7, #3
 8004be8:	1e59      	subs	r1, r3, #1
 8004bea:	7011      	strb	r1, [r2, #0]
 8004bec:	2b00      	cmp	r3, #0
 8004bee:	d1bf      	bne.n	8004b70 <mlx90614_crc8+0x18>
		}
	}
	return crc;
 8004bf0:	230f      	movs	r3, #15
 8004bf2:	18fb      	adds	r3, r7, r3
 8004bf4:	781b      	ldrb	r3, [r3, #0]
}
 8004bf6:	0018      	movs	r0, r3
 8004bf8:	46bd      	mov	sp, r7
 8004bfa:	b005      	add	sp, #20
 8004bfc:	bd90      	pop	{r4, r7, pc}
	...

08004c00 <mlx90614_read16>:
//###################################################################################################
BML_StatusTypeDef mlx90614_read16(uint8_t address, int16_t *data) {
 8004c00:	b580      	push	{r7, lr}
 8004c02:	b086      	sub	sp, #24
 8004c04:	af02      	add	r7, sp, #8
 8004c06:	0002      	movs	r2, r0
 8004c08:	6039      	str	r1, [r7, #0]
 8004c0a:	1dfb      	adds	r3, r7, #7
 8004c0c:	701a      	strb	r2, [r3, #0]
//	if (HAL_I2C_Mem_Read(&_MLX90614_I2C, _MLX90614_I2C_ADDRESS, address,
//			I2C_MEMADD_SIZE_8BIT, d, 3, 100) != HAL_OK) {
//		return false;
//	}

	if (I2C_MasterMultiRead(_MLX90614_I2C, _MLX90614_I2C_ADDRESS, address, 3, d,
 8004c0e:	1dfb      	adds	r3, r7, #7
 8004c10:	781a      	ldrb	r2, [r3, #0]
 8004c12:	480f      	ldr	r0, [pc, #60]	; (8004c50 <mlx90614_read16+0x50>)
 8004c14:	2364      	movs	r3, #100	; 0x64
 8004c16:	9301      	str	r3, [sp, #4]
 8004c18:	230c      	movs	r3, #12
 8004c1a:	18fb      	adds	r3, r7, r3
 8004c1c:	9300      	str	r3, [sp, #0]
 8004c1e:	2303      	movs	r3, #3
 8004c20:	215a      	movs	r1, #90	; 0x5a
 8004c22:	f7ff fec1 	bl	80049a8 <I2C_MasterMultiRead>
 8004c26:	1e03      	subs	r3, r0, #0
 8004c28:	d001      	beq.n	8004c2e <mlx90614_read16+0x2e>
			100) != BML_OK) {
		return BML_ERROR;
 8004c2a:	2301      	movs	r3, #1
 8004c2c:	e00c      	b.n	8004c48 <mlx90614_read16+0x48>
	}

	*data = d[0] | (d[1] << 8);
 8004c2e:	210c      	movs	r1, #12
 8004c30:	187b      	adds	r3, r7, r1
 8004c32:	781b      	ldrb	r3, [r3, #0]
 8004c34:	b21a      	sxth	r2, r3
 8004c36:	187b      	adds	r3, r7, r1
 8004c38:	785b      	ldrb	r3, [r3, #1]
 8004c3a:	021b      	lsls	r3, r3, #8
 8004c3c:	b21b      	sxth	r3, r3
 8004c3e:	4313      	orrs	r3, r2
 8004c40:	b21a      	sxth	r2, r3
 8004c42:	683b      	ldr	r3, [r7, #0]
 8004c44:	801a      	strh	r2, [r3, #0]
	return BML_OK;
 8004c46:	2300      	movs	r3, #0
}
 8004c48:	0018      	movs	r0, r3
 8004c4a:	46bd      	mov	sp, r7
 8004c4c:	b004      	add	sp, #16
 8004c4e:	bd80      	pop	{r7, pc}
 8004c50:	40005400 	.word	0x40005400

08004c54 <mlx90614_write16>:
//###################################################################################################
BML_StatusTypeDef mlx90614_write16(uint8_t address, int16_t data) {
 8004c54:	b590      	push	{r4, r7, lr}
 8004c56:	b089      	sub	sp, #36	; 0x24
 8004c58:	af02      	add	r7, sp, #8
 8004c5a:	0002      	movs	r2, r0
 8004c5c:	1dfb      	adds	r3, r7, #7
 8004c5e:	701a      	strb	r2, [r3, #0]
 8004c60:	1d3b      	adds	r3, r7, #4
 8004c62:	1c0a      	adds	r2, r1, #0
 8004c64:	801a      	strh	r2, [r3, #0]
	uint8_t d[5];
	d[0] = _MLX90614_I2C_ADDRESS;
 8004c66:	2410      	movs	r4, #16
 8004c68:	193b      	adds	r3, r7, r4
 8004c6a:	225a      	movs	r2, #90	; 0x5a
 8004c6c:	701a      	strb	r2, [r3, #0]
	d[1] = address;
 8004c6e:	193b      	adds	r3, r7, r4
 8004c70:	1dfa      	adds	r2, r7, #7
 8004c72:	7812      	ldrb	r2, [r2, #0]
 8004c74:	705a      	strb	r2, [r3, #1]
	d[2] = 0;
 8004c76:	193b      	adds	r3, r7, r4
 8004c78:	2200      	movs	r2, #0
 8004c7a:	709a      	strb	r2, [r3, #2]
	d[3] = 0;
 8004c7c:	193b      	adds	r3, r7, r4
 8004c7e:	2200      	movs	r2, #0
 8004c80:	70da      	strb	r2, [r3, #3]
	d[4] = mlx90614_crc8(d, 4);
 8004c82:	193b      	adds	r3, r7, r4
 8004c84:	2104      	movs	r1, #4
 8004c86:	0018      	movs	r0, r3
 8004c88:	f7ff ff66 	bl	8004b58 <mlx90614_crc8>
 8004c8c:	0003      	movs	r3, r0
 8004c8e:	001a      	movs	r2, r3
 8004c90:	0021      	movs	r1, r4
 8004c92:	187b      	adds	r3, r7, r1
 8004c94:	711a      	strb	r2, [r3, #4]

//	if (HAL_I2C_Mem_Write(&_MLX90614_I2C, _MLX90614_I2C_ADDRESS, address,
//			I2C_MEMADD_SIZE_8BIT, &d[2], 3, 100) != HAL_OK)
//		return false;
	if (I2C_MasterMultiWrite(_MLX90614_I2C, _MLX90614_I2C_ADDRESS, address, 3,
 8004c96:	1dfb      	adds	r3, r7, #7
 8004c98:	781a      	ldrb	r2, [r3, #0]
 8004c9a:	482f      	ldr	r0, [pc, #188]	; (8004d58 <mlx90614_write16+0x104>)
 8004c9c:	2364      	movs	r3, #100	; 0x64
 8004c9e:	9301      	str	r3, [sp, #4]
 8004ca0:	187b      	adds	r3, r7, r1
 8004ca2:	3302      	adds	r3, #2
 8004ca4:	9300      	str	r3, [sp, #0]
 8004ca6:	2303      	movs	r3, #3
 8004ca8:	215a      	movs	r1, #90	; 0x5a
 8004caa:	f7ff fdcb 	bl	8004844 <I2C_MasterMultiWrite>
 8004cae:	1e03      	subs	r3, r0, #0
 8004cb0:	d001      	beq.n	8004cb6 <mlx90614_write16+0x62>
			&d[2], 100) != BML_OK) {
		return BML_ERROR;
 8004cb2:	2301      	movs	r3, #1
 8004cb4:	e04c      	b.n	8004d50 <mlx90614_write16+0xfc>
	}

	mlx90614_delay(10);
 8004cb6:	200a      	movs	r0, #10
 8004cb8:	f7fe fb34 	bl	8003324 <HAL_Delay>
	d[2] = data & 0x00FF;
 8004cbc:	1d3b      	adds	r3, r7, #4
 8004cbe:	881b      	ldrh	r3, [r3, #0]
 8004cc0:	b2da      	uxtb	r2, r3
 8004cc2:	2110      	movs	r1, #16
 8004cc4:	187b      	adds	r3, r7, r1
 8004cc6:	709a      	strb	r2, [r3, #2]
	d[3] = data >> 8;
 8004cc8:	1d3b      	adds	r3, r7, #4
 8004cca:	2200      	movs	r2, #0
 8004ccc:	5e9b      	ldrsh	r3, [r3, r2]
 8004cce:	121b      	asrs	r3, r3, #8
 8004cd0:	b21b      	sxth	r3, r3
 8004cd2:	b2da      	uxtb	r2, r3
 8004cd4:	000c      	movs	r4, r1
 8004cd6:	193b      	adds	r3, r7, r4
 8004cd8:	70da      	strb	r2, [r3, #3]
	d[4] = mlx90614_crc8(d, 4);
 8004cda:	193b      	adds	r3, r7, r4
 8004cdc:	2104      	movs	r1, #4
 8004cde:	0018      	movs	r0, r3
 8004ce0:	f7ff ff3a 	bl	8004b58 <mlx90614_crc8>
 8004ce4:	0003      	movs	r3, r0
 8004ce6:	001a      	movs	r2, r3
 8004ce8:	193b      	adds	r3, r7, r4
 8004cea:	711a      	strb	r2, [r3, #4]
	mlx90614_delay(10);
 8004cec:	200a      	movs	r0, #10
 8004cee:	f7fe fb19 	bl	8003324 <HAL_Delay>

//	if (HAL_I2C_Mem_Write(&_MLX90614_I2C, _MLX90614_I2C_ADDRESS, address,
//			I2C_MEMADD_SIZE_8BIT, &d[2], 3, 100) != HAL_OK)
//		return false;

	if (I2C_MasterMultiWrite(_MLX90614_I2C, _MLX90614_I2C_ADDRESS, address, 3,
 8004cf2:	1dfb      	adds	r3, r7, #7
 8004cf4:	781a      	ldrb	r2, [r3, #0]
 8004cf6:	4818      	ldr	r0, [pc, #96]	; (8004d58 <mlx90614_write16+0x104>)
 8004cf8:	2364      	movs	r3, #100	; 0x64
 8004cfa:	9301      	str	r3, [sp, #4]
 8004cfc:	193b      	adds	r3, r7, r4
 8004cfe:	3302      	adds	r3, #2
 8004d00:	9300      	str	r3, [sp, #0]
 8004d02:	2303      	movs	r3, #3
 8004d04:	215a      	movs	r1, #90	; 0x5a
 8004d06:	f7ff fd9d 	bl	8004844 <I2C_MasterMultiWrite>
 8004d0a:	1e03      	subs	r3, r0, #0
 8004d0c:	d001      	beq.n	8004d12 <mlx90614_write16+0xbe>
			&d[2], 100) != BML_OK) {
		return BML_ERROR;
 8004d0e:	2301      	movs	r3, #1
 8004d10:	e01e      	b.n	8004d50 <mlx90614_write16+0xfc>
	}

	mlx90614_delay(10);
 8004d12:	200a      	movs	r0, #10
 8004d14:	f7fe fb06 	bl	8003324 <HAL_Delay>
	int16_t comp = 0;
 8004d18:	210e      	movs	r1, #14
 8004d1a:	187b      	adds	r3, r7, r1
 8004d1c:	2200      	movs	r2, #0
 8004d1e:	801a      	strh	r2, [r3, #0]
	if (mlx90614_read16(address, &comp) == BML_ERROR)
 8004d20:	187a      	adds	r2, r7, r1
 8004d22:	1dfb      	adds	r3, r7, #7
 8004d24:	781b      	ldrb	r3, [r3, #0]
 8004d26:	0011      	movs	r1, r2
 8004d28:	0018      	movs	r0, r3
 8004d2a:	f7ff ff69 	bl	8004c00 <mlx90614_read16>
 8004d2e:	0003      	movs	r3, r0
 8004d30:	2b01      	cmp	r3, #1
 8004d32:	d101      	bne.n	8004d38 <mlx90614_write16+0xe4>
		return BML_ERROR;
 8004d34:	2301      	movs	r3, #1
 8004d36:	e00b      	b.n	8004d50 <mlx90614_write16+0xfc>
	if (comp != data)
 8004d38:	230e      	movs	r3, #14
 8004d3a:	18fb      	adds	r3, r7, r3
 8004d3c:	2200      	movs	r2, #0
 8004d3e:	5e9b      	ldrsh	r3, [r3, r2]
 8004d40:	1d3a      	adds	r2, r7, #4
 8004d42:	2100      	movs	r1, #0
 8004d44:	5e52      	ldrsh	r2, [r2, r1]
 8004d46:	429a      	cmp	r2, r3
 8004d48:	d001      	beq.n	8004d4e <mlx90614_write16+0xfa>
		return BML_ERROR;
 8004d4a:	2301      	movs	r3, #1
 8004d4c:	e000      	b.n	8004d50 <mlx90614_write16+0xfc>
	return BML_OK;
 8004d4e:	2300      	movs	r3, #0
}
 8004d50:	0018      	movs	r0, r3
 8004d52:	46bd      	mov	sp, r7
 8004d54:	b007      	add	sp, #28
 8004d56:	bd90      	pop	{r4, r7, pc}
 8004d58:	40005400 	.word	0x40005400

08004d5c <mlx90614_calcRawTemp>:
//###################################################################################################
int16_t mlx90614_calcRawTemp(float calcTemp) {
 8004d5c:	b590      	push	{r4, r7, lr}
 8004d5e:	b085      	sub	sp, #20
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	6078      	str	r0, [r7, #4]
	int16_t rawTemp;
	if (mlx90614.unit == MLX90614_UNIT_RAW) {
 8004d64:	4b26      	ldr	r3, [pc, #152]	; (8004e00 <mlx90614_calcRawTemp+0xa4>)
 8004d66:	781b      	ldrb	r3, [r3, #0]
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d107      	bne.n	8004d7c <mlx90614_calcRawTemp+0x20>
		rawTemp = (int16_t) calcTemp;
 8004d6c:	230e      	movs	r3, #14
 8004d6e:	18fc      	adds	r4, r7, r3
 8004d70:	6878      	ldr	r0, [r7, #4]
 8004d72:	f7fc f923 	bl	8000fbc <__aeabi_f2iz>
 8004d76:	0003      	movs	r3, r0
 8004d78:	8023      	strh	r3, [r4, #0]
 8004d7a:	e038      	b.n	8004dee <mlx90614_calcRawTemp+0x92>
	} else {
		float tempFloat;
		if (mlx90614.unit == MLX90614_UNIT_F) {
 8004d7c:	4b20      	ldr	r3, [pc, #128]	; (8004e00 <mlx90614_calcRawTemp+0xa4>)
 8004d7e:	781b      	ldrb	r3, [r3, #0]
 8004d80:	2b03      	cmp	r3, #3
 8004d82:	d116      	bne.n	8004db2 <mlx90614_calcRawTemp+0x56>
			tempFloat = (calcTemp - 32.0f) * 5.0f / 9.0f + 273.15f;
 8004d84:	2184      	movs	r1, #132	; 0x84
 8004d86:	05c9      	lsls	r1, r1, #23
 8004d88:	6878      	ldr	r0, [r7, #4]
 8004d8a:	f7fb ff69 	bl	8000c60 <__aeabi_fsub>
 8004d8e:	1c03      	adds	r3, r0, #0
 8004d90:	491c      	ldr	r1, [pc, #112]	; (8004e04 <mlx90614_calcRawTemp+0xa8>)
 8004d92:	1c18      	adds	r0, r3, #0
 8004d94:	f7fb fe3e 	bl	8000a14 <__aeabi_fmul>
 8004d98:	1c03      	adds	r3, r0, #0
 8004d9a:	491b      	ldr	r1, [pc, #108]	; (8004e08 <mlx90614_calcRawTemp+0xac>)
 8004d9c:	1c18      	adds	r0, r3, #0
 8004d9e:	f7fb fd21 	bl	80007e4 <__aeabi_fdiv>
 8004da2:	1c03      	adds	r3, r0, #0
 8004da4:	4919      	ldr	r1, [pc, #100]	; (8004e0c <mlx90614_calcRawTemp+0xb0>)
 8004da6:	1c18      	adds	r0, r3, #0
 8004da8:	f7fb fb7e 	bl	80004a8 <__aeabi_fadd>
 8004dac:	1c03      	adds	r3, r0, #0
 8004dae:	60bb      	str	r3, [r7, #8]
 8004db0:	e010      	b.n	8004dd4 <mlx90614_calcRawTemp+0x78>
		} else if (mlx90614.unit == MLX90614_UNIT_C) {
 8004db2:	4b13      	ldr	r3, [pc, #76]	; (8004e00 <mlx90614_calcRawTemp+0xa4>)
 8004db4:	781b      	ldrb	r3, [r3, #0]
 8004db6:	2b02      	cmp	r3, #2
 8004db8:	d106      	bne.n	8004dc8 <mlx90614_calcRawTemp+0x6c>
			tempFloat = calcTemp + 273.15f;
 8004dba:	4914      	ldr	r1, [pc, #80]	; (8004e0c <mlx90614_calcRawTemp+0xb0>)
 8004dbc:	6878      	ldr	r0, [r7, #4]
 8004dbe:	f7fb fb73 	bl	80004a8 <__aeabi_fadd>
 8004dc2:	1c03      	adds	r3, r0, #0
 8004dc4:	60bb      	str	r3, [r7, #8]
 8004dc6:	e005      	b.n	8004dd4 <mlx90614_calcRawTemp+0x78>
		} else if (mlx90614.unit == MLX90614_UNIT_K) {
 8004dc8:	4b0d      	ldr	r3, [pc, #52]	; (8004e00 <mlx90614_calcRawTemp+0xa4>)
 8004dca:	781b      	ldrb	r3, [r3, #0]
 8004dcc:	2b01      	cmp	r3, #1
 8004dce:	d101      	bne.n	8004dd4 <mlx90614_calcRawTemp+0x78>
			tempFloat = calcTemp;
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	60bb      	str	r3, [r7, #8]
		}
		tempFloat *= 50.0f;
 8004dd4:	490e      	ldr	r1, [pc, #56]	; (8004e10 <mlx90614_calcRawTemp+0xb4>)
 8004dd6:	68b8      	ldr	r0, [r7, #8]
 8004dd8:	f7fb fe1c 	bl	8000a14 <__aeabi_fmul>
 8004ddc:	1c03      	adds	r3, r0, #0
 8004dde:	60bb      	str	r3, [r7, #8]
		rawTemp = (int16_t) tempFloat;
 8004de0:	230e      	movs	r3, #14
 8004de2:	18fc      	adds	r4, r7, r3
 8004de4:	68b8      	ldr	r0, [r7, #8]
 8004de6:	f7fc f8e9 	bl	8000fbc <__aeabi_f2iz>
 8004dea:	0003      	movs	r3, r0
 8004dec:	8023      	strh	r3, [r4, #0]
	}
	return rawTemp;
 8004dee:	230e      	movs	r3, #14
 8004df0:	18fb      	adds	r3, r7, r3
 8004df2:	2200      	movs	r2, #0
 8004df4:	5e9b      	ldrsh	r3, [r3, r2]
}
 8004df6:	0018      	movs	r0, r3
 8004df8:	46bd      	mov	sp, r7
 8004dfa:	b005      	add	sp, #20
 8004dfc:	bd90      	pop	{r4, r7, pc}
 8004dfe:	46c0      	nop			; (mov r8, r8)
 8004e00:	20000348 	.word	0x20000348
 8004e04:	40a00000 	.word	0x40a00000
 8004e08:	41100000 	.word	0x41100000
 8004e0c:	43889333 	.word	0x43889333
 8004e10:	42480000 	.word	0x42480000

08004e14 <mlx90614_calcTemperature>:
//###################################################################################################
float mlx90614_calcTemperature(int16_t rawTemp) {
 8004e14:	b580      	push	{r7, lr}
 8004e16:	b084      	sub	sp, #16
 8004e18:	af00      	add	r7, sp, #0
 8004e1a:	0002      	movs	r2, r0
 8004e1c:	1dbb      	adds	r3, r7, #6
 8004e1e:	801a      	strh	r2, [r3, #0]
	float retTemp;
	if (mlx90614.unit == MLX90614_UNIT_RAW) {
 8004e20:	4b1e      	ldr	r3, [pc, #120]	; (8004e9c <mlx90614_calcTemperature+0x88>)
 8004e22:	781b      	ldrb	r3, [r3, #0]
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	d108      	bne.n	8004e3a <mlx90614_calcTemperature+0x26>
		retTemp = (float) rawTemp;
 8004e28:	1dbb      	adds	r3, r7, #6
 8004e2a:	2200      	movs	r2, #0
 8004e2c:	5e9b      	ldrsh	r3, [r3, r2]
 8004e2e:	0018      	movs	r0, r3
 8004e30:	f7fc f8e4 	bl	8000ffc <__aeabi_i2f>
 8004e34:	1c03      	adds	r3, r0, #0
 8004e36:	60fb      	str	r3, [r7, #12]
 8004e38:	e02b      	b.n	8004e92 <mlx90614_calcTemperature+0x7e>
	} else {
		retTemp = (float) (rawTemp) * 0.02f;
 8004e3a:	1dbb      	adds	r3, r7, #6
 8004e3c:	2200      	movs	r2, #0
 8004e3e:	5e9b      	ldrsh	r3, [r3, r2]
 8004e40:	0018      	movs	r0, r3
 8004e42:	f7fc f8db 	bl	8000ffc <__aeabi_i2f>
 8004e46:	1c03      	adds	r3, r0, #0
 8004e48:	4915      	ldr	r1, [pc, #84]	; (8004ea0 <mlx90614_calcTemperature+0x8c>)
 8004e4a:	1c18      	adds	r0, r3, #0
 8004e4c:	f7fb fde2 	bl	8000a14 <__aeabi_fmul>
 8004e50:	1c03      	adds	r3, r0, #0
 8004e52:	60fb      	str	r3, [r7, #12]
		if (mlx90614.unit != MLX90614_UNIT_K) {
 8004e54:	4b11      	ldr	r3, [pc, #68]	; (8004e9c <mlx90614_calcTemperature+0x88>)
 8004e56:	781b      	ldrb	r3, [r3, #0]
 8004e58:	2b01      	cmp	r3, #1
 8004e5a:	d01a      	beq.n	8004e92 <mlx90614_calcTemperature+0x7e>
			retTemp -= 273.15f;
 8004e5c:	4911      	ldr	r1, [pc, #68]	; (8004ea4 <mlx90614_calcTemperature+0x90>)
 8004e5e:	68f8      	ldr	r0, [r7, #12]
 8004e60:	f7fb fefe 	bl	8000c60 <__aeabi_fsub>
 8004e64:	1c03      	adds	r3, r0, #0
 8004e66:	60fb      	str	r3, [r7, #12]
			if (mlx90614.unit == MLX90614_UNIT_F) {
 8004e68:	4b0c      	ldr	r3, [pc, #48]	; (8004e9c <mlx90614_calcTemperature+0x88>)
 8004e6a:	781b      	ldrb	r3, [r3, #0]
 8004e6c:	2b03      	cmp	r3, #3
 8004e6e:	d110      	bne.n	8004e92 <mlx90614_calcTemperature+0x7e>
				retTemp = retTemp * 9.0f / 5.0f + 32.0f;
 8004e70:	490d      	ldr	r1, [pc, #52]	; (8004ea8 <mlx90614_calcTemperature+0x94>)
 8004e72:	68f8      	ldr	r0, [r7, #12]
 8004e74:	f7fb fdce 	bl	8000a14 <__aeabi_fmul>
 8004e78:	1c03      	adds	r3, r0, #0
 8004e7a:	490c      	ldr	r1, [pc, #48]	; (8004eac <mlx90614_calcTemperature+0x98>)
 8004e7c:	1c18      	adds	r0, r3, #0
 8004e7e:	f7fb fcb1 	bl	80007e4 <__aeabi_fdiv>
 8004e82:	1c03      	adds	r3, r0, #0
 8004e84:	2184      	movs	r1, #132	; 0x84
 8004e86:	05c9      	lsls	r1, r1, #23
 8004e88:	1c18      	adds	r0, r3, #0
 8004e8a:	f7fb fb0d 	bl	80004a8 <__aeabi_fadd>
 8004e8e:	1c03      	adds	r3, r0, #0
 8004e90:	60fb      	str	r3, [r7, #12]
			}
		}
	}
	return retTemp;
 8004e92:	68fb      	ldr	r3, [r7, #12]
}
 8004e94:	1c18      	adds	r0, r3, #0
 8004e96:	46bd      	mov	sp, r7
 8004e98:	b004      	add	sp, #16
 8004e9a:	bd80      	pop	{r7, pc}
 8004e9c:	20000348 	.word	0x20000348
 8004ea0:	3ca3d70a 	.word	0x3ca3d70a
 8004ea4:	43889333 	.word	0x43889333
 8004ea8:	41100000 	.word	0x41100000
 8004eac:	40a00000 	.word	0x40a00000

08004eb0 <mlx90614_init>:
//###################################################################################################
BML_StatusTypeDef mlx90614_init(void) {
 8004eb0:	b580      	push	{r7, lr}
 8004eb2:	af00      	add	r7, sp, #0
	memset(&mlx90614, 0, sizeof(mlx90614));
 8004eb4:	4b20      	ldr	r3, [pc, #128]	; (8004f38 <mlx90614_init+0x88>)
 8004eb6:	2234      	movs	r2, #52	; 0x34
 8004eb8:	2100      	movs	r1, #0
 8004eba:	0018      	movs	r0, r3
 8004ebc:	f000 f9a0 	bl	8005200 <memset>
	mlx90614.unit = MLX90614_UNIT_C;
 8004ec0:	4b1d      	ldr	r3, [pc, #116]	; (8004f38 <mlx90614_init+0x88>)
 8004ec2:	2202      	movs	r2, #2
 8004ec4:	701a      	strb	r2, [r3, #0]

	I2C_INIT(_MLX90614_I2C, _MLX90614_I2C_SPEED);
 8004ec6:	4a1d      	ldr	r2, [pc, #116]	; (8004f3c <mlx90614_init+0x8c>)
 8004ec8:	4b1d      	ldr	r3, [pc, #116]	; (8004f40 <mlx90614_init+0x90>)
 8004eca:	0011      	movs	r1, r2
 8004ecc:	0018      	movs	r0, r3
 8004ece:	f7ff fc1d 	bl	800470c <I2C_INIT>

//	if (HAL_I2C_IsDeviceReady(&_MLX90614_I2C, _MLX90614_I2C_ADDRESS, 1, 100)
//			!= HAL_OK)
//		return BML_ERROR;
	if(I2C_DeviceReady(_MLX90614_I2C, _MLX90614_I2C_ADDRESS, 100) != BML_OK){
 8004ed2:	4b1b      	ldr	r3, [pc, #108]	; (8004f40 <mlx90614_init+0x90>)
 8004ed4:	2264      	movs	r2, #100	; 0x64
 8004ed6:	215a      	movs	r1, #90	; 0x5a
 8004ed8:	0018      	movs	r0, r3
 8004eda:	f7ff fc53 	bl	8004784 <I2C_DeviceReady>
 8004ede:	1e03      	subs	r3, r0, #0
 8004ee0:	d001      	beq.n	8004ee6 <mlx90614_init+0x36>
		return BML_ERROR;
 8004ee2:	2301      	movs	r3, #1
 8004ee4:	e025      	b.n	8004f32 <mlx90614_init+0x82>
	}
	mlx90614_read16(MLX90614_REGISTER_CONFIG, (int16_t*) &mlx90614.configReg);
 8004ee6:	4b17      	ldr	r3, [pc, #92]	; (8004f44 <mlx90614_init+0x94>)
 8004ee8:	0019      	movs	r1, r3
 8004eea:	2025      	movs	r0, #37	; 0x25
 8004eec:	f7ff fe88 	bl	8004c00 <mlx90614_read16>
	if (mlx90614_readID(NULL) == BML_ERROR)
 8004ef0:	2000      	movs	r0, #0
 8004ef2:	f000 f839 	bl	8004f68 <mlx90614_readID>
 8004ef6:	0003      	movs	r3, r0
 8004ef8:	2b01      	cmp	r3, #1
 8004efa:	d101      	bne.n	8004f00 <mlx90614_init+0x50>
		return BML_ERROR;
 8004efc:	2301      	movs	r3, #1
 8004efe:	e018      	b.n	8004f32 <mlx90614_init+0x82>
	if (mlx90614_getEmissivity(NULL) == BML_ERROR)
 8004f00:	2000      	movs	r0, #0
 8004f02:	f000 f86d 	bl	8004fe0 <mlx90614_getEmissivity>
 8004f06:	0003      	movs	r3, r0
 8004f08:	2b01      	cmp	r3, #1
 8004f0a:	d101      	bne.n	8004f10 <mlx90614_init+0x60>
		return BML_ERROR;
 8004f0c:	2301      	movs	r3, #1
 8004f0e:	e010      	b.n	8004f32 <mlx90614_init+0x82>
	if (mlx90614_getMax(NULL) == BML_ERROR)
 8004f10:	2000      	movs	r0, #0
 8004f12:	f000 f8bb 	bl	800508c <mlx90614_getMax>
 8004f16:	0003      	movs	r3, r0
 8004f18:	2b01      	cmp	r3, #1
 8004f1a:	d101      	bne.n	8004f20 <mlx90614_init+0x70>
		return BML_ERROR;
 8004f1c:	2301      	movs	r3, #1
 8004f1e:	e008      	b.n	8004f32 <mlx90614_init+0x82>
	if (mlx90614_getMin(NULL) == BML_ERROR)
 8004f20:	2000      	movs	r0, #0
 8004f22:	f000 f8d5 	bl	80050d0 <mlx90614_getMin>
 8004f26:	0003      	movs	r3, r0
 8004f28:	2b01      	cmp	r3, #1
 8004f2a:	d101      	bne.n	8004f30 <mlx90614_init+0x80>
		return BML_ERROR;
 8004f2c:	2301      	movs	r3, #1
 8004f2e:	e000      	b.n	8004f32 <mlx90614_init+0x82>

	return BML_OK;
 8004f30:	2300      	movs	r3, #0
}
 8004f32:	0018      	movs	r0, r3
 8004f34:	46bd      	mov	sp, r7
 8004f36:	bd80      	pop	{r7, pc}
 8004f38:	20000348 	.word	0x20000348
 8004f3c:	2000090e 	.word	0x2000090e
 8004f40:	40005400 	.word	0x40005400
 8004f44:	20000378 	.word	0x20000378

08004f48 <mlx90614_setUnit>:
//###################################################################################################
void mlx90614_setUnit(MLX90614_UNIT_t MLX90614_UNIT_) {
 8004f48:	b580      	push	{r7, lr}
 8004f4a:	b082      	sub	sp, #8
 8004f4c:	af00      	add	r7, sp, #0
 8004f4e:	0002      	movs	r2, r0
 8004f50:	1dfb      	adds	r3, r7, #7
 8004f52:	701a      	strb	r2, [r3, #0]
	mlx90614.unit = MLX90614_UNIT_;
 8004f54:	4b03      	ldr	r3, [pc, #12]	; (8004f64 <mlx90614_setUnit+0x1c>)
 8004f56:	1dfa      	adds	r2, r7, #7
 8004f58:	7812      	ldrb	r2, [r2, #0]
 8004f5a:	701a      	strb	r2, [r3, #0]
}
 8004f5c:	46c0      	nop			; (mov r8, r8)
 8004f5e:	46bd      	mov	sp, r7
 8004f60:	b002      	add	sp, #8
 8004f62:	bd80      	pop	{r7, pc}
 8004f64:	20000348 	.word	0x20000348

08004f68 <mlx90614_readID>:
//###################################################################################################
BML_StatusTypeDef mlx90614_readID(int16_t *id) {
 8004f68:	b580      	push	{r7, lr}
 8004f6a:	b084      	sub	sp, #16
 8004f6c:	af00      	add	r7, sp, #0
 8004f6e:	6078      	str	r0, [r7, #4]
	for (int i = 0; i < 4; i++) {
 8004f70:	2300      	movs	r3, #0
 8004f72:	60fb      	str	r3, [r7, #12]
 8004f74:	e02a      	b.n	8004fcc <mlx90614_readID+0x64>
		int16_t temp = 0;
 8004f76:	210a      	movs	r1, #10
 8004f78:	187b      	adds	r3, r7, r1
 8004f7a:	2200      	movs	r2, #0
 8004f7c:	801a      	strh	r2, [r3, #0]
		if (mlx90614_read16(MLX90614_REGISTER_ID0 + i, &temp) == BML_ERROR)
 8004f7e:	68fb      	ldr	r3, [r7, #12]
 8004f80:	b2db      	uxtb	r3, r3
 8004f82:	333c      	adds	r3, #60	; 0x3c
 8004f84:	b2db      	uxtb	r3, r3
 8004f86:	187a      	adds	r2, r7, r1
 8004f88:	0011      	movs	r1, r2
 8004f8a:	0018      	movs	r0, r3
 8004f8c:	f7ff fe38 	bl	8004c00 <mlx90614_read16>
 8004f90:	0003      	movs	r3, r0
 8004f92:	2b01      	cmp	r3, #1
 8004f94:	d101      	bne.n	8004f9a <mlx90614_readID+0x32>
			return BML_ERROR;
 8004f96:	2301      	movs	r3, #1
 8004f98:	e01c      	b.n	8004fd4 <mlx90614_readID+0x6c>
		if (id != NULL)
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	d008      	beq.n	8004fb2 <mlx90614_readID+0x4a>
			id[i] = (uint16_t) temp;
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	005b      	lsls	r3, r3, #1
 8004fa4:	687a      	ldr	r2, [r7, #4]
 8004fa6:	18d3      	adds	r3, r2, r3
 8004fa8:	220a      	movs	r2, #10
 8004faa:	18ba      	adds	r2, r7, r2
 8004fac:	2100      	movs	r1, #0
 8004fae:	5e52      	ldrsh	r2, [r2, r1]
 8004fb0:	801a      	strh	r2, [r3, #0]
		mlx90614.id[i] = (uint16_t) temp;
 8004fb2:	230a      	movs	r3, #10
 8004fb4:	18fb      	adds	r3, r7, r3
 8004fb6:	2200      	movs	r2, #0
 8004fb8:	5e9b      	ldrsh	r3, [r3, r2]
 8004fba:	b299      	uxth	r1, r3
 8004fbc:	4b07      	ldr	r3, [pc, #28]	; (8004fdc <mlx90614_readID+0x74>)
 8004fbe:	68fa      	ldr	r2, [r7, #12]
 8004fc0:	3214      	adds	r2, #20
 8004fc2:	0052      	lsls	r2, r2, #1
 8004fc4:	52d1      	strh	r1, [r2, r3]
	for (int i = 0; i < 4; i++) {
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	3301      	adds	r3, #1
 8004fca:	60fb      	str	r3, [r7, #12]
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	2b03      	cmp	r3, #3
 8004fd0:	ddd1      	ble.n	8004f76 <mlx90614_readID+0xe>
	}
	return BML_OK;
 8004fd2:	2300      	movs	r3, #0
}
 8004fd4:	0018      	movs	r0, r3
 8004fd6:	46bd      	mov	sp, r7
 8004fd8:	b004      	add	sp, #16
 8004fda:	bd80      	pop	{r7, pc}
 8004fdc:	20000348 	.word	0x20000348

08004fe0 <mlx90614_getEmissivity>:
//###################################################################################################
BML_StatusTypeDef mlx90614_getEmissivity(float *emissivity) {
 8004fe0:	b580      	push	{r7, lr}
 8004fe2:	b082      	sub	sp, #8
 8004fe4:	af00      	add	r7, sp, #0
 8004fe6:	6078      	str	r0, [r7, #4]
	if (mlx90614_read16(MLX90614_REGISTER_KE, &mlx90614.rawEmissivity) == BML_OK) {
 8004fe8:	4b18      	ldr	r3, [pc, #96]	; (800504c <mlx90614_getEmissivity+0x6c>)
 8004fea:	0019      	movs	r1, r3
 8004fec:	2024      	movs	r0, #36	; 0x24
 8004fee:	f7ff fe07 	bl	8004c00 <mlx90614_read16>
 8004ff2:	1e03      	subs	r3, r0, #0
 8004ff4:	d124      	bne.n	8005040 <mlx90614_getEmissivity+0x60>
		mlx90614.emissivity = (((float) ((uint16_t) mlx90614.rawEmissivity))
 8004ff6:	4b16      	ldr	r3, [pc, #88]	; (8005050 <mlx90614_getEmissivity+0x70>)
 8004ff8:	2202      	movs	r2, #2
 8004ffa:	5e9b      	ldrsh	r3, [r3, r2]
 8004ffc:	b29b      	uxth	r3, r3
 8004ffe:	0018      	movs	r0, r3
 8005000:	f7fc f84a 	bl	8001098 <__aeabi_ui2f>
 8005004:	1c03      	adds	r3, r0, #0
				/ 65535.0f);
 8005006:	4913      	ldr	r1, [pc, #76]	; (8005054 <mlx90614_getEmissivity+0x74>)
 8005008:	1c18      	adds	r0, r3, #0
 800500a:	f7fb fbeb 	bl	80007e4 <__aeabi_fdiv>
 800500e:	1c03      	adds	r3, r0, #0
 8005010:	1c1a      	adds	r2, r3, #0
		mlx90614.emissivity = (((float) ((uint16_t) mlx90614.rawEmissivity))
 8005012:	4b0f      	ldr	r3, [pc, #60]	; (8005050 <mlx90614_getEmissivity+0x70>)
 8005014:	611a      	str	r2, [r3, #16]
		if (emissivity != NULL)
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	2b00      	cmp	r3, #0
 800501a:	d00f      	beq.n	800503c <mlx90614_getEmissivity+0x5c>
			*emissivity = (((float) ((uint16_t) mlx90614.rawEmissivity))
 800501c:	4b0c      	ldr	r3, [pc, #48]	; (8005050 <mlx90614_getEmissivity+0x70>)
 800501e:	2202      	movs	r2, #2
 8005020:	5e9b      	ldrsh	r3, [r3, r2]
 8005022:	b29b      	uxth	r3, r3
 8005024:	0018      	movs	r0, r3
 8005026:	f7fc f837 	bl	8001098 <__aeabi_ui2f>
 800502a:	1c03      	adds	r3, r0, #0
					/ 65535.0f);
 800502c:	4909      	ldr	r1, [pc, #36]	; (8005054 <mlx90614_getEmissivity+0x74>)
 800502e:	1c18      	adds	r0, r3, #0
 8005030:	f7fb fbd8 	bl	80007e4 <__aeabi_fdiv>
 8005034:	1c03      	adds	r3, r0, #0
 8005036:	1c1a      	adds	r2, r3, #0
			*emissivity = (((float) ((uint16_t) mlx90614.rawEmissivity))
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	601a      	str	r2, [r3, #0]
		return BML_OK;
 800503c:	2300      	movs	r3, #0
 800503e:	e000      	b.n	8005042 <mlx90614_getEmissivity+0x62>
	}
	return BML_ERROR;
 8005040:	2301      	movs	r3, #1
}
 8005042:	0018      	movs	r0, r3
 8005044:	46bd      	mov	sp, r7
 8005046:	b002      	add	sp, #8
 8005048:	bd80      	pop	{r7, pc}
 800504a:	46c0      	nop			; (mov r8, r8)
 800504c:	2000034a 	.word	0x2000034a
 8005050:	20000348 	.word	0x20000348
 8005054:	477fff00 	.word	0x477fff00

08005058 <mlx90614_setMax>:
		mlx90614.rawEmissivity = 0x2000;
	return mlx90614_write16(MLX90614_REGISTER_KE,
			(int16_t) mlx90614.rawEmissivity);
}
//###################################################################################################
BML_StatusTypeDef mlx90614_setMax(float maxTemp) {
 8005058:	b580      	push	{r7, lr}
 800505a:	b082      	sub	sp, #8
 800505c:	af00      	add	r7, sp, #0
 800505e:	6078      	str	r0, [r7, #4]
	mlx90614.rawMax = mlx90614_calcRawTemp(maxTemp);
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	1c18      	adds	r0, r3, #0
 8005064:	f7ff fe7a 	bl	8004d5c <mlx90614_calcRawTemp>
 8005068:	0003      	movs	r3, r0
 800506a:	001a      	movs	r2, r3
 800506c:	4b06      	ldr	r3, [pc, #24]	; (8005088 <mlx90614_setMax+0x30>)
 800506e:	815a      	strh	r2, [r3, #10]
	return mlx90614_write16(MLX90614_REGISTER_TOMAX, mlx90614.rawMax);
 8005070:	4b05      	ldr	r3, [pc, #20]	; (8005088 <mlx90614_setMax+0x30>)
 8005072:	220a      	movs	r2, #10
 8005074:	5e9b      	ldrsh	r3, [r3, r2]
 8005076:	0019      	movs	r1, r3
 8005078:	2020      	movs	r0, #32
 800507a:	f7ff fdeb 	bl	8004c54 <mlx90614_write16>
 800507e:	0003      	movs	r3, r0
}
 8005080:	0018      	movs	r0, r3
 8005082:	46bd      	mov	sp, r7
 8005084:	b002      	add	sp, #8
 8005086:	bd80      	pop	{r7, pc}
 8005088:	20000348 	.word	0x20000348

0800508c <mlx90614_getMax>:
BML_StatusTypeDef mlx90614_setMin(float minTemp) {
	mlx90614.rawMin = mlx90614_calcRawTemp(minTemp);
	return mlx90614_write16(MLX90614_REGISTER_TOMIN, mlx90614.rawMin);
}
//###################################################################################################
BML_StatusTypeDef mlx90614_getMax(float *maxTemp) {
 800508c:	b580      	push	{r7, lr}
 800508e:	b082      	sub	sp, #8
 8005090:	af00      	add	r7, sp, #0
 8005092:	6078      	str	r0, [r7, #4]
	if (mlx90614_read16(MLX90614_REGISTER_TOMAX, &mlx90614.rawMax) == BML_OK) {
 8005094:	4b0c      	ldr	r3, [pc, #48]	; (80050c8 <mlx90614_getMax+0x3c>)
 8005096:	0019      	movs	r1, r3
 8005098:	2020      	movs	r0, #32
 800509a:	f7ff fdb1 	bl	8004c00 <mlx90614_read16>
 800509e:	1e03      	subs	r3, r0, #0
 80050a0:	d10d      	bne.n	80050be <mlx90614_getMax+0x32>
		if (maxTemp != NULL)
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d008      	beq.n	80050ba <mlx90614_getMax+0x2e>
			*maxTemp = mlx90614.rawMax;
 80050a8:	4b08      	ldr	r3, [pc, #32]	; (80050cc <mlx90614_getMax+0x40>)
 80050aa:	220a      	movs	r2, #10
 80050ac:	5e9b      	ldrsh	r3, [r3, r2]
 80050ae:	0018      	movs	r0, r3
 80050b0:	f7fb ffa4 	bl	8000ffc <__aeabi_i2f>
 80050b4:	1c02      	adds	r2, r0, #0
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	601a      	str	r2, [r3, #0]
		return BML_OK;
 80050ba:	2300      	movs	r3, #0
 80050bc:	e000      	b.n	80050c0 <mlx90614_getMax+0x34>
	}
	return BML_ERROR;
 80050be:	2301      	movs	r3, #1
}
 80050c0:	0018      	movs	r0, r3
 80050c2:	46bd      	mov	sp, r7
 80050c4:	b002      	add	sp, #8
 80050c6:	bd80      	pop	{r7, pc}
 80050c8:	20000352 	.word	0x20000352
 80050cc:	20000348 	.word	0x20000348

080050d0 <mlx90614_getMin>:
//###################################################################################################
BML_StatusTypeDef mlx90614_getMin(float *minTemp) {
 80050d0:	b580      	push	{r7, lr}
 80050d2:	b082      	sub	sp, #8
 80050d4:	af00      	add	r7, sp, #0
 80050d6:	6078      	str	r0, [r7, #4]
	if (mlx90614_read16(MLX90614_REGISTER_TOMIN, &mlx90614.rawMin) == BML_OK) {
 80050d8:	4b0c      	ldr	r3, [pc, #48]	; (800510c <mlx90614_getMin+0x3c>)
 80050da:	0019      	movs	r1, r3
 80050dc:	2021      	movs	r0, #33	; 0x21
 80050de:	f7ff fd8f 	bl	8004c00 <mlx90614_read16>
 80050e2:	1e03      	subs	r3, r0, #0
 80050e4:	d10d      	bne.n	8005102 <mlx90614_getMin+0x32>
		if (minTemp != NULL)
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	2b00      	cmp	r3, #0
 80050ea:	d008      	beq.n	80050fe <mlx90614_getMin+0x2e>
			*minTemp = mlx90614.rawMin;
 80050ec:	4b08      	ldr	r3, [pc, #32]	; (8005110 <mlx90614_getMin+0x40>)
 80050ee:	220c      	movs	r2, #12
 80050f0:	5e9b      	ldrsh	r3, [r3, r2]
 80050f2:	0018      	movs	r0, r3
 80050f4:	f7fb ff82 	bl	8000ffc <__aeabi_i2f>
 80050f8:	1c02      	adds	r2, r0, #0
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	601a      	str	r2, [r3, #0]
		return BML_OK;
 80050fe:	2300      	movs	r3, #0
 8005100:	e000      	b.n	8005104 <mlx90614_getMin+0x34>
	}
	return BML_ERROR;
 8005102:	2301      	movs	r3, #1
}
 8005104:	0018      	movs	r0, r3
 8005106:	46bd      	mov	sp, r7
 8005108:	b002      	add	sp, #8
 800510a:	bd80      	pop	{r7, pc}
 800510c:	20000354 	.word	0x20000354
 8005110:	20000348 	.word	0x20000348

08005114 <mlx90614_getAmbient>:
//###################################################################################################
BML_StatusTypeDef mlx90614_getAmbient(float *ambientTemp) {
 8005114:	b580      	push	{r7, lr}
 8005116:	b082      	sub	sp, #8
 8005118:	af00      	add	r7, sp, #0
 800511a:	6078      	str	r0, [r7, #4]
	if (mlx90614_read16(MLX90614_REGISTER_TA, &mlx90614.rawAmbient) == BML_OK) {
 800511c:	4b0c      	ldr	r3, [pc, #48]	; (8005150 <mlx90614_getAmbient+0x3c>)
 800511e:	0019      	movs	r1, r3
 8005120:	2006      	movs	r0, #6
 8005122:	f7ff fd6d 	bl	8004c00 <mlx90614_read16>
 8005126:	1e03      	subs	r3, r0, #0
 8005128:	d10d      	bne.n	8005146 <mlx90614_getAmbient+0x32>
		if (ambientTemp != NULL)
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	2b00      	cmp	r3, #0
 800512e:	d008      	beq.n	8005142 <mlx90614_getAmbient+0x2e>
			*ambientTemp = mlx90614_calcTemperature(mlx90614.rawAmbient);
 8005130:	4b08      	ldr	r3, [pc, #32]	; (8005154 <mlx90614_getAmbient+0x40>)
 8005132:	2204      	movs	r2, #4
 8005134:	5e9b      	ldrsh	r3, [r3, r2]
 8005136:	0018      	movs	r0, r3
 8005138:	f7ff fe6c 	bl	8004e14 <mlx90614_calcTemperature>
 800513c:	1c02      	adds	r2, r0, #0
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	601a      	str	r2, [r3, #0]
		return BML_OK;
 8005142:	2300      	movs	r3, #0
 8005144:	e000      	b.n	8005148 <mlx90614_getAmbient+0x34>
	}
	return BML_ERROR;
 8005146:	2301      	movs	r3, #1
}
 8005148:	0018      	movs	r0, r3
 800514a:	46bd      	mov	sp, r7
 800514c:	b002      	add	sp, #8
 800514e:	bd80      	pop	{r7, pc}
 8005150:	2000034c 	.word	0x2000034c
 8005154:	20000348 	.word	0x20000348

08005158 <mlx90614_getObject1>:
//###################################################################################################
BML_StatusTypeDef mlx90614_getObject1(float *objectTemp) {
 8005158:	b580      	push	{r7, lr}
 800515a:	b082      	sub	sp, #8
 800515c:	af00      	add	r7, sp, #0
 800515e:	6078      	str	r0, [r7, #4]
	if (mlx90614_read16(MLX90614_REGISTER_TOBJ1, &mlx90614.rawObject1) == BML_OK) {
 8005160:	4b10      	ldr	r3, [pc, #64]	; (80051a4 <mlx90614_getObject1+0x4c>)
 8005162:	0019      	movs	r1, r3
 8005164:	2007      	movs	r0, #7
 8005166:	f7ff fd4b 	bl	8004c00 <mlx90614_read16>
 800516a:	1e03      	subs	r3, r0, #0
 800516c:	d114      	bne.n	8005198 <mlx90614_getObject1+0x40>
		if (mlx90614.rawObject1 & 0x8000)
 800516e:	4b0e      	ldr	r3, [pc, #56]	; (80051a8 <mlx90614_getObject1+0x50>)
 8005170:	2206      	movs	r2, #6
 8005172:	5e9b      	ldrsh	r3, [r3, r2]
 8005174:	2b00      	cmp	r3, #0
 8005176:	da01      	bge.n	800517c <mlx90614_getObject1+0x24>
			return BML_ERROR;
 8005178:	2301      	movs	r3, #1
 800517a:	e00e      	b.n	800519a <mlx90614_getObject1+0x42>
		if (objectTemp != NULL)
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	2b00      	cmp	r3, #0
 8005180:	d008      	beq.n	8005194 <mlx90614_getObject1+0x3c>
			*objectTemp = mlx90614_calcTemperature(mlx90614.rawObject1);
 8005182:	4b09      	ldr	r3, [pc, #36]	; (80051a8 <mlx90614_getObject1+0x50>)
 8005184:	2206      	movs	r2, #6
 8005186:	5e9b      	ldrsh	r3, [r3, r2]
 8005188:	0018      	movs	r0, r3
 800518a:	f7ff fe43 	bl	8004e14 <mlx90614_calcTemperature>
 800518e:	1c02      	adds	r2, r0, #0
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	601a      	str	r2, [r3, #0]
		return BML_OK;
 8005194:	2300      	movs	r3, #0
 8005196:	e000      	b.n	800519a <mlx90614_getObject1+0x42>
	}
	return BML_ERROR;
 8005198:	2301      	movs	r3, #1
}
 800519a:	0018      	movs	r0, r3
 800519c:	46bd      	mov	sp, r7
 800519e:	b002      	add	sp, #8
 80051a0:	bd80      	pop	{r7, pc}
 80051a2:	46c0      	nop			; (mov r8, r8)
 80051a4:	2000034e 	.word	0x2000034e
 80051a8:	20000348 	.word	0x20000348

080051ac <__errno>:
 80051ac:	4b01      	ldr	r3, [pc, #4]	; (80051b4 <__errno+0x8>)
 80051ae:	6818      	ldr	r0, [r3, #0]
 80051b0:	4770      	bx	lr
 80051b2:	46c0      	nop			; (mov r8, r8)
 80051b4:	2000004c 	.word	0x2000004c

080051b8 <__libc_init_array>:
 80051b8:	b570      	push	{r4, r5, r6, lr}
 80051ba:	2600      	movs	r6, #0
 80051bc:	4d0c      	ldr	r5, [pc, #48]	; (80051f0 <__libc_init_array+0x38>)
 80051be:	4c0d      	ldr	r4, [pc, #52]	; (80051f4 <__libc_init_array+0x3c>)
 80051c0:	1b64      	subs	r4, r4, r5
 80051c2:	10a4      	asrs	r4, r4, #2
 80051c4:	42a6      	cmp	r6, r4
 80051c6:	d109      	bne.n	80051dc <__libc_init_array+0x24>
 80051c8:	2600      	movs	r6, #0
 80051ca:	f002 ffd3 	bl	8008174 <_init>
 80051ce:	4d0a      	ldr	r5, [pc, #40]	; (80051f8 <__libc_init_array+0x40>)
 80051d0:	4c0a      	ldr	r4, [pc, #40]	; (80051fc <__libc_init_array+0x44>)
 80051d2:	1b64      	subs	r4, r4, r5
 80051d4:	10a4      	asrs	r4, r4, #2
 80051d6:	42a6      	cmp	r6, r4
 80051d8:	d105      	bne.n	80051e6 <__libc_init_array+0x2e>
 80051da:	bd70      	pop	{r4, r5, r6, pc}
 80051dc:	00b3      	lsls	r3, r6, #2
 80051de:	58eb      	ldr	r3, [r5, r3]
 80051e0:	4798      	blx	r3
 80051e2:	3601      	adds	r6, #1
 80051e4:	e7ee      	b.n	80051c4 <__libc_init_array+0xc>
 80051e6:	00b3      	lsls	r3, r6, #2
 80051e8:	58eb      	ldr	r3, [r5, r3]
 80051ea:	4798      	blx	r3
 80051ec:	3601      	adds	r6, #1
 80051ee:	e7f2      	b.n	80051d6 <__libc_init_array+0x1e>
 80051f0:	0800880c 	.word	0x0800880c
 80051f4:	0800880c 	.word	0x0800880c
 80051f8:	0800880c 	.word	0x0800880c
 80051fc:	08008810 	.word	0x08008810

08005200 <memset>:
 8005200:	0003      	movs	r3, r0
 8005202:	1882      	adds	r2, r0, r2
 8005204:	4293      	cmp	r3, r2
 8005206:	d100      	bne.n	800520a <memset+0xa>
 8005208:	4770      	bx	lr
 800520a:	7019      	strb	r1, [r3, #0]
 800520c:	3301      	adds	r3, #1
 800520e:	e7f9      	b.n	8005204 <memset+0x4>

08005210 <__cvt>:
 8005210:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005212:	001e      	movs	r6, r3
 8005214:	2300      	movs	r3, #0
 8005216:	0014      	movs	r4, r2
 8005218:	b08b      	sub	sp, #44	; 0x2c
 800521a:	429e      	cmp	r6, r3
 800521c:	da04      	bge.n	8005228 <__cvt+0x18>
 800521e:	2180      	movs	r1, #128	; 0x80
 8005220:	0609      	lsls	r1, r1, #24
 8005222:	1873      	adds	r3, r6, r1
 8005224:	001e      	movs	r6, r3
 8005226:	232d      	movs	r3, #45	; 0x2d
 8005228:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800522a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800522c:	7013      	strb	r3, [r2, #0]
 800522e:	2320      	movs	r3, #32
 8005230:	2203      	movs	r2, #3
 8005232:	439f      	bics	r7, r3
 8005234:	2f46      	cmp	r7, #70	; 0x46
 8005236:	d007      	beq.n	8005248 <__cvt+0x38>
 8005238:	003b      	movs	r3, r7
 800523a:	3b45      	subs	r3, #69	; 0x45
 800523c:	4259      	negs	r1, r3
 800523e:	414b      	adcs	r3, r1
 8005240:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005242:	3a01      	subs	r2, #1
 8005244:	18cb      	adds	r3, r1, r3
 8005246:	9310      	str	r3, [sp, #64]	; 0x40
 8005248:	ab09      	add	r3, sp, #36	; 0x24
 800524a:	9304      	str	r3, [sp, #16]
 800524c:	ab08      	add	r3, sp, #32
 800524e:	9303      	str	r3, [sp, #12]
 8005250:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005252:	9200      	str	r2, [sp, #0]
 8005254:	9302      	str	r3, [sp, #8]
 8005256:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005258:	0022      	movs	r2, r4
 800525a:	9301      	str	r3, [sp, #4]
 800525c:	0033      	movs	r3, r6
 800525e:	f000 fd09 	bl	8005c74 <_dtoa_r>
 8005262:	0005      	movs	r5, r0
 8005264:	2f47      	cmp	r7, #71	; 0x47
 8005266:	d102      	bne.n	800526e <__cvt+0x5e>
 8005268:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800526a:	07db      	lsls	r3, r3, #31
 800526c:	d528      	bpl.n	80052c0 <__cvt+0xb0>
 800526e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005270:	18eb      	adds	r3, r5, r3
 8005272:	9307      	str	r3, [sp, #28]
 8005274:	2f46      	cmp	r7, #70	; 0x46
 8005276:	d114      	bne.n	80052a2 <__cvt+0x92>
 8005278:	782b      	ldrb	r3, [r5, #0]
 800527a:	2b30      	cmp	r3, #48	; 0x30
 800527c:	d10c      	bne.n	8005298 <__cvt+0x88>
 800527e:	2200      	movs	r2, #0
 8005280:	2300      	movs	r3, #0
 8005282:	0020      	movs	r0, r4
 8005284:	0031      	movs	r1, r6
 8005286:	f7fb f8e1 	bl	800044c <__aeabi_dcmpeq>
 800528a:	2800      	cmp	r0, #0
 800528c:	d104      	bne.n	8005298 <__cvt+0x88>
 800528e:	2301      	movs	r3, #1
 8005290:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005292:	1a9b      	subs	r3, r3, r2
 8005294:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005296:	6013      	str	r3, [r2, #0]
 8005298:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800529a:	9a07      	ldr	r2, [sp, #28]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	18d3      	adds	r3, r2, r3
 80052a0:	9307      	str	r3, [sp, #28]
 80052a2:	2200      	movs	r2, #0
 80052a4:	2300      	movs	r3, #0
 80052a6:	0020      	movs	r0, r4
 80052a8:	0031      	movs	r1, r6
 80052aa:	f7fb f8cf 	bl	800044c <__aeabi_dcmpeq>
 80052ae:	2800      	cmp	r0, #0
 80052b0:	d001      	beq.n	80052b6 <__cvt+0xa6>
 80052b2:	9b07      	ldr	r3, [sp, #28]
 80052b4:	9309      	str	r3, [sp, #36]	; 0x24
 80052b6:	2230      	movs	r2, #48	; 0x30
 80052b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052ba:	9907      	ldr	r1, [sp, #28]
 80052bc:	428b      	cmp	r3, r1
 80052be:	d306      	bcc.n	80052ce <__cvt+0xbe>
 80052c0:	0028      	movs	r0, r5
 80052c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052c4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80052c6:	1b5b      	subs	r3, r3, r5
 80052c8:	6013      	str	r3, [r2, #0]
 80052ca:	b00b      	add	sp, #44	; 0x2c
 80052cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80052ce:	1c59      	adds	r1, r3, #1
 80052d0:	9109      	str	r1, [sp, #36]	; 0x24
 80052d2:	701a      	strb	r2, [r3, #0]
 80052d4:	e7f0      	b.n	80052b8 <__cvt+0xa8>

080052d6 <__exponent>:
 80052d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80052d8:	1c83      	adds	r3, r0, #2
 80052da:	b087      	sub	sp, #28
 80052dc:	9303      	str	r3, [sp, #12]
 80052de:	0005      	movs	r5, r0
 80052e0:	000c      	movs	r4, r1
 80052e2:	232b      	movs	r3, #43	; 0x2b
 80052e4:	7002      	strb	r2, [r0, #0]
 80052e6:	2900      	cmp	r1, #0
 80052e8:	da01      	bge.n	80052ee <__exponent+0x18>
 80052ea:	424c      	negs	r4, r1
 80052ec:	3302      	adds	r3, #2
 80052ee:	706b      	strb	r3, [r5, #1]
 80052f0:	2c09      	cmp	r4, #9
 80052f2:	dd31      	ble.n	8005358 <__exponent+0x82>
 80052f4:	270a      	movs	r7, #10
 80052f6:	ab04      	add	r3, sp, #16
 80052f8:	1dde      	adds	r6, r3, #7
 80052fa:	0020      	movs	r0, r4
 80052fc:	0039      	movs	r1, r7
 80052fe:	9601      	str	r6, [sp, #4]
 8005300:	f7fb f88e 	bl	8000420 <__aeabi_idivmod>
 8005304:	3e01      	subs	r6, #1
 8005306:	3130      	adds	r1, #48	; 0x30
 8005308:	0020      	movs	r0, r4
 800530a:	7031      	strb	r1, [r6, #0]
 800530c:	0039      	movs	r1, r7
 800530e:	9402      	str	r4, [sp, #8]
 8005310:	f7fa ffa0 	bl	8000254 <__divsi3>
 8005314:	9b02      	ldr	r3, [sp, #8]
 8005316:	0004      	movs	r4, r0
 8005318:	2b63      	cmp	r3, #99	; 0x63
 800531a:	dcee      	bgt.n	80052fa <__exponent+0x24>
 800531c:	9b01      	ldr	r3, [sp, #4]
 800531e:	3430      	adds	r4, #48	; 0x30
 8005320:	1e9a      	subs	r2, r3, #2
 8005322:	0013      	movs	r3, r2
 8005324:	9903      	ldr	r1, [sp, #12]
 8005326:	7014      	strb	r4, [r2, #0]
 8005328:	a804      	add	r0, sp, #16
 800532a:	3007      	adds	r0, #7
 800532c:	4298      	cmp	r0, r3
 800532e:	d80e      	bhi.n	800534e <__exponent+0x78>
 8005330:	ab04      	add	r3, sp, #16
 8005332:	3307      	adds	r3, #7
 8005334:	2000      	movs	r0, #0
 8005336:	429a      	cmp	r2, r3
 8005338:	d804      	bhi.n	8005344 <__exponent+0x6e>
 800533a:	ab04      	add	r3, sp, #16
 800533c:	3009      	adds	r0, #9
 800533e:	18c0      	adds	r0, r0, r3
 8005340:	9b01      	ldr	r3, [sp, #4]
 8005342:	1ac0      	subs	r0, r0, r3
 8005344:	9b03      	ldr	r3, [sp, #12]
 8005346:	1818      	adds	r0, r3, r0
 8005348:	1b40      	subs	r0, r0, r5
 800534a:	b007      	add	sp, #28
 800534c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800534e:	7818      	ldrb	r0, [r3, #0]
 8005350:	3301      	adds	r3, #1
 8005352:	7008      	strb	r0, [r1, #0]
 8005354:	3101      	adds	r1, #1
 8005356:	e7e7      	b.n	8005328 <__exponent+0x52>
 8005358:	2330      	movs	r3, #48	; 0x30
 800535a:	18e4      	adds	r4, r4, r3
 800535c:	70ab      	strb	r3, [r5, #2]
 800535e:	1d28      	adds	r0, r5, #4
 8005360:	70ec      	strb	r4, [r5, #3]
 8005362:	e7f1      	b.n	8005348 <__exponent+0x72>

08005364 <_printf_float>:
 8005364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005366:	b095      	sub	sp, #84	; 0x54
 8005368:	000c      	movs	r4, r1
 800536a:	9209      	str	r2, [sp, #36]	; 0x24
 800536c:	001e      	movs	r6, r3
 800536e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8005370:	0007      	movs	r7, r0
 8005372:	f001 fa99 	bl	80068a8 <_localeconv_r>
 8005376:	6803      	ldr	r3, [r0, #0]
 8005378:	0018      	movs	r0, r3
 800537a:	930c      	str	r3, [sp, #48]	; 0x30
 800537c:	f7fa fec4 	bl	8000108 <strlen>
 8005380:	2300      	movs	r3, #0
 8005382:	9312      	str	r3, [sp, #72]	; 0x48
 8005384:	7e23      	ldrb	r3, [r4, #24]
 8005386:	2207      	movs	r2, #7
 8005388:	930a      	str	r3, [sp, #40]	; 0x28
 800538a:	6823      	ldr	r3, [r4, #0]
 800538c:	900e      	str	r0, [sp, #56]	; 0x38
 800538e:	930d      	str	r3, [sp, #52]	; 0x34
 8005390:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005392:	682b      	ldr	r3, [r5, #0]
 8005394:	05c9      	lsls	r1, r1, #23
 8005396:	d547      	bpl.n	8005428 <_printf_float+0xc4>
 8005398:	189b      	adds	r3, r3, r2
 800539a:	4393      	bics	r3, r2
 800539c:	001a      	movs	r2, r3
 800539e:	3208      	adds	r2, #8
 80053a0:	602a      	str	r2, [r5, #0]
 80053a2:	681a      	ldr	r2, [r3, #0]
 80053a4:	685b      	ldr	r3, [r3, #4]
 80053a6:	64a2      	str	r2, [r4, #72]	; 0x48
 80053a8:	64e3      	str	r3, [r4, #76]	; 0x4c
 80053aa:	2201      	movs	r2, #1
 80053ac:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80053ae:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80053b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80053b2:	006b      	lsls	r3, r5, #1
 80053b4:	085b      	lsrs	r3, r3, #1
 80053b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80053b8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80053ba:	4ba7      	ldr	r3, [pc, #668]	; (8005658 <_printf_float+0x2f4>)
 80053bc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80053be:	4252      	negs	r2, r2
 80053c0:	f7fd fbe8 	bl	8002b94 <__aeabi_dcmpun>
 80053c4:	2800      	cmp	r0, #0
 80053c6:	d131      	bne.n	800542c <_printf_float+0xc8>
 80053c8:	2201      	movs	r2, #1
 80053ca:	4ba3      	ldr	r3, [pc, #652]	; (8005658 <_printf_float+0x2f4>)
 80053cc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80053ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80053d0:	4252      	negs	r2, r2
 80053d2:	f7fb f84b 	bl	800046c <__aeabi_dcmple>
 80053d6:	2800      	cmp	r0, #0
 80053d8:	d128      	bne.n	800542c <_printf_float+0xc8>
 80053da:	2200      	movs	r2, #0
 80053dc:	2300      	movs	r3, #0
 80053de:	0029      	movs	r1, r5
 80053e0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80053e2:	f7fb f839 	bl	8000458 <__aeabi_dcmplt>
 80053e6:	2800      	cmp	r0, #0
 80053e8:	d003      	beq.n	80053f2 <_printf_float+0x8e>
 80053ea:	0023      	movs	r3, r4
 80053ec:	222d      	movs	r2, #45	; 0x2d
 80053ee:	3343      	adds	r3, #67	; 0x43
 80053f0:	701a      	strb	r2, [r3, #0]
 80053f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053f4:	4d99      	ldr	r5, [pc, #612]	; (800565c <_printf_float+0x2f8>)
 80053f6:	2b47      	cmp	r3, #71	; 0x47
 80053f8:	d900      	bls.n	80053fc <_printf_float+0x98>
 80053fa:	4d99      	ldr	r5, [pc, #612]	; (8005660 <_printf_float+0x2fc>)
 80053fc:	2303      	movs	r3, #3
 80053fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005400:	6123      	str	r3, [r4, #16]
 8005402:	3301      	adds	r3, #1
 8005404:	439a      	bics	r2, r3
 8005406:	2300      	movs	r3, #0
 8005408:	6022      	str	r2, [r4, #0]
 800540a:	930b      	str	r3, [sp, #44]	; 0x2c
 800540c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800540e:	0021      	movs	r1, r4
 8005410:	0038      	movs	r0, r7
 8005412:	9600      	str	r6, [sp, #0]
 8005414:	aa13      	add	r2, sp, #76	; 0x4c
 8005416:	f000 f9e7 	bl	80057e8 <_printf_common>
 800541a:	1c43      	adds	r3, r0, #1
 800541c:	d000      	beq.n	8005420 <_printf_float+0xbc>
 800541e:	e0a2      	b.n	8005566 <_printf_float+0x202>
 8005420:	2001      	movs	r0, #1
 8005422:	4240      	negs	r0, r0
 8005424:	b015      	add	sp, #84	; 0x54
 8005426:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005428:	3307      	adds	r3, #7
 800542a:	e7b6      	b.n	800539a <_printf_float+0x36>
 800542c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800542e:	002b      	movs	r3, r5
 8005430:	0010      	movs	r0, r2
 8005432:	0029      	movs	r1, r5
 8005434:	f7fd fbae 	bl	8002b94 <__aeabi_dcmpun>
 8005438:	2800      	cmp	r0, #0
 800543a:	d00b      	beq.n	8005454 <_printf_float+0xf0>
 800543c:	2d00      	cmp	r5, #0
 800543e:	da03      	bge.n	8005448 <_printf_float+0xe4>
 8005440:	0023      	movs	r3, r4
 8005442:	222d      	movs	r2, #45	; 0x2d
 8005444:	3343      	adds	r3, #67	; 0x43
 8005446:	701a      	strb	r2, [r3, #0]
 8005448:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800544a:	4d86      	ldr	r5, [pc, #536]	; (8005664 <_printf_float+0x300>)
 800544c:	2b47      	cmp	r3, #71	; 0x47
 800544e:	d9d5      	bls.n	80053fc <_printf_float+0x98>
 8005450:	4d85      	ldr	r5, [pc, #532]	; (8005668 <_printf_float+0x304>)
 8005452:	e7d3      	b.n	80053fc <_printf_float+0x98>
 8005454:	2220      	movs	r2, #32
 8005456:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005458:	6863      	ldr	r3, [r4, #4]
 800545a:	4391      	bics	r1, r2
 800545c:	910f      	str	r1, [sp, #60]	; 0x3c
 800545e:	1c5a      	adds	r2, r3, #1
 8005460:	d149      	bne.n	80054f6 <_printf_float+0x192>
 8005462:	3307      	adds	r3, #7
 8005464:	6063      	str	r3, [r4, #4]
 8005466:	2380      	movs	r3, #128	; 0x80
 8005468:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800546a:	00db      	lsls	r3, r3, #3
 800546c:	4313      	orrs	r3, r2
 800546e:	2200      	movs	r2, #0
 8005470:	9206      	str	r2, [sp, #24]
 8005472:	aa12      	add	r2, sp, #72	; 0x48
 8005474:	9205      	str	r2, [sp, #20]
 8005476:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005478:	a908      	add	r1, sp, #32
 800547a:	9204      	str	r2, [sp, #16]
 800547c:	aa11      	add	r2, sp, #68	; 0x44
 800547e:	9203      	str	r2, [sp, #12]
 8005480:	2223      	movs	r2, #35	; 0x23
 8005482:	6023      	str	r3, [r4, #0]
 8005484:	9301      	str	r3, [sp, #4]
 8005486:	6863      	ldr	r3, [r4, #4]
 8005488:	1852      	adds	r2, r2, r1
 800548a:	9202      	str	r2, [sp, #8]
 800548c:	9300      	str	r3, [sp, #0]
 800548e:	0038      	movs	r0, r7
 8005490:	002b      	movs	r3, r5
 8005492:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005494:	f7ff febc 	bl	8005210 <__cvt>
 8005498:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800549a:	0005      	movs	r5, r0
 800549c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800549e:	2b47      	cmp	r3, #71	; 0x47
 80054a0:	d108      	bne.n	80054b4 <_printf_float+0x150>
 80054a2:	1ccb      	adds	r3, r1, #3
 80054a4:	db02      	blt.n	80054ac <_printf_float+0x148>
 80054a6:	6863      	ldr	r3, [r4, #4]
 80054a8:	4299      	cmp	r1, r3
 80054aa:	dd48      	ble.n	800553e <_printf_float+0x1da>
 80054ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80054ae:	3b02      	subs	r3, #2
 80054b0:	b2db      	uxtb	r3, r3
 80054b2:	930a      	str	r3, [sp, #40]	; 0x28
 80054b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80054b6:	2b65      	cmp	r3, #101	; 0x65
 80054b8:	d824      	bhi.n	8005504 <_printf_float+0x1a0>
 80054ba:	0020      	movs	r0, r4
 80054bc:	001a      	movs	r2, r3
 80054be:	3901      	subs	r1, #1
 80054c0:	3050      	adds	r0, #80	; 0x50
 80054c2:	9111      	str	r1, [sp, #68]	; 0x44
 80054c4:	f7ff ff07 	bl	80052d6 <__exponent>
 80054c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80054ca:	900b      	str	r0, [sp, #44]	; 0x2c
 80054cc:	1813      	adds	r3, r2, r0
 80054ce:	6123      	str	r3, [r4, #16]
 80054d0:	2a01      	cmp	r2, #1
 80054d2:	dc02      	bgt.n	80054da <_printf_float+0x176>
 80054d4:	6822      	ldr	r2, [r4, #0]
 80054d6:	07d2      	lsls	r2, r2, #31
 80054d8:	d501      	bpl.n	80054de <_printf_float+0x17a>
 80054da:	3301      	adds	r3, #1
 80054dc:	6123      	str	r3, [r4, #16]
 80054de:	2323      	movs	r3, #35	; 0x23
 80054e0:	aa08      	add	r2, sp, #32
 80054e2:	189b      	adds	r3, r3, r2
 80054e4:	781b      	ldrb	r3, [r3, #0]
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	d100      	bne.n	80054ec <_printf_float+0x188>
 80054ea:	e78f      	b.n	800540c <_printf_float+0xa8>
 80054ec:	0023      	movs	r3, r4
 80054ee:	222d      	movs	r2, #45	; 0x2d
 80054f0:	3343      	adds	r3, #67	; 0x43
 80054f2:	701a      	strb	r2, [r3, #0]
 80054f4:	e78a      	b.n	800540c <_printf_float+0xa8>
 80054f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80054f8:	2a47      	cmp	r2, #71	; 0x47
 80054fa:	d1b4      	bne.n	8005466 <_printf_float+0x102>
 80054fc:	2b00      	cmp	r3, #0
 80054fe:	d1b2      	bne.n	8005466 <_printf_float+0x102>
 8005500:	3301      	adds	r3, #1
 8005502:	e7af      	b.n	8005464 <_printf_float+0x100>
 8005504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005506:	2b66      	cmp	r3, #102	; 0x66
 8005508:	d11b      	bne.n	8005542 <_printf_float+0x1de>
 800550a:	6863      	ldr	r3, [r4, #4]
 800550c:	2900      	cmp	r1, #0
 800550e:	dd0d      	ble.n	800552c <_printf_float+0x1c8>
 8005510:	6121      	str	r1, [r4, #16]
 8005512:	2b00      	cmp	r3, #0
 8005514:	d102      	bne.n	800551c <_printf_float+0x1b8>
 8005516:	6822      	ldr	r2, [r4, #0]
 8005518:	07d2      	lsls	r2, r2, #31
 800551a:	d502      	bpl.n	8005522 <_printf_float+0x1be>
 800551c:	3301      	adds	r3, #1
 800551e:	1859      	adds	r1, r3, r1
 8005520:	6121      	str	r1, [r4, #16]
 8005522:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005524:	65a3      	str	r3, [r4, #88]	; 0x58
 8005526:	2300      	movs	r3, #0
 8005528:	930b      	str	r3, [sp, #44]	; 0x2c
 800552a:	e7d8      	b.n	80054de <_printf_float+0x17a>
 800552c:	2b00      	cmp	r3, #0
 800552e:	d103      	bne.n	8005538 <_printf_float+0x1d4>
 8005530:	2201      	movs	r2, #1
 8005532:	6821      	ldr	r1, [r4, #0]
 8005534:	4211      	tst	r1, r2
 8005536:	d000      	beq.n	800553a <_printf_float+0x1d6>
 8005538:	1c9a      	adds	r2, r3, #2
 800553a:	6122      	str	r2, [r4, #16]
 800553c:	e7f1      	b.n	8005522 <_printf_float+0x1be>
 800553e:	2367      	movs	r3, #103	; 0x67
 8005540:	930a      	str	r3, [sp, #40]	; 0x28
 8005542:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005544:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005546:	4293      	cmp	r3, r2
 8005548:	db06      	blt.n	8005558 <_printf_float+0x1f4>
 800554a:	6822      	ldr	r2, [r4, #0]
 800554c:	6123      	str	r3, [r4, #16]
 800554e:	07d2      	lsls	r2, r2, #31
 8005550:	d5e7      	bpl.n	8005522 <_printf_float+0x1be>
 8005552:	3301      	adds	r3, #1
 8005554:	6123      	str	r3, [r4, #16]
 8005556:	e7e4      	b.n	8005522 <_printf_float+0x1be>
 8005558:	2101      	movs	r1, #1
 800555a:	2b00      	cmp	r3, #0
 800555c:	dc01      	bgt.n	8005562 <_printf_float+0x1fe>
 800555e:	1849      	adds	r1, r1, r1
 8005560:	1ac9      	subs	r1, r1, r3
 8005562:	1852      	adds	r2, r2, r1
 8005564:	e7e9      	b.n	800553a <_printf_float+0x1d6>
 8005566:	6822      	ldr	r2, [r4, #0]
 8005568:	0553      	lsls	r3, r2, #21
 800556a:	d407      	bmi.n	800557c <_printf_float+0x218>
 800556c:	6923      	ldr	r3, [r4, #16]
 800556e:	002a      	movs	r2, r5
 8005570:	0038      	movs	r0, r7
 8005572:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005574:	47b0      	blx	r6
 8005576:	1c43      	adds	r3, r0, #1
 8005578:	d128      	bne.n	80055cc <_printf_float+0x268>
 800557a:	e751      	b.n	8005420 <_printf_float+0xbc>
 800557c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800557e:	2b65      	cmp	r3, #101	; 0x65
 8005580:	d800      	bhi.n	8005584 <_printf_float+0x220>
 8005582:	e0e1      	b.n	8005748 <_printf_float+0x3e4>
 8005584:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005586:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8005588:	2200      	movs	r2, #0
 800558a:	2300      	movs	r3, #0
 800558c:	f7fa ff5e 	bl	800044c <__aeabi_dcmpeq>
 8005590:	2800      	cmp	r0, #0
 8005592:	d031      	beq.n	80055f8 <_printf_float+0x294>
 8005594:	2301      	movs	r3, #1
 8005596:	0038      	movs	r0, r7
 8005598:	4a34      	ldr	r2, [pc, #208]	; (800566c <_printf_float+0x308>)
 800559a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800559c:	47b0      	blx	r6
 800559e:	1c43      	adds	r3, r0, #1
 80055a0:	d100      	bne.n	80055a4 <_printf_float+0x240>
 80055a2:	e73d      	b.n	8005420 <_printf_float+0xbc>
 80055a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80055a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80055a8:	4293      	cmp	r3, r2
 80055aa:	db02      	blt.n	80055b2 <_printf_float+0x24e>
 80055ac:	6823      	ldr	r3, [r4, #0]
 80055ae:	07db      	lsls	r3, r3, #31
 80055b0:	d50c      	bpl.n	80055cc <_printf_float+0x268>
 80055b2:	0038      	movs	r0, r7
 80055b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80055b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80055b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80055ba:	47b0      	blx	r6
 80055bc:	2500      	movs	r5, #0
 80055be:	1c43      	adds	r3, r0, #1
 80055c0:	d100      	bne.n	80055c4 <_printf_float+0x260>
 80055c2:	e72d      	b.n	8005420 <_printf_float+0xbc>
 80055c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80055c6:	3b01      	subs	r3, #1
 80055c8:	42ab      	cmp	r3, r5
 80055ca:	dc0a      	bgt.n	80055e2 <_printf_float+0x27e>
 80055cc:	6823      	ldr	r3, [r4, #0]
 80055ce:	079b      	lsls	r3, r3, #30
 80055d0:	d500      	bpl.n	80055d4 <_printf_float+0x270>
 80055d2:	e106      	b.n	80057e2 <_printf_float+0x47e>
 80055d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80055d6:	68e0      	ldr	r0, [r4, #12]
 80055d8:	4298      	cmp	r0, r3
 80055da:	db00      	blt.n	80055de <_printf_float+0x27a>
 80055dc:	e722      	b.n	8005424 <_printf_float+0xc0>
 80055de:	0018      	movs	r0, r3
 80055e0:	e720      	b.n	8005424 <_printf_float+0xc0>
 80055e2:	0022      	movs	r2, r4
 80055e4:	2301      	movs	r3, #1
 80055e6:	0038      	movs	r0, r7
 80055e8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80055ea:	321a      	adds	r2, #26
 80055ec:	47b0      	blx	r6
 80055ee:	1c43      	adds	r3, r0, #1
 80055f0:	d100      	bne.n	80055f4 <_printf_float+0x290>
 80055f2:	e715      	b.n	8005420 <_printf_float+0xbc>
 80055f4:	3501      	adds	r5, #1
 80055f6:	e7e5      	b.n	80055c4 <_printf_float+0x260>
 80055f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	dc38      	bgt.n	8005670 <_printf_float+0x30c>
 80055fe:	2301      	movs	r3, #1
 8005600:	0038      	movs	r0, r7
 8005602:	4a1a      	ldr	r2, [pc, #104]	; (800566c <_printf_float+0x308>)
 8005604:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005606:	47b0      	blx	r6
 8005608:	1c43      	adds	r3, r0, #1
 800560a:	d100      	bne.n	800560e <_printf_float+0x2aa>
 800560c:	e708      	b.n	8005420 <_printf_float+0xbc>
 800560e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005610:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005612:	4313      	orrs	r3, r2
 8005614:	d102      	bne.n	800561c <_printf_float+0x2b8>
 8005616:	6823      	ldr	r3, [r4, #0]
 8005618:	07db      	lsls	r3, r3, #31
 800561a:	d5d7      	bpl.n	80055cc <_printf_float+0x268>
 800561c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800561e:	0038      	movs	r0, r7
 8005620:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005622:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005624:	47b0      	blx	r6
 8005626:	1c43      	adds	r3, r0, #1
 8005628:	d100      	bne.n	800562c <_printf_float+0x2c8>
 800562a:	e6f9      	b.n	8005420 <_printf_float+0xbc>
 800562c:	2300      	movs	r3, #0
 800562e:	930a      	str	r3, [sp, #40]	; 0x28
 8005630:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005632:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005634:	425b      	negs	r3, r3
 8005636:	4293      	cmp	r3, r2
 8005638:	dc01      	bgt.n	800563e <_printf_float+0x2da>
 800563a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800563c:	e797      	b.n	800556e <_printf_float+0x20a>
 800563e:	0022      	movs	r2, r4
 8005640:	2301      	movs	r3, #1
 8005642:	0038      	movs	r0, r7
 8005644:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005646:	321a      	adds	r2, #26
 8005648:	47b0      	blx	r6
 800564a:	1c43      	adds	r3, r0, #1
 800564c:	d100      	bne.n	8005650 <_printf_float+0x2ec>
 800564e:	e6e7      	b.n	8005420 <_printf_float+0xbc>
 8005650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005652:	3301      	adds	r3, #1
 8005654:	e7eb      	b.n	800562e <_printf_float+0x2ca>
 8005656:	46c0      	nop			; (mov r8, r8)
 8005658:	7fefffff 	.word	0x7fefffff
 800565c:	08008434 	.word	0x08008434
 8005660:	08008438 	.word	0x08008438
 8005664:	0800843c 	.word	0x0800843c
 8005668:	08008440 	.word	0x08008440
 800566c:	08008444 	.word	0x08008444
 8005670:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005672:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005674:	920a      	str	r2, [sp, #40]	; 0x28
 8005676:	429a      	cmp	r2, r3
 8005678:	dd00      	ble.n	800567c <_printf_float+0x318>
 800567a:	930a      	str	r3, [sp, #40]	; 0x28
 800567c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800567e:	2b00      	cmp	r3, #0
 8005680:	dc3c      	bgt.n	80056fc <_printf_float+0x398>
 8005682:	2300      	movs	r3, #0
 8005684:	930d      	str	r3, [sp, #52]	; 0x34
 8005686:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005688:	43db      	mvns	r3, r3
 800568a:	17db      	asrs	r3, r3, #31
 800568c:	930f      	str	r3, [sp, #60]	; 0x3c
 800568e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005690:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005692:	930b      	str	r3, [sp, #44]	; 0x2c
 8005694:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005696:	4013      	ands	r3, r2
 8005698:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800569a:	1ad3      	subs	r3, r2, r3
 800569c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800569e:	4293      	cmp	r3, r2
 80056a0:	dc34      	bgt.n	800570c <_printf_float+0x3a8>
 80056a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80056a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80056a6:	4293      	cmp	r3, r2
 80056a8:	db3d      	blt.n	8005726 <_printf_float+0x3c2>
 80056aa:	6823      	ldr	r3, [r4, #0]
 80056ac:	07db      	lsls	r3, r3, #31
 80056ae:	d43a      	bmi.n	8005726 <_printf_float+0x3c2>
 80056b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80056b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80056b4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80056b6:	1ad3      	subs	r3, r2, r3
 80056b8:	1a52      	subs	r2, r2, r1
 80056ba:	920a      	str	r2, [sp, #40]	; 0x28
 80056bc:	429a      	cmp	r2, r3
 80056be:	dd00      	ble.n	80056c2 <_printf_float+0x35e>
 80056c0:	930a      	str	r3, [sp, #40]	; 0x28
 80056c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80056c4:	2b00      	cmp	r3, #0
 80056c6:	dc36      	bgt.n	8005736 <_printf_float+0x3d2>
 80056c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80056ca:	2500      	movs	r5, #0
 80056cc:	43db      	mvns	r3, r3
 80056ce:	17db      	asrs	r3, r3, #31
 80056d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80056d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80056d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80056d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80056d8:	1a9b      	subs	r3, r3, r2
 80056da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80056dc:	400a      	ands	r2, r1
 80056de:	1a9b      	subs	r3, r3, r2
 80056e0:	42ab      	cmp	r3, r5
 80056e2:	dc00      	bgt.n	80056e6 <_printf_float+0x382>
 80056e4:	e772      	b.n	80055cc <_printf_float+0x268>
 80056e6:	0022      	movs	r2, r4
 80056e8:	2301      	movs	r3, #1
 80056ea:	0038      	movs	r0, r7
 80056ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 80056ee:	321a      	adds	r2, #26
 80056f0:	47b0      	blx	r6
 80056f2:	1c43      	adds	r3, r0, #1
 80056f4:	d100      	bne.n	80056f8 <_printf_float+0x394>
 80056f6:	e693      	b.n	8005420 <_printf_float+0xbc>
 80056f8:	3501      	adds	r5, #1
 80056fa:	e7ea      	b.n	80056d2 <_printf_float+0x36e>
 80056fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80056fe:	002a      	movs	r2, r5
 8005700:	0038      	movs	r0, r7
 8005702:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005704:	47b0      	blx	r6
 8005706:	1c43      	adds	r3, r0, #1
 8005708:	d1bb      	bne.n	8005682 <_printf_float+0x31e>
 800570a:	e689      	b.n	8005420 <_printf_float+0xbc>
 800570c:	0022      	movs	r2, r4
 800570e:	2301      	movs	r3, #1
 8005710:	0038      	movs	r0, r7
 8005712:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005714:	321a      	adds	r2, #26
 8005716:	47b0      	blx	r6
 8005718:	1c43      	adds	r3, r0, #1
 800571a:	d100      	bne.n	800571e <_printf_float+0x3ba>
 800571c:	e680      	b.n	8005420 <_printf_float+0xbc>
 800571e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005720:	3301      	adds	r3, #1
 8005722:	930d      	str	r3, [sp, #52]	; 0x34
 8005724:	e7b3      	b.n	800568e <_printf_float+0x32a>
 8005726:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005728:	0038      	movs	r0, r7
 800572a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800572c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800572e:	47b0      	blx	r6
 8005730:	1c43      	adds	r3, r0, #1
 8005732:	d1bd      	bne.n	80056b0 <_printf_float+0x34c>
 8005734:	e674      	b.n	8005420 <_printf_float+0xbc>
 8005736:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005738:	0038      	movs	r0, r7
 800573a:	18ea      	adds	r2, r5, r3
 800573c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800573e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005740:	47b0      	blx	r6
 8005742:	1c43      	adds	r3, r0, #1
 8005744:	d1c0      	bne.n	80056c8 <_printf_float+0x364>
 8005746:	e66b      	b.n	8005420 <_printf_float+0xbc>
 8005748:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800574a:	2b01      	cmp	r3, #1
 800574c:	dc02      	bgt.n	8005754 <_printf_float+0x3f0>
 800574e:	2301      	movs	r3, #1
 8005750:	421a      	tst	r2, r3
 8005752:	d034      	beq.n	80057be <_printf_float+0x45a>
 8005754:	2301      	movs	r3, #1
 8005756:	002a      	movs	r2, r5
 8005758:	0038      	movs	r0, r7
 800575a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800575c:	47b0      	blx	r6
 800575e:	1c43      	adds	r3, r0, #1
 8005760:	d100      	bne.n	8005764 <_printf_float+0x400>
 8005762:	e65d      	b.n	8005420 <_printf_float+0xbc>
 8005764:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005766:	0038      	movs	r0, r7
 8005768:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800576a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800576c:	47b0      	blx	r6
 800576e:	1c43      	adds	r3, r0, #1
 8005770:	d100      	bne.n	8005774 <_printf_float+0x410>
 8005772:	e655      	b.n	8005420 <_printf_float+0xbc>
 8005774:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005776:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8005778:	2200      	movs	r2, #0
 800577a:	2300      	movs	r3, #0
 800577c:	f7fa fe66 	bl	800044c <__aeabi_dcmpeq>
 8005780:	2800      	cmp	r0, #0
 8005782:	d11a      	bne.n	80057ba <_printf_float+0x456>
 8005784:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005786:	1c6a      	adds	r2, r5, #1
 8005788:	3b01      	subs	r3, #1
 800578a:	0038      	movs	r0, r7
 800578c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800578e:	47b0      	blx	r6
 8005790:	1c43      	adds	r3, r0, #1
 8005792:	d10e      	bne.n	80057b2 <_printf_float+0x44e>
 8005794:	e644      	b.n	8005420 <_printf_float+0xbc>
 8005796:	0022      	movs	r2, r4
 8005798:	2301      	movs	r3, #1
 800579a:	0038      	movs	r0, r7
 800579c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800579e:	321a      	adds	r2, #26
 80057a0:	47b0      	blx	r6
 80057a2:	1c43      	adds	r3, r0, #1
 80057a4:	d100      	bne.n	80057a8 <_printf_float+0x444>
 80057a6:	e63b      	b.n	8005420 <_printf_float+0xbc>
 80057a8:	3501      	adds	r5, #1
 80057aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80057ac:	3b01      	subs	r3, #1
 80057ae:	42ab      	cmp	r3, r5
 80057b0:	dcf1      	bgt.n	8005796 <_printf_float+0x432>
 80057b2:	0022      	movs	r2, r4
 80057b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80057b6:	3250      	adds	r2, #80	; 0x50
 80057b8:	e6da      	b.n	8005570 <_printf_float+0x20c>
 80057ba:	2500      	movs	r5, #0
 80057bc:	e7f5      	b.n	80057aa <_printf_float+0x446>
 80057be:	002a      	movs	r2, r5
 80057c0:	e7e3      	b.n	800578a <_printf_float+0x426>
 80057c2:	0022      	movs	r2, r4
 80057c4:	2301      	movs	r3, #1
 80057c6:	0038      	movs	r0, r7
 80057c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80057ca:	3219      	adds	r2, #25
 80057cc:	47b0      	blx	r6
 80057ce:	1c43      	adds	r3, r0, #1
 80057d0:	d100      	bne.n	80057d4 <_printf_float+0x470>
 80057d2:	e625      	b.n	8005420 <_printf_float+0xbc>
 80057d4:	3501      	adds	r5, #1
 80057d6:	68e3      	ldr	r3, [r4, #12]
 80057d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80057da:	1a9b      	subs	r3, r3, r2
 80057dc:	42ab      	cmp	r3, r5
 80057de:	dcf0      	bgt.n	80057c2 <_printf_float+0x45e>
 80057e0:	e6f8      	b.n	80055d4 <_printf_float+0x270>
 80057e2:	2500      	movs	r5, #0
 80057e4:	e7f7      	b.n	80057d6 <_printf_float+0x472>
 80057e6:	46c0      	nop			; (mov r8, r8)

080057e8 <_printf_common>:
 80057e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80057ea:	0015      	movs	r5, r2
 80057ec:	9301      	str	r3, [sp, #4]
 80057ee:	688a      	ldr	r2, [r1, #8]
 80057f0:	690b      	ldr	r3, [r1, #16]
 80057f2:	000c      	movs	r4, r1
 80057f4:	9000      	str	r0, [sp, #0]
 80057f6:	4293      	cmp	r3, r2
 80057f8:	da00      	bge.n	80057fc <_printf_common+0x14>
 80057fa:	0013      	movs	r3, r2
 80057fc:	0022      	movs	r2, r4
 80057fe:	602b      	str	r3, [r5, #0]
 8005800:	3243      	adds	r2, #67	; 0x43
 8005802:	7812      	ldrb	r2, [r2, #0]
 8005804:	2a00      	cmp	r2, #0
 8005806:	d001      	beq.n	800580c <_printf_common+0x24>
 8005808:	3301      	adds	r3, #1
 800580a:	602b      	str	r3, [r5, #0]
 800580c:	6823      	ldr	r3, [r4, #0]
 800580e:	069b      	lsls	r3, r3, #26
 8005810:	d502      	bpl.n	8005818 <_printf_common+0x30>
 8005812:	682b      	ldr	r3, [r5, #0]
 8005814:	3302      	adds	r3, #2
 8005816:	602b      	str	r3, [r5, #0]
 8005818:	6822      	ldr	r2, [r4, #0]
 800581a:	2306      	movs	r3, #6
 800581c:	0017      	movs	r7, r2
 800581e:	401f      	ands	r7, r3
 8005820:	421a      	tst	r2, r3
 8005822:	d027      	beq.n	8005874 <_printf_common+0x8c>
 8005824:	0023      	movs	r3, r4
 8005826:	3343      	adds	r3, #67	; 0x43
 8005828:	781b      	ldrb	r3, [r3, #0]
 800582a:	1e5a      	subs	r2, r3, #1
 800582c:	4193      	sbcs	r3, r2
 800582e:	6822      	ldr	r2, [r4, #0]
 8005830:	0692      	lsls	r2, r2, #26
 8005832:	d430      	bmi.n	8005896 <_printf_common+0xae>
 8005834:	0022      	movs	r2, r4
 8005836:	9901      	ldr	r1, [sp, #4]
 8005838:	9800      	ldr	r0, [sp, #0]
 800583a:	9e08      	ldr	r6, [sp, #32]
 800583c:	3243      	adds	r2, #67	; 0x43
 800583e:	47b0      	blx	r6
 8005840:	1c43      	adds	r3, r0, #1
 8005842:	d025      	beq.n	8005890 <_printf_common+0xa8>
 8005844:	2306      	movs	r3, #6
 8005846:	6820      	ldr	r0, [r4, #0]
 8005848:	682a      	ldr	r2, [r5, #0]
 800584a:	68e1      	ldr	r1, [r4, #12]
 800584c:	2500      	movs	r5, #0
 800584e:	4003      	ands	r3, r0
 8005850:	2b04      	cmp	r3, #4
 8005852:	d103      	bne.n	800585c <_printf_common+0x74>
 8005854:	1a8d      	subs	r5, r1, r2
 8005856:	43eb      	mvns	r3, r5
 8005858:	17db      	asrs	r3, r3, #31
 800585a:	401d      	ands	r5, r3
 800585c:	68a3      	ldr	r3, [r4, #8]
 800585e:	6922      	ldr	r2, [r4, #16]
 8005860:	4293      	cmp	r3, r2
 8005862:	dd01      	ble.n	8005868 <_printf_common+0x80>
 8005864:	1a9b      	subs	r3, r3, r2
 8005866:	18ed      	adds	r5, r5, r3
 8005868:	2700      	movs	r7, #0
 800586a:	42bd      	cmp	r5, r7
 800586c:	d120      	bne.n	80058b0 <_printf_common+0xc8>
 800586e:	2000      	movs	r0, #0
 8005870:	e010      	b.n	8005894 <_printf_common+0xac>
 8005872:	3701      	adds	r7, #1
 8005874:	68e3      	ldr	r3, [r4, #12]
 8005876:	682a      	ldr	r2, [r5, #0]
 8005878:	1a9b      	subs	r3, r3, r2
 800587a:	42bb      	cmp	r3, r7
 800587c:	ddd2      	ble.n	8005824 <_printf_common+0x3c>
 800587e:	0022      	movs	r2, r4
 8005880:	2301      	movs	r3, #1
 8005882:	9901      	ldr	r1, [sp, #4]
 8005884:	9800      	ldr	r0, [sp, #0]
 8005886:	9e08      	ldr	r6, [sp, #32]
 8005888:	3219      	adds	r2, #25
 800588a:	47b0      	blx	r6
 800588c:	1c43      	adds	r3, r0, #1
 800588e:	d1f0      	bne.n	8005872 <_printf_common+0x8a>
 8005890:	2001      	movs	r0, #1
 8005892:	4240      	negs	r0, r0
 8005894:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005896:	2030      	movs	r0, #48	; 0x30
 8005898:	18e1      	adds	r1, r4, r3
 800589a:	3143      	adds	r1, #67	; 0x43
 800589c:	7008      	strb	r0, [r1, #0]
 800589e:	0021      	movs	r1, r4
 80058a0:	1c5a      	adds	r2, r3, #1
 80058a2:	3145      	adds	r1, #69	; 0x45
 80058a4:	7809      	ldrb	r1, [r1, #0]
 80058a6:	18a2      	adds	r2, r4, r2
 80058a8:	3243      	adds	r2, #67	; 0x43
 80058aa:	3302      	adds	r3, #2
 80058ac:	7011      	strb	r1, [r2, #0]
 80058ae:	e7c1      	b.n	8005834 <_printf_common+0x4c>
 80058b0:	0022      	movs	r2, r4
 80058b2:	2301      	movs	r3, #1
 80058b4:	9901      	ldr	r1, [sp, #4]
 80058b6:	9800      	ldr	r0, [sp, #0]
 80058b8:	9e08      	ldr	r6, [sp, #32]
 80058ba:	321a      	adds	r2, #26
 80058bc:	47b0      	blx	r6
 80058be:	1c43      	adds	r3, r0, #1
 80058c0:	d0e6      	beq.n	8005890 <_printf_common+0xa8>
 80058c2:	3701      	adds	r7, #1
 80058c4:	e7d1      	b.n	800586a <_printf_common+0x82>
	...

080058c8 <_printf_i>:
 80058c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80058ca:	b08b      	sub	sp, #44	; 0x2c
 80058cc:	9206      	str	r2, [sp, #24]
 80058ce:	000a      	movs	r2, r1
 80058d0:	3243      	adds	r2, #67	; 0x43
 80058d2:	9307      	str	r3, [sp, #28]
 80058d4:	9005      	str	r0, [sp, #20]
 80058d6:	9204      	str	r2, [sp, #16]
 80058d8:	7e0a      	ldrb	r2, [r1, #24]
 80058da:	000c      	movs	r4, r1
 80058dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80058de:	2a78      	cmp	r2, #120	; 0x78
 80058e0:	d807      	bhi.n	80058f2 <_printf_i+0x2a>
 80058e2:	2a62      	cmp	r2, #98	; 0x62
 80058e4:	d809      	bhi.n	80058fa <_printf_i+0x32>
 80058e6:	2a00      	cmp	r2, #0
 80058e8:	d100      	bne.n	80058ec <_printf_i+0x24>
 80058ea:	e0c1      	b.n	8005a70 <_printf_i+0x1a8>
 80058ec:	2a58      	cmp	r2, #88	; 0x58
 80058ee:	d100      	bne.n	80058f2 <_printf_i+0x2a>
 80058f0:	e08c      	b.n	8005a0c <_printf_i+0x144>
 80058f2:	0026      	movs	r6, r4
 80058f4:	3642      	adds	r6, #66	; 0x42
 80058f6:	7032      	strb	r2, [r6, #0]
 80058f8:	e022      	b.n	8005940 <_printf_i+0x78>
 80058fa:	0010      	movs	r0, r2
 80058fc:	3863      	subs	r0, #99	; 0x63
 80058fe:	2815      	cmp	r0, #21
 8005900:	d8f7      	bhi.n	80058f2 <_printf_i+0x2a>
 8005902:	f7fa fc13 	bl	800012c <__gnu_thumb1_case_shi>
 8005906:	0016      	.short	0x0016
 8005908:	fff6001f 	.word	0xfff6001f
 800590c:	fff6fff6 	.word	0xfff6fff6
 8005910:	001ffff6 	.word	0x001ffff6
 8005914:	fff6fff6 	.word	0xfff6fff6
 8005918:	fff6fff6 	.word	0xfff6fff6
 800591c:	003600a8 	.word	0x003600a8
 8005920:	fff6009a 	.word	0xfff6009a
 8005924:	00b9fff6 	.word	0x00b9fff6
 8005928:	0036fff6 	.word	0x0036fff6
 800592c:	fff6fff6 	.word	0xfff6fff6
 8005930:	009e      	.short	0x009e
 8005932:	0026      	movs	r6, r4
 8005934:	681a      	ldr	r2, [r3, #0]
 8005936:	3642      	adds	r6, #66	; 0x42
 8005938:	1d11      	adds	r1, r2, #4
 800593a:	6019      	str	r1, [r3, #0]
 800593c:	6813      	ldr	r3, [r2, #0]
 800593e:	7033      	strb	r3, [r6, #0]
 8005940:	2301      	movs	r3, #1
 8005942:	e0a7      	b.n	8005a94 <_printf_i+0x1cc>
 8005944:	6808      	ldr	r0, [r1, #0]
 8005946:	6819      	ldr	r1, [r3, #0]
 8005948:	1d0a      	adds	r2, r1, #4
 800594a:	0605      	lsls	r5, r0, #24
 800594c:	d50b      	bpl.n	8005966 <_printf_i+0x9e>
 800594e:	680d      	ldr	r5, [r1, #0]
 8005950:	601a      	str	r2, [r3, #0]
 8005952:	2d00      	cmp	r5, #0
 8005954:	da03      	bge.n	800595e <_printf_i+0x96>
 8005956:	232d      	movs	r3, #45	; 0x2d
 8005958:	9a04      	ldr	r2, [sp, #16]
 800595a:	426d      	negs	r5, r5
 800595c:	7013      	strb	r3, [r2, #0]
 800595e:	4b61      	ldr	r3, [pc, #388]	; (8005ae4 <_printf_i+0x21c>)
 8005960:	270a      	movs	r7, #10
 8005962:	9303      	str	r3, [sp, #12]
 8005964:	e01b      	b.n	800599e <_printf_i+0xd6>
 8005966:	680d      	ldr	r5, [r1, #0]
 8005968:	601a      	str	r2, [r3, #0]
 800596a:	0641      	lsls	r1, r0, #25
 800596c:	d5f1      	bpl.n	8005952 <_printf_i+0x8a>
 800596e:	b22d      	sxth	r5, r5
 8005970:	e7ef      	b.n	8005952 <_printf_i+0x8a>
 8005972:	680d      	ldr	r5, [r1, #0]
 8005974:	6819      	ldr	r1, [r3, #0]
 8005976:	1d08      	adds	r0, r1, #4
 8005978:	6018      	str	r0, [r3, #0]
 800597a:	062e      	lsls	r6, r5, #24
 800597c:	d501      	bpl.n	8005982 <_printf_i+0xba>
 800597e:	680d      	ldr	r5, [r1, #0]
 8005980:	e003      	b.n	800598a <_printf_i+0xc2>
 8005982:	066d      	lsls	r5, r5, #25
 8005984:	d5fb      	bpl.n	800597e <_printf_i+0xb6>
 8005986:	680d      	ldr	r5, [r1, #0]
 8005988:	b2ad      	uxth	r5, r5
 800598a:	4b56      	ldr	r3, [pc, #344]	; (8005ae4 <_printf_i+0x21c>)
 800598c:	2708      	movs	r7, #8
 800598e:	9303      	str	r3, [sp, #12]
 8005990:	2a6f      	cmp	r2, #111	; 0x6f
 8005992:	d000      	beq.n	8005996 <_printf_i+0xce>
 8005994:	3702      	adds	r7, #2
 8005996:	0023      	movs	r3, r4
 8005998:	2200      	movs	r2, #0
 800599a:	3343      	adds	r3, #67	; 0x43
 800599c:	701a      	strb	r2, [r3, #0]
 800599e:	6863      	ldr	r3, [r4, #4]
 80059a0:	60a3      	str	r3, [r4, #8]
 80059a2:	2b00      	cmp	r3, #0
 80059a4:	db03      	blt.n	80059ae <_printf_i+0xe6>
 80059a6:	2204      	movs	r2, #4
 80059a8:	6821      	ldr	r1, [r4, #0]
 80059aa:	4391      	bics	r1, r2
 80059ac:	6021      	str	r1, [r4, #0]
 80059ae:	2d00      	cmp	r5, #0
 80059b0:	d102      	bne.n	80059b8 <_printf_i+0xf0>
 80059b2:	9e04      	ldr	r6, [sp, #16]
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d00c      	beq.n	80059d2 <_printf_i+0x10a>
 80059b8:	9e04      	ldr	r6, [sp, #16]
 80059ba:	0028      	movs	r0, r5
 80059bc:	0039      	movs	r1, r7
 80059be:	f7fa fc45 	bl	800024c <__aeabi_uidivmod>
 80059c2:	9b03      	ldr	r3, [sp, #12]
 80059c4:	3e01      	subs	r6, #1
 80059c6:	5c5b      	ldrb	r3, [r3, r1]
 80059c8:	7033      	strb	r3, [r6, #0]
 80059ca:	002b      	movs	r3, r5
 80059cc:	0005      	movs	r5, r0
 80059ce:	429f      	cmp	r7, r3
 80059d0:	d9f3      	bls.n	80059ba <_printf_i+0xf2>
 80059d2:	2f08      	cmp	r7, #8
 80059d4:	d109      	bne.n	80059ea <_printf_i+0x122>
 80059d6:	6823      	ldr	r3, [r4, #0]
 80059d8:	07db      	lsls	r3, r3, #31
 80059da:	d506      	bpl.n	80059ea <_printf_i+0x122>
 80059dc:	6863      	ldr	r3, [r4, #4]
 80059de:	6922      	ldr	r2, [r4, #16]
 80059e0:	4293      	cmp	r3, r2
 80059e2:	dc02      	bgt.n	80059ea <_printf_i+0x122>
 80059e4:	2330      	movs	r3, #48	; 0x30
 80059e6:	3e01      	subs	r6, #1
 80059e8:	7033      	strb	r3, [r6, #0]
 80059ea:	9b04      	ldr	r3, [sp, #16]
 80059ec:	1b9b      	subs	r3, r3, r6
 80059ee:	6123      	str	r3, [r4, #16]
 80059f0:	9b07      	ldr	r3, [sp, #28]
 80059f2:	0021      	movs	r1, r4
 80059f4:	9300      	str	r3, [sp, #0]
 80059f6:	9805      	ldr	r0, [sp, #20]
 80059f8:	9b06      	ldr	r3, [sp, #24]
 80059fa:	aa09      	add	r2, sp, #36	; 0x24
 80059fc:	f7ff fef4 	bl	80057e8 <_printf_common>
 8005a00:	1c43      	adds	r3, r0, #1
 8005a02:	d14c      	bne.n	8005a9e <_printf_i+0x1d6>
 8005a04:	2001      	movs	r0, #1
 8005a06:	4240      	negs	r0, r0
 8005a08:	b00b      	add	sp, #44	; 0x2c
 8005a0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a0c:	3145      	adds	r1, #69	; 0x45
 8005a0e:	700a      	strb	r2, [r1, #0]
 8005a10:	4a34      	ldr	r2, [pc, #208]	; (8005ae4 <_printf_i+0x21c>)
 8005a12:	9203      	str	r2, [sp, #12]
 8005a14:	681a      	ldr	r2, [r3, #0]
 8005a16:	6821      	ldr	r1, [r4, #0]
 8005a18:	ca20      	ldmia	r2!, {r5}
 8005a1a:	601a      	str	r2, [r3, #0]
 8005a1c:	0608      	lsls	r0, r1, #24
 8005a1e:	d516      	bpl.n	8005a4e <_printf_i+0x186>
 8005a20:	07cb      	lsls	r3, r1, #31
 8005a22:	d502      	bpl.n	8005a2a <_printf_i+0x162>
 8005a24:	2320      	movs	r3, #32
 8005a26:	4319      	orrs	r1, r3
 8005a28:	6021      	str	r1, [r4, #0]
 8005a2a:	2710      	movs	r7, #16
 8005a2c:	2d00      	cmp	r5, #0
 8005a2e:	d1b2      	bne.n	8005996 <_printf_i+0xce>
 8005a30:	2320      	movs	r3, #32
 8005a32:	6822      	ldr	r2, [r4, #0]
 8005a34:	439a      	bics	r2, r3
 8005a36:	6022      	str	r2, [r4, #0]
 8005a38:	e7ad      	b.n	8005996 <_printf_i+0xce>
 8005a3a:	2220      	movs	r2, #32
 8005a3c:	6809      	ldr	r1, [r1, #0]
 8005a3e:	430a      	orrs	r2, r1
 8005a40:	6022      	str	r2, [r4, #0]
 8005a42:	0022      	movs	r2, r4
 8005a44:	2178      	movs	r1, #120	; 0x78
 8005a46:	3245      	adds	r2, #69	; 0x45
 8005a48:	7011      	strb	r1, [r2, #0]
 8005a4a:	4a27      	ldr	r2, [pc, #156]	; (8005ae8 <_printf_i+0x220>)
 8005a4c:	e7e1      	b.n	8005a12 <_printf_i+0x14a>
 8005a4e:	0648      	lsls	r0, r1, #25
 8005a50:	d5e6      	bpl.n	8005a20 <_printf_i+0x158>
 8005a52:	b2ad      	uxth	r5, r5
 8005a54:	e7e4      	b.n	8005a20 <_printf_i+0x158>
 8005a56:	681a      	ldr	r2, [r3, #0]
 8005a58:	680d      	ldr	r5, [r1, #0]
 8005a5a:	1d10      	adds	r0, r2, #4
 8005a5c:	6949      	ldr	r1, [r1, #20]
 8005a5e:	6018      	str	r0, [r3, #0]
 8005a60:	6813      	ldr	r3, [r2, #0]
 8005a62:	062e      	lsls	r6, r5, #24
 8005a64:	d501      	bpl.n	8005a6a <_printf_i+0x1a2>
 8005a66:	6019      	str	r1, [r3, #0]
 8005a68:	e002      	b.n	8005a70 <_printf_i+0x1a8>
 8005a6a:	066d      	lsls	r5, r5, #25
 8005a6c:	d5fb      	bpl.n	8005a66 <_printf_i+0x19e>
 8005a6e:	8019      	strh	r1, [r3, #0]
 8005a70:	2300      	movs	r3, #0
 8005a72:	9e04      	ldr	r6, [sp, #16]
 8005a74:	6123      	str	r3, [r4, #16]
 8005a76:	e7bb      	b.n	80059f0 <_printf_i+0x128>
 8005a78:	681a      	ldr	r2, [r3, #0]
 8005a7a:	1d11      	adds	r1, r2, #4
 8005a7c:	6019      	str	r1, [r3, #0]
 8005a7e:	6816      	ldr	r6, [r2, #0]
 8005a80:	2100      	movs	r1, #0
 8005a82:	0030      	movs	r0, r6
 8005a84:	6862      	ldr	r2, [r4, #4]
 8005a86:	f000 ff1d 	bl	80068c4 <memchr>
 8005a8a:	2800      	cmp	r0, #0
 8005a8c:	d001      	beq.n	8005a92 <_printf_i+0x1ca>
 8005a8e:	1b80      	subs	r0, r0, r6
 8005a90:	6060      	str	r0, [r4, #4]
 8005a92:	6863      	ldr	r3, [r4, #4]
 8005a94:	6123      	str	r3, [r4, #16]
 8005a96:	2300      	movs	r3, #0
 8005a98:	9a04      	ldr	r2, [sp, #16]
 8005a9a:	7013      	strb	r3, [r2, #0]
 8005a9c:	e7a8      	b.n	80059f0 <_printf_i+0x128>
 8005a9e:	6923      	ldr	r3, [r4, #16]
 8005aa0:	0032      	movs	r2, r6
 8005aa2:	9906      	ldr	r1, [sp, #24]
 8005aa4:	9805      	ldr	r0, [sp, #20]
 8005aa6:	9d07      	ldr	r5, [sp, #28]
 8005aa8:	47a8      	blx	r5
 8005aaa:	1c43      	adds	r3, r0, #1
 8005aac:	d0aa      	beq.n	8005a04 <_printf_i+0x13c>
 8005aae:	6823      	ldr	r3, [r4, #0]
 8005ab0:	079b      	lsls	r3, r3, #30
 8005ab2:	d415      	bmi.n	8005ae0 <_printf_i+0x218>
 8005ab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ab6:	68e0      	ldr	r0, [r4, #12]
 8005ab8:	4298      	cmp	r0, r3
 8005aba:	daa5      	bge.n	8005a08 <_printf_i+0x140>
 8005abc:	0018      	movs	r0, r3
 8005abe:	e7a3      	b.n	8005a08 <_printf_i+0x140>
 8005ac0:	0022      	movs	r2, r4
 8005ac2:	2301      	movs	r3, #1
 8005ac4:	9906      	ldr	r1, [sp, #24]
 8005ac6:	9805      	ldr	r0, [sp, #20]
 8005ac8:	9e07      	ldr	r6, [sp, #28]
 8005aca:	3219      	adds	r2, #25
 8005acc:	47b0      	blx	r6
 8005ace:	1c43      	adds	r3, r0, #1
 8005ad0:	d098      	beq.n	8005a04 <_printf_i+0x13c>
 8005ad2:	3501      	adds	r5, #1
 8005ad4:	68e3      	ldr	r3, [r4, #12]
 8005ad6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005ad8:	1a9b      	subs	r3, r3, r2
 8005ada:	42ab      	cmp	r3, r5
 8005adc:	dcf0      	bgt.n	8005ac0 <_printf_i+0x1f8>
 8005ade:	e7e9      	b.n	8005ab4 <_printf_i+0x1ec>
 8005ae0:	2500      	movs	r5, #0
 8005ae2:	e7f7      	b.n	8005ad4 <_printf_i+0x20c>
 8005ae4:	08008446 	.word	0x08008446
 8005ae8:	08008457 	.word	0x08008457

08005aec <_vsniprintf_r>:
 8005aec:	b530      	push	{r4, r5, lr}
 8005aee:	0014      	movs	r4, r2
 8005af0:	0005      	movs	r5, r0
 8005af2:	001a      	movs	r2, r3
 8005af4:	b09b      	sub	sp, #108	; 0x6c
 8005af6:	2c00      	cmp	r4, #0
 8005af8:	da05      	bge.n	8005b06 <_vsniprintf_r+0x1a>
 8005afa:	238b      	movs	r3, #139	; 0x8b
 8005afc:	6003      	str	r3, [r0, #0]
 8005afe:	2001      	movs	r0, #1
 8005b00:	4240      	negs	r0, r0
 8005b02:	b01b      	add	sp, #108	; 0x6c
 8005b04:	bd30      	pop	{r4, r5, pc}
 8005b06:	2382      	movs	r3, #130	; 0x82
 8005b08:	4668      	mov	r0, sp
 8005b0a:	009b      	lsls	r3, r3, #2
 8005b0c:	8183      	strh	r3, [r0, #12]
 8005b0e:	2300      	movs	r3, #0
 8005b10:	9100      	str	r1, [sp, #0]
 8005b12:	9104      	str	r1, [sp, #16]
 8005b14:	429c      	cmp	r4, r3
 8005b16:	d000      	beq.n	8005b1a <_vsniprintf_r+0x2e>
 8005b18:	1e63      	subs	r3, r4, #1
 8005b1a:	9302      	str	r3, [sp, #8]
 8005b1c:	9305      	str	r3, [sp, #20]
 8005b1e:	2301      	movs	r3, #1
 8005b20:	4669      	mov	r1, sp
 8005b22:	425b      	negs	r3, r3
 8005b24:	81cb      	strh	r3, [r1, #14]
 8005b26:	0028      	movs	r0, r5
 8005b28:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8005b2a:	f001 fbeb 	bl	8007304 <_svfiprintf_r>
 8005b2e:	1c43      	adds	r3, r0, #1
 8005b30:	da01      	bge.n	8005b36 <_vsniprintf_r+0x4a>
 8005b32:	238b      	movs	r3, #139	; 0x8b
 8005b34:	602b      	str	r3, [r5, #0]
 8005b36:	2c00      	cmp	r4, #0
 8005b38:	d0e3      	beq.n	8005b02 <_vsniprintf_r+0x16>
 8005b3a:	2300      	movs	r3, #0
 8005b3c:	9a00      	ldr	r2, [sp, #0]
 8005b3e:	7013      	strb	r3, [r2, #0]
 8005b40:	e7df      	b.n	8005b02 <_vsniprintf_r+0x16>
	...

08005b44 <vsniprintf>:
 8005b44:	b507      	push	{r0, r1, r2, lr}
 8005b46:	9300      	str	r3, [sp, #0]
 8005b48:	0013      	movs	r3, r2
 8005b4a:	000a      	movs	r2, r1
 8005b4c:	0001      	movs	r1, r0
 8005b4e:	4802      	ldr	r0, [pc, #8]	; (8005b58 <vsniprintf+0x14>)
 8005b50:	6800      	ldr	r0, [r0, #0]
 8005b52:	f7ff ffcb 	bl	8005aec <_vsniprintf_r>
 8005b56:	bd0e      	pop	{r1, r2, r3, pc}
 8005b58:	2000004c 	.word	0x2000004c

08005b5c <quorem>:
 8005b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b5e:	0006      	movs	r6, r0
 8005b60:	690b      	ldr	r3, [r1, #16]
 8005b62:	6932      	ldr	r2, [r6, #16]
 8005b64:	b087      	sub	sp, #28
 8005b66:	2000      	movs	r0, #0
 8005b68:	9103      	str	r1, [sp, #12]
 8005b6a:	429a      	cmp	r2, r3
 8005b6c:	db65      	blt.n	8005c3a <quorem+0xde>
 8005b6e:	3b01      	subs	r3, #1
 8005b70:	009c      	lsls	r4, r3, #2
 8005b72:	9300      	str	r3, [sp, #0]
 8005b74:	000b      	movs	r3, r1
 8005b76:	3314      	adds	r3, #20
 8005b78:	9305      	str	r3, [sp, #20]
 8005b7a:	191b      	adds	r3, r3, r4
 8005b7c:	9304      	str	r3, [sp, #16]
 8005b7e:	0033      	movs	r3, r6
 8005b80:	3314      	adds	r3, #20
 8005b82:	9302      	str	r3, [sp, #8]
 8005b84:	191c      	adds	r4, r3, r4
 8005b86:	9b04      	ldr	r3, [sp, #16]
 8005b88:	6827      	ldr	r7, [r4, #0]
 8005b8a:	681b      	ldr	r3, [r3, #0]
 8005b8c:	0038      	movs	r0, r7
 8005b8e:	1c5d      	adds	r5, r3, #1
 8005b90:	0029      	movs	r1, r5
 8005b92:	9301      	str	r3, [sp, #4]
 8005b94:	f7fa fad4 	bl	8000140 <__udivsi3>
 8005b98:	9001      	str	r0, [sp, #4]
 8005b9a:	42af      	cmp	r7, r5
 8005b9c:	d324      	bcc.n	8005be8 <quorem+0x8c>
 8005b9e:	2500      	movs	r5, #0
 8005ba0:	46ac      	mov	ip, r5
 8005ba2:	9802      	ldr	r0, [sp, #8]
 8005ba4:	9f05      	ldr	r7, [sp, #20]
 8005ba6:	cf08      	ldmia	r7!, {r3}
 8005ba8:	9a01      	ldr	r2, [sp, #4]
 8005baa:	b299      	uxth	r1, r3
 8005bac:	4351      	muls	r1, r2
 8005bae:	0c1b      	lsrs	r3, r3, #16
 8005bb0:	4353      	muls	r3, r2
 8005bb2:	1949      	adds	r1, r1, r5
 8005bb4:	0c0a      	lsrs	r2, r1, #16
 8005bb6:	189b      	adds	r3, r3, r2
 8005bb8:	6802      	ldr	r2, [r0, #0]
 8005bba:	b289      	uxth	r1, r1
 8005bbc:	b292      	uxth	r2, r2
 8005bbe:	4462      	add	r2, ip
 8005bc0:	1a52      	subs	r2, r2, r1
 8005bc2:	6801      	ldr	r1, [r0, #0]
 8005bc4:	0c1d      	lsrs	r5, r3, #16
 8005bc6:	0c09      	lsrs	r1, r1, #16
 8005bc8:	b29b      	uxth	r3, r3
 8005bca:	1acb      	subs	r3, r1, r3
 8005bcc:	1411      	asrs	r1, r2, #16
 8005bce:	185b      	adds	r3, r3, r1
 8005bd0:	1419      	asrs	r1, r3, #16
 8005bd2:	b292      	uxth	r2, r2
 8005bd4:	041b      	lsls	r3, r3, #16
 8005bd6:	431a      	orrs	r2, r3
 8005bd8:	9b04      	ldr	r3, [sp, #16]
 8005bda:	468c      	mov	ip, r1
 8005bdc:	c004      	stmia	r0!, {r2}
 8005bde:	42bb      	cmp	r3, r7
 8005be0:	d2e1      	bcs.n	8005ba6 <quorem+0x4a>
 8005be2:	6823      	ldr	r3, [r4, #0]
 8005be4:	2b00      	cmp	r3, #0
 8005be6:	d030      	beq.n	8005c4a <quorem+0xee>
 8005be8:	0030      	movs	r0, r6
 8005bea:	9903      	ldr	r1, [sp, #12]
 8005bec:	f001 f902 	bl	8006df4 <__mcmp>
 8005bf0:	2800      	cmp	r0, #0
 8005bf2:	db21      	blt.n	8005c38 <quorem+0xdc>
 8005bf4:	0030      	movs	r0, r6
 8005bf6:	2400      	movs	r4, #0
 8005bf8:	9b01      	ldr	r3, [sp, #4]
 8005bfa:	9903      	ldr	r1, [sp, #12]
 8005bfc:	3301      	adds	r3, #1
 8005bfe:	9301      	str	r3, [sp, #4]
 8005c00:	3014      	adds	r0, #20
 8005c02:	3114      	adds	r1, #20
 8005c04:	6803      	ldr	r3, [r0, #0]
 8005c06:	c920      	ldmia	r1!, {r5}
 8005c08:	b29a      	uxth	r2, r3
 8005c0a:	1914      	adds	r4, r2, r4
 8005c0c:	b2aa      	uxth	r2, r5
 8005c0e:	1aa2      	subs	r2, r4, r2
 8005c10:	0c1b      	lsrs	r3, r3, #16
 8005c12:	0c2d      	lsrs	r5, r5, #16
 8005c14:	1414      	asrs	r4, r2, #16
 8005c16:	1b5b      	subs	r3, r3, r5
 8005c18:	191b      	adds	r3, r3, r4
 8005c1a:	141c      	asrs	r4, r3, #16
 8005c1c:	b292      	uxth	r2, r2
 8005c1e:	041b      	lsls	r3, r3, #16
 8005c20:	4313      	orrs	r3, r2
 8005c22:	c008      	stmia	r0!, {r3}
 8005c24:	9b04      	ldr	r3, [sp, #16]
 8005c26:	428b      	cmp	r3, r1
 8005c28:	d2ec      	bcs.n	8005c04 <quorem+0xa8>
 8005c2a:	9b00      	ldr	r3, [sp, #0]
 8005c2c:	9a02      	ldr	r2, [sp, #8]
 8005c2e:	009b      	lsls	r3, r3, #2
 8005c30:	18d3      	adds	r3, r2, r3
 8005c32:	681a      	ldr	r2, [r3, #0]
 8005c34:	2a00      	cmp	r2, #0
 8005c36:	d015      	beq.n	8005c64 <quorem+0x108>
 8005c38:	9801      	ldr	r0, [sp, #4]
 8005c3a:	b007      	add	sp, #28
 8005c3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c3e:	6823      	ldr	r3, [r4, #0]
 8005c40:	2b00      	cmp	r3, #0
 8005c42:	d106      	bne.n	8005c52 <quorem+0xf6>
 8005c44:	9b00      	ldr	r3, [sp, #0]
 8005c46:	3b01      	subs	r3, #1
 8005c48:	9300      	str	r3, [sp, #0]
 8005c4a:	9b02      	ldr	r3, [sp, #8]
 8005c4c:	3c04      	subs	r4, #4
 8005c4e:	42a3      	cmp	r3, r4
 8005c50:	d3f5      	bcc.n	8005c3e <quorem+0xe2>
 8005c52:	9b00      	ldr	r3, [sp, #0]
 8005c54:	6133      	str	r3, [r6, #16]
 8005c56:	e7c7      	b.n	8005be8 <quorem+0x8c>
 8005c58:	681a      	ldr	r2, [r3, #0]
 8005c5a:	2a00      	cmp	r2, #0
 8005c5c:	d106      	bne.n	8005c6c <quorem+0x110>
 8005c5e:	9a00      	ldr	r2, [sp, #0]
 8005c60:	3a01      	subs	r2, #1
 8005c62:	9200      	str	r2, [sp, #0]
 8005c64:	9a02      	ldr	r2, [sp, #8]
 8005c66:	3b04      	subs	r3, #4
 8005c68:	429a      	cmp	r2, r3
 8005c6a:	d3f5      	bcc.n	8005c58 <quorem+0xfc>
 8005c6c:	9b00      	ldr	r3, [sp, #0]
 8005c6e:	6133      	str	r3, [r6, #16]
 8005c70:	e7e2      	b.n	8005c38 <quorem+0xdc>
	...

08005c74 <_dtoa_r>:
 8005c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c76:	b09d      	sub	sp, #116	; 0x74
 8005c78:	9202      	str	r2, [sp, #8]
 8005c7a:	9303      	str	r3, [sp, #12]
 8005c7c:	9b02      	ldr	r3, [sp, #8]
 8005c7e:	9c03      	ldr	r4, [sp, #12]
 8005c80:	9308      	str	r3, [sp, #32]
 8005c82:	9409      	str	r4, [sp, #36]	; 0x24
 8005c84:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005c86:	0007      	movs	r7, r0
 8005c88:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8005c8a:	2c00      	cmp	r4, #0
 8005c8c:	d10e      	bne.n	8005cac <_dtoa_r+0x38>
 8005c8e:	2010      	movs	r0, #16
 8005c90:	f000 fe0e 	bl	80068b0 <malloc>
 8005c94:	1e02      	subs	r2, r0, #0
 8005c96:	6278      	str	r0, [r7, #36]	; 0x24
 8005c98:	d104      	bne.n	8005ca4 <_dtoa_r+0x30>
 8005c9a:	21ea      	movs	r1, #234	; 0xea
 8005c9c:	4bc7      	ldr	r3, [pc, #796]	; (8005fbc <_dtoa_r+0x348>)
 8005c9e:	48c8      	ldr	r0, [pc, #800]	; (8005fc0 <_dtoa_r+0x34c>)
 8005ca0:	f001 fc42 	bl	8007528 <__assert_func>
 8005ca4:	6044      	str	r4, [r0, #4]
 8005ca6:	6084      	str	r4, [r0, #8]
 8005ca8:	6004      	str	r4, [r0, #0]
 8005caa:	60c4      	str	r4, [r0, #12]
 8005cac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cae:	6819      	ldr	r1, [r3, #0]
 8005cb0:	2900      	cmp	r1, #0
 8005cb2:	d00a      	beq.n	8005cca <_dtoa_r+0x56>
 8005cb4:	685a      	ldr	r2, [r3, #4]
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	4093      	lsls	r3, r2
 8005cba:	604a      	str	r2, [r1, #4]
 8005cbc:	608b      	str	r3, [r1, #8]
 8005cbe:	0038      	movs	r0, r7
 8005cc0:	f000 fe58 	bl	8006974 <_Bfree>
 8005cc4:	2200      	movs	r2, #0
 8005cc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cc8:	601a      	str	r2, [r3, #0]
 8005cca:	9b03      	ldr	r3, [sp, #12]
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	da20      	bge.n	8005d12 <_dtoa_r+0x9e>
 8005cd0:	2301      	movs	r3, #1
 8005cd2:	602b      	str	r3, [r5, #0]
 8005cd4:	9b03      	ldr	r3, [sp, #12]
 8005cd6:	005b      	lsls	r3, r3, #1
 8005cd8:	085b      	lsrs	r3, r3, #1
 8005cda:	9309      	str	r3, [sp, #36]	; 0x24
 8005cdc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005cde:	4bb9      	ldr	r3, [pc, #740]	; (8005fc4 <_dtoa_r+0x350>)
 8005ce0:	4ab8      	ldr	r2, [pc, #736]	; (8005fc4 <_dtoa_r+0x350>)
 8005ce2:	402b      	ands	r3, r5
 8005ce4:	4293      	cmp	r3, r2
 8005ce6:	d117      	bne.n	8005d18 <_dtoa_r+0xa4>
 8005ce8:	4bb7      	ldr	r3, [pc, #732]	; (8005fc8 <_dtoa_r+0x354>)
 8005cea:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005cec:	0328      	lsls	r0, r5, #12
 8005cee:	6013      	str	r3, [r2, #0]
 8005cf0:	9b02      	ldr	r3, [sp, #8]
 8005cf2:	0b00      	lsrs	r0, r0, #12
 8005cf4:	4318      	orrs	r0, r3
 8005cf6:	d101      	bne.n	8005cfc <_dtoa_r+0x88>
 8005cf8:	f000 fdbf 	bl	800687a <_dtoa_r+0xc06>
 8005cfc:	48b3      	ldr	r0, [pc, #716]	; (8005fcc <_dtoa_r+0x358>)
 8005cfe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005d00:	9006      	str	r0, [sp, #24]
 8005d02:	2b00      	cmp	r3, #0
 8005d04:	d002      	beq.n	8005d0c <_dtoa_r+0x98>
 8005d06:	4bb2      	ldr	r3, [pc, #712]	; (8005fd0 <_dtoa_r+0x35c>)
 8005d08:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005d0a:	6013      	str	r3, [r2, #0]
 8005d0c:	9806      	ldr	r0, [sp, #24]
 8005d0e:	b01d      	add	sp, #116	; 0x74
 8005d10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d12:	2300      	movs	r3, #0
 8005d14:	602b      	str	r3, [r5, #0]
 8005d16:	e7e1      	b.n	8005cdc <_dtoa_r+0x68>
 8005d18:	9b08      	ldr	r3, [sp, #32]
 8005d1a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8005d1c:	9312      	str	r3, [sp, #72]	; 0x48
 8005d1e:	9413      	str	r4, [sp, #76]	; 0x4c
 8005d20:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005d22:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005d24:	2200      	movs	r2, #0
 8005d26:	2300      	movs	r3, #0
 8005d28:	f7fa fb90 	bl	800044c <__aeabi_dcmpeq>
 8005d2c:	1e04      	subs	r4, r0, #0
 8005d2e:	d009      	beq.n	8005d44 <_dtoa_r+0xd0>
 8005d30:	2301      	movs	r3, #1
 8005d32:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005d34:	6013      	str	r3, [r2, #0]
 8005d36:	4ba7      	ldr	r3, [pc, #668]	; (8005fd4 <_dtoa_r+0x360>)
 8005d38:	9306      	str	r3, [sp, #24]
 8005d3a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005d3c:	2b00      	cmp	r3, #0
 8005d3e:	d0e5      	beq.n	8005d0c <_dtoa_r+0x98>
 8005d40:	4ba5      	ldr	r3, [pc, #660]	; (8005fd8 <_dtoa_r+0x364>)
 8005d42:	e7e1      	b.n	8005d08 <_dtoa_r+0x94>
 8005d44:	ab1a      	add	r3, sp, #104	; 0x68
 8005d46:	9301      	str	r3, [sp, #4]
 8005d48:	ab1b      	add	r3, sp, #108	; 0x6c
 8005d4a:	9300      	str	r3, [sp, #0]
 8005d4c:	0038      	movs	r0, r7
 8005d4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005d50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005d52:	f001 f903 	bl	8006f5c <__d2b>
 8005d56:	006e      	lsls	r6, r5, #1
 8005d58:	9005      	str	r0, [sp, #20]
 8005d5a:	0d76      	lsrs	r6, r6, #21
 8005d5c:	d100      	bne.n	8005d60 <_dtoa_r+0xec>
 8005d5e:	e07c      	b.n	8005e5a <_dtoa_r+0x1e6>
 8005d60:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005d62:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005d64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005d66:	4a9d      	ldr	r2, [pc, #628]	; (8005fdc <_dtoa_r+0x368>)
 8005d68:	031b      	lsls	r3, r3, #12
 8005d6a:	0b1b      	lsrs	r3, r3, #12
 8005d6c:	431a      	orrs	r2, r3
 8005d6e:	0011      	movs	r1, r2
 8005d70:	4b9b      	ldr	r3, [pc, #620]	; (8005fe0 <_dtoa_r+0x36c>)
 8005d72:	9418      	str	r4, [sp, #96]	; 0x60
 8005d74:	18f6      	adds	r6, r6, r3
 8005d76:	2200      	movs	r2, #0
 8005d78:	4b9a      	ldr	r3, [pc, #616]	; (8005fe4 <_dtoa_r+0x370>)
 8005d7a:	f7fc fb79 	bl	8002470 <__aeabi_dsub>
 8005d7e:	4a9a      	ldr	r2, [pc, #616]	; (8005fe8 <_dtoa_r+0x374>)
 8005d80:	4b9a      	ldr	r3, [pc, #616]	; (8005fec <_dtoa_r+0x378>)
 8005d82:	f7fc f909 	bl	8001f98 <__aeabi_dmul>
 8005d86:	4a9a      	ldr	r2, [pc, #616]	; (8005ff0 <_dtoa_r+0x37c>)
 8005d88:	4b9a      	ldr	r3, [pc, #616]	; (8005ff4 <_dtoa_r+0x380>)
 8005d8a:	f7fb f9c7 	bl	800111c <__aeabi_dadd>
 8005d8e:	0004      	movs	r4, r0
 8005d90:	0030      	movs	r0, r6
 8005d92:	000d      	movs	r5, r1
 8005d94:	f7fc ff52 	bl	8002c3c <__aeabi_i2d>
 8005d98:	4a97      	ldr	r2, [pc, #604]	; (8005ff8 <_dtoa_r+0x384>)
 8005d9a:	4b98      	ldr	r3, [pc, #608]	; (8005ffc <_dtoa_r+0x388>)
 8005d9c:	f7fc f8fc 	bl	8001f98 <__aeabi_dmul>
 8005da0:	0002      	movs	r2, r0
 8005da2:	000b      	movs	r3, r1
 8005da4:	0020      	movs	r0, r4
 8005da6:	0029      	movs	r1, r5
 8005da8:	f7fb f9b8 	bl	800111c <__aeabi_dadd>
 8005dac:	0004      	movs	r4, r0
 8005dae:	000d      	movs	r5, r1
 8005db0:	f7fc ff0e 	bl	8002bd0 <__aeabi_d2iz>
 8005db4:	2200      	movs	r2, #0
 8005db6:	9002      	str	r0, [sp, #8]
 8005db8:	2300      	movs	r3, #0
 8005dba:	0020      	movs	r0, r4
 8005dbc:	0029      	movs	r1, r5
 8005dbe:	f7fa fb4b 	bl	8000458 <__aeabi_dcmplt>
 8005dc2:	2800      	cmp	r0, #0
 8005dc4:	d00b      	beq.n	8005dde <_dtoa_r+0x16a>
 8005dc6:	9802      	ldr	r0, [sp, #8]
 8005dc8:	f7fc ff38 	bl	8002c3c <__aeabi_i2d>
 8005dcc:	002b      	movs	r3, r5
 8005dce:	0022      	movs	r2, r4
 8005dd0:	f7fa fb3c 	bl	800044c <__aeabi_dcmpeq>
 8005dd4:	4243      	negs	r3, r0
 8005dd6:	4158      	adcs	r0, r3
 8005dd8:	9b02      	ldr	r3, [sp, #8]
 8005dda:	1a1b      	subs	r3, r3, r0
 8005ddc:	9302      	str	r3, [sp, #8]
 8005dde:	2301      	movs	r3, #1
 8005de0:	9316      	str	r3, [sp, #88]	; 0x58
 8005de2:	9b02      	ldr	r3, [sp, #8]
 8005de4:	2b16      	cmp	r3, #22
 8005de6:	d80f      	bhi.n	8005e08 <_dtoa_r+0x194>
 8005de8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005dea:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005dec:	00da      	lsls	r2, r3, #3
 8005dee:	4b84      	ldr	r3, [pc, #528]	; (8006000 <_dtoa_r+0x38c>)
 8005df0:	189b      	adds	r3, r3, r2
 8005df2:	681a      	ldr	r2, [r3, #0]
 8005df4:	685b      	ldr	r3, [r3, #4]
 8005df6:	f7fa fb2f 	bl	8000458 <__aeabi_dcmplt>
 8005dfa:	2800      	cmp	r0, #0
 8005dfc:	d049      	beq.n	8005e92 <_dtoa_r+0x21e>
 8005dfe:	9b02      	ldr	r3, [sp, #8]
 8005e00:	3b01      	subs	r3, #1
 8005e02:	9302      	str	r3, [sp, #8]
 8005e04:	2300      	movs	r3, #0
 8005e06:	9316      	str	r3, [sp, #88]	; 0x58
 8005e08:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005e0a:	1b9e      	subs	r6, r3, r6
 8005e0c:	2300      	movs	r3, #0
 8005e0e:	930a      	str	r3, [sp, #40]	; 0x28
 8005e10:	0033      	movs	r3, r6
 8005e12:	3b01      	subs	r3, #1
 8005e14:	930d      	str	r3, [sp, #52]	; 0x34
 8005e16:	d504      	bpl.n	8005e22 <_dtoa_r+0x1ae>
 8005e18:	2301      	movs	r3, #1
 8005e1a:	1b9b      	subs	r3, r3, r6
 8005e1c:	930a      	str	r3, [sp, #40]	; 0x28
 8005e1e:	2300      	movs	r3, #0
 8005e20:	930d      	str	r3, [sp, #52]	; 0x34
 8005e22:	9b02      	ldr	r3, [sp, #8]
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	db36      	blt.n	8005e96 <_dtoa_r+0x222>
 8005e28:	9a02      	ldr	r2, [sp, #8]
 8005e2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005e2c:	4694      	mov	ip, r2
 8005e2e:	4463      	add	r3, ip
 8005e30:	930d      	str	r3, [sp, #52]	; 0x34
 8005e32:	2300      	movs	r3, #0
 8005e34:	9215      	str	r2, [sp, #84]	; 0x54
 8005e36:	930e      	str	r3, [sp, #56]	; 0x38
 8005e38:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005e3a:	2401      	movs	r4, #1
 8005e3c:	2b09      	cmp	r3, #9
 8005e3e:	d864      	bhi.n	8005f0a <_dtoa_r+0x296>
 8005e40:	2b05      	cmp	r3, #5
 8005e42:	dd02      	ble.n	8005e4a <_dtoa_r+0x1d6>
 8005e44:	2400      	movs	r4, #0
 8005e46:	3b04      	subs	r3, #4
 8005e48:	9322      	str	r3, [sp, #136]	; 0x88
 8005e4a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005e4c:	1e98      	subs	r0, r3, #2
 8005e4e:	2803      	cmp	r0, #3
 8005e50:	d864      	bhi.n	8005f1c <_dtoa_r+0x2a8>
 8005e52:	f7fa f961 	bl	8000118 <__gnu_thumb1_case_uqi>
 8005e56:	3829      	.short	0x3829
 8005e58:	5836      	.short	0x5836
 8005e5a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005e5c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005e5e:	189e      	adds	r6, r3, r2
 8005e60:	4b68      	ldr	r3, [pc, #416]	; (8006004 <_dtoa_r+0x390>)
 8005e62:	18f2      	adds	r2, r6, r3
 8005e64:	2a20      	cmp	r2, #32
 8005e66:	dd0f      	ble.n	8005e88 <_dtoa_r+0x214>
 8005e68:	2340      	movs	r3, #64	; 0x40
 8005e6a:	1a9b      	subs	r3, r3, r2
 8005e6c:	409d      	lsls	r5, r3
 8005e6e:	4b66      	ldr	r3, [pc, #408]	; (8006008 <_dtoa_r+0x394>)
 8005e70:	9802      	ldr	r0, [sp, #8]
 8005e72:	18f3      	adds	r3, r6, r3
 8005e74:	40d8      	lsrs	r0, r3
 8005e76:	4328      	orrs	r0, r5
 8005e78:	f7fc ff10 	bl	8002c9c <__aeabi_ui2d>
 8005e7c:	2301      	movs	r3, #1
 8005e7e:	4c63      	ldr	r4, [pc, #396]	; (800600c <_dtoa_r+0x398>)
 8005e80:	3e01      	subs	r6, #1
 8005e82:	1909      	adds	r1, r1, r4
 8005e84:	9318      	str	r3, [sp, #96]	; 0x60
 8005e86:	e776      	b.n	8005d76 <_dtoa_r+0x102>
 8005e88:	2320      	movs	r3, #32
 8005e8a:	9802      	ldr	r0, [sp, #8]
 8005e8c:	1a9b      	subs	r3, r3, r2
 8005e8e:	4098      	lsls	r0, r3
 8005e90:	e7f2      	b.n	8005e78 <_dtoa_r+0x204>
 8005e92:	9016      	str	r0, [sp, #88]	; 0x58
 8005e94:	e7b8      	b.n	8005e08 <_dtoa_r+0x194>
 8005e96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e98:	9a02      	ldr	r2, [sp, #8]
 8005e9a:	1a9b      	subs	r3, r3, r2
 8005e9c:	930a      	str	r3, [sp, #40]	; 0x28
 8005e9e:	4253      	negs	r3, r2
 8005ea0:	930e      	str	r3, [sp, #56]	; 0x38
 8005ea2:	2300      	movs	r3, #0
 8005ea4:	9315      	str	r3, [sp, #84]	; 0x54
 8005ea6:	e7c7      	b.n	8005e38 <_dtoa_r+0x1c4>
 8005ea8:	2300      	movs	r3, #0
 8005eaa:	930f      	str	r3, [sp, #60]	; 0x3c
 8005eac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005eae:	930c      	str	r3, [sp, #48]	; 0x30
 8005eb0:	9307      	str	r3, [sp, #28]
 8005eb2:	2b00      	cmp	r3, #0
 8005eb4:	dc13      	bgt.n	8005ede <_dtoa_r+0x26a>
 8005eb6:	2301      	movs	r3, #1
 8005eb8:	001a      	movs	r2, r3
 8005eba:	930c      	str	r3, [sp, #48]	; 0x30
 8005ebc:	9307      	str	r3, [sp, #28]
 8005ebe:	9223      	str	r2, [sp, #140]	; 0x8c
 8005ec0:	e00d      	b.n	8005ede <_dtoa_r+0x26a>
 8005ec2:	2301      	movs	r3, #1
 8005ec4:	e7f1      	b.n	8005eaa <_dtoa_r+0x236>
 8005ec6:	2300      	movs	r3, #0
 8005ec8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8005eca:	930f      	str	r3, [sp, #60]	; 0x3c
 8005ecc:	4694      	mov	ip, r2
 8005ece:	9b02      	ldr	r3, [sp, #8]
 8005ed0:	4463      	add	r3, ip
 8005ed2:	930c      	str	r3, [sp, #48]	; 0x30
 8005ed4:	3301      	adds	r3, #1
 8005ed6:	9307      	str	r3, [sp, #28]
 8005ed8:	2b00      	cmp	r3, #0
 8005eda:	dc00      	bgt.n	8005ede <_dtoa_r+0x26a>
 8005edc:	2301      	movs	r3, #1
 8005ede:	2200      	movs	r2, #0
 8005ee0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8005ee2:	6042      	str	r2, [r0, #4]
 8005ee4:	3204      	adds	r2, #4
 8005ee6:	0015      	movs	r5, r2
 8005ee8:	3514      	adds	r5, #20
 8005eea:	6841      	ldr	r1, [r0, #4]
 8005eec:	429d      	cmp	r5, r3
 8005eee:	d919      	bls.n	8005f24 <_dtoa_r+0x2b0>
 8005ef0:	0038      	movs	r0, r7
 8005ef2:	f000 fcfb 	bl	80068ec <_Balloc>
 8005ef6:	9006      	str	r0, [sp, #24]
 8005ef8:	2800      	cmp	r0, #0
 8005efa:	d117      	bne.n	8005f2c <_dtoa_r+0x2b8>
 8005efc:	21d5      	movs	r1, #213	; 0xd5
 8005efe:	0002      	movs	r2, r0
 8005f00:	4b43      	ldr	r3, [pc, #268]	; (8006010 <_dtoa_r+0x39c>)
 8005f02:	0049      	lsls	r1, r1, #1
 8005f04:	e6cb      	b.n	8005c9e <_dtoa_r+0x2a>
 8005f06:	2301      	movs	r3, #1
 8005f08:	e7de      	b.n	8005ec8 <_dtoa_r+0x254>
 8005f0a:	2300      	movs	r3, #0
 8005f0c:	940f      	str	r4, [sp, #60]	; 0x3c
 8005f0e:	9322      	str	r3, [sp, #136]	; 0x88
 8005f10:	3b01      	subs	r3, #1
 8005f12:	930c      	str	r3, [sp, #48]	; 0x30
 8005f14:	9307      	str	r3, [sp, #28]
 8005f16:	2200      	movs	r2, #0
 8005f18:	3313      	adds	r3, #19
 8005f1a:	e7d0      	b.n	8005ebe <_dtoa_r+0x24a>
 8005f1c:	2301      	movs	r3, #1
 8005f1e:	930f      	str	r3, [sp, #60]	; 0x3c
 8005f20:	3b02      	subs	r3, #2
 8005f22:	e7f6      	b.n	8005f12 <_dtoa_r+0x29e>
 8005f24:	3101      	adds	r1, #1
 8005f26:	6041      	str	r1, [r0, #4]
 8005f28:	0052      	lsls	r2, r2, #1
 8005f2a:	e7dc      	b.n	8005ee6 <_dtoa_r+0x272>
 8005f2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f2e:	9a06      	ldr	r2, [sp, #24]
 8005f30:	601a      	str	r2, [r3, #0]
 8005f32:	9b07      	ldr	r3, [sp, #28]
 8005f34:	2b0e      	cmp	r3, #14
 8005f36:	d900      	bls.n	8005f3a <_dtoa_r+0x2c6>
 8005f38:	e0eb      	b.n	8006112 <_dtoa_r+0x49e>
 8005f3a:	2c00      	cmp	r4, #0
 8005f3c:	d100      	bne.n	8005f40 <_dtoa_r+0x2cc>
 8005f3e:	e0e8      	b.n	8006112 <_dtoa_r+0x49e>
 8005f40:	9b02      	ldr	r3, [sp, #8]
 8005f42:	2b00      	cmp	r3, #0
 8005f44:	dd68      	ble.n	8006018 <_dtoa_r+0x3a4>
 8005f46:	001a      	movs	r2, r3
 8005f48:	210f      	movs	r1, #15
 8005f4a:	4b2d      	ldr	r3, [pc, #180]	; (8006000 <_dtoa_r+0x38c>)
 8005f4c:	400a      	ands	r2, r1
 8005f4e:	00d2      	lsls	r2, r2, #3
 8005f50:	189b      	adds	r3, r3, r2
 8005f52:	681d      	ldr	r5, [r3, #0]
 8005f54:	685e      	ldr	r6, [r3, #4]
 8005f56:	9b02      	ldr	r3, [sp, #8]
 8005f58:	111c      	asrs	r4, r3, #4
 8005f5a:	2302      	movs	r3, #2
 8005f5c:	9310      	str	r3, [sp, #64]	; 0x40
 8005f5e:	9b02      	ldr	r3, [sp, #8]
 8005f60:	05db      	lsls	r3, r3, #23
 8005f62:	d50b      	bpl.n	8005f7c <_dtoa_r+0x308>
 8005f64:	4b2b      	ldr	r3, [pc, #172]	; (8006014 <_dtoa_r+0x3a0>)
 8005f66:	400c      	ands	r4, r1
 8005f68:	6a1a      	ldr	r2, [r3, #32]
 8005f6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f6c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005f6e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005f70:	f7fb fc10 	bl	8001794 <__aeabi_ddiv>
 8005f74:	2303      	movs	r3, #3
 8005f76:	9008      	str	r0, [sp, #32]
 8005f78:	9109      	str	r1, [sp, #36]	; 0x24
 8005f7a:	9310      	str	r3, [sp, #64]	; 0x40
 8005f7c:	4b25      	ldr	r3, [pc, #148]	; (8006014 <_dtoa_r+0x3a0>)
 8005f7e:	9314      	str	r3, [sp, #80]	; 0x50
 8005f80:	2c00      	cmp	r4, #0
 8005f82:	d108      	bne.n	8005f96 <_dtoa_r+0x322>
 8005f84:	9808      	ldr	r0, [sp, #32]
 8005f86:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f88:	002a      	movs	r2, r5
 8005f8a:	0033      	movs	r3, r6
 8005f8c:	f7fb fc02 	bl	8001794 <__aeabi_ddiv>
 8005f90:	9008      	str	r0, [sp, #32]
 8005f92:	9109      	str	r1, [sp, #36]	; 0x24
 8005f94:	e05c      	b.n	8006050 <_dtoa_r+0x3dc>
 8005f96:	2301      	movs	r3, #1
 8005f98:	421c      	tst	r4, r3
 8005f9a:	d00b      	beq.n	8005fb4 <_dtoa_r+0x340>
 8005f9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005f9e:	0028      	movs	r0, r5
 8005fa0:	3301      	adds	r3, #1
 8005fa2:	9310      	str	r3, [sp, #64]	; 0x40
 8005fa4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005fa6:	0031      	movs	r1, r6
 8005fa8:	681a      	ldr	r2, [r3, #0]
 8005faa:	685b      	ldr	r3, [r3, #4]
 8005fac:	f7fb fff4 	bl	8001f98 <__aeabi_dmul>
 8005fb0:	0005      	movs	r5, r0
 8005fb2:	000e      	movs	r6, r1
 8005fb4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005fb6:	1064      	asrs	r4, r4, #1
 8005fb8:	3308      	adds	r3, #8
 8005fba:	e7e0      	b.n	8005f7e <_dtoa_r+0x30a>
 8005fbc:	08008475 	.word	0x08008475
 8005fc0:	0800848c 	.word	0x0800848c
 8005fc4:	7ff00000 	.word	0x7ff00000
 8005fc8:	0000270f 	.word	0x0000270f
 8005fcc:	08008471 	.word	0x08008471
 8005fd0:	08008474 	.word	0x08008474
 8005fd4:	08008444 	.word	0x08008444
 8005fd8:	08008445 	.word	0x08008445
 8005fdc:	3ff00000 	.word	0x3ff00000
 8005fe0:	fffffc01 	.word	0xfffffc01
 8005fe4:	3ff80000 	.word	0x3ff80000
 8005fe8:	636f4361 	.word	0x636f4361
 8005fec:	3fd287a7 	.word	0x3fd287a7
 8005ff0:	8b60c8b3 	.word	0x8b60c8b3
 8005ff4:	3fc68a28 	.word	0x3fc68a28
 8005ff8:	509f79fb 	.word	0x509f79fb
 8005ffc:	3fd34413 	.word	0x3fd34413
 8006000:	08008580 	.word	0x08008580
 8006004:	00000432 	.word	0x00000432
 8006008:	00000412 	.word	0x00000412
 800600c:	fe100000 	.word	0xfe100000
 8006010:	080084e7 	.word	0x080084e7
 8006014:	08008558 	.word	0x08008558
 8006018:	2302      	movs	r3, #2
 800601a:	9310      	str	r3, [sp, #64]	; 0x40
 800601c:	9b02      	ldr	r3, [sp, #8]
 800601e:	2b00      	cmp	r3, #0
 8006020:	d016      	beq.n	8006050 <_dtoa_r+0x3dc>
 8006022:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006024:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006026:	425c      	negs	r4, r3
 8006028:	230f      	movs	r3, #15
 800602a:	4ab6      	ldr	r2, [pc, #728]	; (8006304 <_dtoa_r+0x690>)
 800602c:	4023      	ands	r3, r4
 800602e:	00db      	lsls	r3, r3, #3
 8006030:	18d3      	adds	r3, r2, r3
 8006032:	681a      	ldr	r2, [r3, #0]
 8006034:	685b      	ldr	r3, [r3, #4]
 8006036:	f7fb ffaf 	bl	8001f98 <__aeabi_dmul>
 800603a:	2601      	movs	r6, #1
 800603c:	2300      	movs	r3, #0
 800603e:	9008      	str	r0, [sp, #32]
 8006040:	9109      	str	r1, [sp, #36]	; 0x24
 8006042:	4db1      	ldr	r5, [pc, #708]	; (8006308 <_dtoa_r+0x694>)
 8006044:	1124      	asrs	r4, r4, #4
 8006046:	2c00      	cmp	r4, #0
 8006048:	d000      	beq.n	800604c <_dtoa_r+0x3d8>
 800604a:	e094      	b.n	8006176 <_dtoa_r+0x502>
 800604c:	2b00      	cmp	r3, #0
 800604e:	d19f      	bne.n	8005f90 <_dtoa_r+0x31c>
 8006050:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006052:	2b00      	cmp	r3, #0
 8006054:	d100      	bne.n	8006058 <_dtoa_r+0x3e4>
 8006056:	e09b      	b.n	8006190 <_dtoa_r+0x51c>
 8006058:	9c08      	ldr	r4, [sp, #32]
 800605a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800605c:	2200      	movs	r2, #0
 800605e:	0020      	movs	r0, r4
 8006060:	0029      	movs	r1, r5
 8006062:	4baa      	ldr	r3, [pc, #680]	; (800630c <_dtoa_r+0x698>)
 8006064:	f7fa f9f8 	bl	8000458 <__aeabi_dcmplt>
 8006068:	2800      	cmp	r0, #0
 800606a:	d100      	bne.n	800606e <_dtoa_r+0x3fa>
 800606c:	e090      	b.n	8006190 <_dtoa_r+0x51c>
 800606e:	9b07      	ldr	r3, [sp, #28]
 8006070:	2b00      	cmp	r3, #0
 8006072:	d100      	bne.n	8006076 <_dtoa_r+0x402>
 8006074:	e08c      	b.n	8006190 <_dtoa_r+0x51c>
 8006076:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006078:	2b00      	cmp	r3, #0
 800607a:	dd46      	ble.n	800610a <_dtoa_r+0x496>
 800607c:	9b02      	ldr	r3, [sp, #8]
 800607e:	2200      	movs	r2, #0
 8006080:	0020      	movs	r0, r4
 8006082:	0029      	movs	r1, r5
 8006084:	1e5e      	subs	r6, r3, #1
 8006086:	4ba2      	ldr	r3, [pc, #648]	; (8006310 <_dtoa_r+0x69c>)
 8006088:	f7fb ff86 	bl	8001f98 <__aeabi_dmul>
 800608c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800608e:	9008      	str	r0, [sp, #32]
 8006090:	9109      	str	r1, [sp, #36]	; 0x24
 8006092:	3301      	adds	r3, #1
 8006094:	9310      	str	r3, [sp, #64]	; 0x40
 8006096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006098:	9810      	ldr	r0, [sp, #64]	; 0x40
 800609a:	9c08      	ldr	r4, [sp, #32]
 800609c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800609e:	9314      	str	r3, [sp, #80]	; 0x50
 80060a0:	f7fc fdcc 	bl	8002c3c <__aeabi_i2d>
 80060a4:	0022      	movs	r2, r4
 80060a6:	002b      	movs	r3, r5
 80060a8:	f7fb ff76 	bl	8001f98 <__aeabi_dmul>
 80060ac:	2200      	movs	r2, #0
 80060ae:	4b99      	ldr	r3, [pc, #612]	; (8006314 <_dtoa_r+0x6a0>)
 80060b0:	f7fb f834 	bl	800111c <__aeabi_dadd>
 80060b4:	9010      	str	r0, [sp, #64]	; 0x40
 80060b6:	9111      	str	r1, [sp, #68]	; 0x44
 80060b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80060ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80060bc:	9208      	str	r2, [sp, #32]
 80060be:	9309      	str	r3, [sp, #36]	; 0x24
 80060c0:	4a95      	ldr	r2, [pc, #596]	; (8006318 <_dtoa_r+0x6a4>)
 80060c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80060c4:	4694      	mov	ip, r2
 80060c6:	4463      	add	r3, ip
 80060c8:	9317      	str	r3, [sp, #92]	; 0x5c
 80060ca:	9309      	str	r3, [sp, #36]	; 0x24
 80060cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80060ce:	2b00      	cmp	r3, #0
 80060d0:	d161      	bne.n	8006196 <_dtoa_r+0x522>
 80060d2:	2200      	movs	r2, #0
 80060d4:	0020      	movs	r0, r4
 80060d6:	0029      	movs	r1, r5
 80060d8:	4b90      	ldr	r3, [pc, #576]	; (800631c <_dtoa_r+0x6a8>)
 80060da:	f7fc f9c9 	bl	8002470 <__aeabi_dsub>
 80060de:	9a08      	ldr	r2, [sp, #32]
 80060e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80060e2:	0004      	movs	r4, r0
 80060e4:	000d      	movs	r5, r1
 80060e6:	f7fa f9cb 	bl	8000480 <__aeabi_dcmpgt>
 80060ea:	2800      	cmp	r0, #0
 80060ec:	d000      	beq.n	80060f0 <_dtoa_r+0x47c>
 80060ee:	e2af      	b.n	8006650 <_dtoa_r+0x9dc>
 80060f0:	488b      	ldr	r0, [pc, #556]	; (8006320 <_dtoa_r+0x6ac>)
 80060f2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80060f4:	4684      	mov	ip, r0
 80060f6:	4461      	add	r1, ip
 80060f8:	000b      	movs	r3, r1
 80060fa:	0020      	movs	r0, r4
 80060fc:	0029      	movs	r1, r5
 80060fe:	9a08      	ldr	r2, [sp, #32]
 8006100:	f7fa f9aa 	bl	8000458 <__aeabi_dcmplt>
 8006104:	2800      	cmp	r0, #0
 8006106:	d000      	beq.n	800610a <_dtoa_r+0x496>
 8006108:	e29f      	b.n	800664a <_dtoa_r+0x9d6>
 800610a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800610c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800610e:	9308      	str	r3, [sp, #32]
 8006110:	9409      	str	r4, [sp, #36]	; 0x24
 8006112:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8006114:	2b00      	cmp	r3, #0
 8006116:	da00      	bge.n	800611a <_dtoa_r+0x4a6>
 8006118:	e172      	b.n	8006400 <_dtoa_r+0x78c>
 800611a:	9a02      	ldr	r2, [sp, #8]
 800611c:	2a0e      	cmp	r2, #14
 800611e:	dd00      	ble.n	8006122 <_dtoa_r+0x4ae>
 8006120:	e16e      	b.n	8006400 <_dtoa_r+0x78c>
 8006122:	4b78      	ldr	r3, [pc, #480]	; (8006304 <_dtoa_r+0x690>)
 8006124:	00d2      	lsls	r2, r2, #3
 8006126:	189b      	adds	r3, r3, r2
 8006128:	685c      	ldr	r4, [r3, #4]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	930a      	str	r3, [sp, #40]	; 0x28
 800612e:	940b      	str	r4, [sp, #44]	; 0x2c
 8006130:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006132:	2b00      	cmp	r3, #0
 8006134:	db00      	blt.n	8006138 <_dtoa_r+0x4c4>
 8006136:	e0f7      	b.n	8006328 <_dtoa_r+0x6b4>
 8006138:	9b07      	ldr	r3, [sp, #28]
 800613a:	2b00      	cmp	r3, #0
 800613c:	dd00      	ble.n	8006140 <_dtoa_r+0x4cc>
 800613e:	e0f3      	b.n	8006328 <_dtoa_r+0x6b4>
 8006140:	d000      	beq.n	8006144 <_dtoa_r+0x4d0>
 8006142:	e282      	b.n	800664a <_dtoa_r+0x9d6>
 8006144:	980a      	ldr	r0, [sp, #40]	; 0x28
 8006146:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006148:	2200      	movs	r2, #0
 800614a:	4b74      	ldr	r3, [pc, #464]	; (800631c <_dtoa_r+0x6a8>)
 800614c:	f7fb ff24 	bl	8001f98 <__aeabi_dmul>
 8006150:	9a08      	ldr	r2, [sp, #32]
 8006152:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006154:	f7fa f99e 	bl	8000494 <__aeabi_dcmpge>
 8006158:	9e07      	ldr	r6, [sp, #28]
 800615a:	0035      	movs	r5, r6
 800615c:	2800      	cmp	r0, #0
 800615e:	d000      	beq.n	8006162 <_dtoa_r+0x4ee>
 8006160:	e259      	b.n	8006616 <_dtoa_r+0x9a2>
 8006162:	9b06      	ldr	r3, [sp, #24]
 8006164:	9a06      	ldr	r2, [sp, #24]
 8006166:	3301      	adds	r3, #1
 8006168:	9308      	str	r3, [sp, #32]
 800616a:	2331      	movs	r3, #49	; 0x31
 800616c:	7013      	strb	r3, [r2, #0]
 800616e:	9b02      	ldr	r3, [sp, #8]
 8006170:	3301      	adds	r3, #1
 8006172:	9302      	str	r3, [sp, #8]
 8006174:	e254      	b.n	8006620 <_dtoa_r+0x9ac>
 8006176:	4234      	tst	r4, r6
 8006178:	d007      	beq.n	800618a <_dtoa_r+0x516>
 800617a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800617c:	3301      	adds	r3, #1
 800617e:	9310      	str	r3, [sp, #64]	; 0x40
 8006180:	682a      	ldr	r2, [r5, #0]
 8006182:	686b      	ldr	r3, [r5, #4]
 8006184:	f7fb ff08 	bl	8001f98 <__aeabi_dmul>
 8006188:	0033      	movs	r3, r6
 800618a:	1064      	asrs	r4, r4, #1
 800618c:	3508      	adds	r5, #8
 800618e:	e75a      	b.n	8006046 <_dtoa_r+0x3d2>
 8006190:	9e02      	ldr	r6, [sp, #8]
 8006192:	9b07      	ldr	r3, [sp, #28]
 8006194:	e780      	b.n	8006098 <_dtoa_r+0x424>
 8006196:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006198:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800619a:	1e5a      	subs	r2, r3, #1
 800619c:	4b59      	ldr	r3, [pc, #356]	; (8006304 <_dtoa_r+0x690>)
 800619e:	00d2      	lsls	r2, r2, #3
 80061a0:	189b      	adds	r3, r3, r2
 80061a2:	681a      	ldr	r2, [r3, #0]
 80061a4:	685b      	ldr	r3, [r3, #4]
 80061a6:	2900      	cmp	r1, #0
 80061a8:	d051      	beq.n	800624e <_dtoa_r+0x5da>
 80061aa:	2000      	movs	r0, #0
 80061ac:	495d      	ldr	r1, [pc, #372]	; (8006324 <_dtoa_r+0x6b0>)
 80061ae:	f7fb faf1 	bl	8001794 <__aeabi_ddiv>
 80061b2:	9a08      	ldr	r2, [sp, #32]
 80061b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80061b6:	f7fc f95b 	bl	8002470 <__aeabi_dsub>
 80061ba:	9a06      	ldr	r2, [sp, #24]
 80061bc:	9b06      	ldr	r3, [sp, #24]
 80061be:	4694      	mov	ip, r2
 80061c0:	9317      	str	r3, [sp, #92]	; 0x5c
 80061c2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80061c4:	9010      	str	r0, [sp, #64]	; 0x40
 80061c6:	9111      	str	r1, [sp, #68]	; 0x44
 80061c8:	4463      	add	r3, ip
 80061ca:	9319      	str	r3, [sp, #100]	; 0x64
 80061cc:	0029      	movs	r1, r5
 80061ce:	0020      	movs	r0, r4
 80061d0:	f7fc fcfe 	bl	8002bd0 <__aeabi_d2iz>
 80061d4:	9014      	str	r0, [sp, #80]	; 0x50
 80061d6:	f7fc fd31 	bl	8002c3c <__aeabi_i2d>
 80061da:	0002      	movs	r2, r0
 80061dc:	000b      	movs	r3, r1
 80061de:	0020      	movs	r0, r4
 80061e0:	0029      	movs	r1, r5
 80061e2:	f7fc f945 	bl	8002470 <__aeabi_dsub>
 80061e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80061e8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80061ea:	3301      	adds	r3, #1
 80061ec:	9308      	str	r3, [sp, #32]
 80061ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80061f0:	0004      	movs	r4, r0
 80061f2:	3330      	adds	r3, #48	; 0x30
 80061f4:	7013      	strb	r3, [r2, #0]
 80061f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80061f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80061fa:	000d      	movs	r5, r1
 80061fc:	f7fa f92c 	bl	8000458 <__aeabi_dcmplt>
 8006200:	2800      	cmp	r0, #0
 8006202:	d175      	bne.n	80062f0 <_dtoa_r+0x67c>
 8006204:	0022      	movs	r2, r4
 8006206:	002b      	movs	r3, r5
 8006208:	2000      	movs	r0, #0
 800620a:	4940      	ldr	r1, [pc, #256]	; (800630c <_dtoa_r+0x698>)
 800620c:	f7fc f930 	bl	8002470 <__aeabi_dsub>
 8006210:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006212:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006214:	f7fa f920 	bl	8000458 <__aeabi_dcmplt>
 8006218:	2800      	cmp	r0, #0
 800621a:	d000      	beq.n	800621e <_dtoa_r+0x5aa>
 800621c:	e0d2      	b.n	80063c4 <_dtoa_r+0x750>
 800621e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8006220:	9a08      	ldr	r2, [sp, #32]
 8006222:	4293      	cmp	r3, r2
 8006224:	d100      	bne.n	8006228 <_dtoa_r+0x5b4>
 8006226:	e770      	b.n	800610a <_dtoa_r+0x496>
 8006228:	9810      	ldr	r0, [sp, #64]	; 0x40
 800622a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800622c:	2200      	movs	r2, #0
 800622e:	4b38      	ldr	r3, [pc, #224]	; (8006310 <_dtoa_r+0x69c>)
 8006230:	f7fb feb2 	bl	8001f98 <__aeabi_dmul>
 8006234:	4b36      	ldr	r3, [pc, #216]	; (8006310 <_dtoa_r+0x69c>)
 8006236:	9010      	str	r0, [sp, #64]	; 0x40
 8006238:	9111      	str	r1, [sp, #68]	; 0x44
 800623a:	2200      	movs	r2, #0
 800623c:	0020      	movs	r0, r4
 800623e:	0029      	movs	r1, r5
 8006240:	f7fb feaa 	bl	8001f98 <__aeabi_dmul>
 8006244:	9b08      	ldr	r3, [sp, #32]
 8006246:	0004      	movs	r4, r0
 8006248:	000d      	movs	r5, r1
 800624a:	9317      	str	r3, [sp, #92]	; 0x5c
 800624c:	e7be      	b.n	80061cc <_dtoa_r+0x558>
 800624e:	9808      	ldr	r0, [sp, #32]
 8006250:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006252:	f7fb fea1 	bl	8001f98 <__aeabi_dmul>
 8006256:	9a06      	ldr	r2, [sp, #24]
 8006258:	9b06      	ldr	r3, [sp, #24]
 800625a:	4694      	mov	ip, r2
 800625c:	9308      	str	r3, [sp, #32]
 800625e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006260:	9010      	str	r0, [sp, #64]	; 0x40
 8006262:	9111      	str	r1, [sp, #68]	; 0x44
 8006264:	4463      	add	r3, ip
 8006266:	9319      	str	r3, [sp, #100]	; 0x64
 8006268:	0029      	movs	r1, r5
 800626a:	0020      	movs	r0, r4
 800626c:	f7fc fcb0 	bl	8002bd0 <__aeabi_d2iz>
 8006270:	9017      	str	r0, [sp, #92]	; 0x5c
 8006272:	f7fc fce3 	bl	8002c3c <__aeabi_i2d>
 8006276:	0002      	movs	r2, r0
 8006278:	000b      	movs	r3, r1
 800627a:	0020      	movs	r0, r4
 800627c:	0029      	movs	r1, r5
 800627e:	f7fc f8f7 	bl	8002470 <__aeabi_dsub>
 8006282:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006284:	9a08      	ldr	r2, [sp, #32]
 8006286:	3330      	adds	r3, #48	; 0x30
 8006288:	7013      	strb	r3, [r2, #0]
 800628a:	0013      	movs	r3, r2
 800628c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800628e:	3301      	adds	r3, #1
 8006290:	0004      	movs	r4, r0
 8006292:	000d      	movs	r5, r1
 8006294:	9308      	str	r3, [sp, #32]
 8006296:	4293      	cmp	r3, r2
 8006298:	d12c      	bne.n	80062f4 <_dtoa_r+0x680>
 800629a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800629c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800629e:	9a06      	ldr	r2, [sp, #24]
 80062a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80062a2:	4694      	mov	ip, r2
 80062a4:	4463      	add	r3, ip
 80062a6:	2200      	movs	r2, #0
 80062a8:	9308      	str	r3, [sp, #32]
 80062aa:	4b1e      	ldr	r3, [pc, #120]	; (8006324 <_dtoa_r+0x6b0>)
 80062ac:	f7fa ff36 	bl	800111c <__aeabi_dadd>
 80062b0:	0002      	movs	r2, r0
 80062b2:	000b      	movs	r3, r1
 80062b4:	0020      	movs	r0, r4
 80062b6:	0029      	movs	r1, r5
 80062b8:	f7fa f8e2 	bl	8000480 <__aeabi_dcmpgt>
 80062bc:	2800      	cmp	r0, #0
 80062be:	d000      	beq.n	80062c2 <_dtoa_r+0x64e>
 80062c0:	e080      	b.n	80063c4 <_dtoa_r+0x750>
 80062c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80062c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80062c6:	2000      	movs	r0, #0
 80062c8:	4916      	ldr	r1, [pc, #88]	; (8006324 <_dtoa_r+0x6b0>)
 80062ca:	f7fc f8d1 	bl	8002470 <__aeabi_dsub>
 80062ce:	0002      	movs	r2, r0
 80062d0:	000b      	movs	r3, r1
 80062d2:	0020      	movs	r0, r4
 80062d4:	0029      	movs	r1, r5
 80062d6:	f7fa f8bf 	bl	8000458 <__aeabi_dcmplt>
 80062da:	2800      	cmp	r0, #0
 80062dc:	d100      	bne.n	80062e0 <_dtoa_r+0x66c>
 80062de:	e714      	b.n	800610a <_dtoa_r+0x496>
 80062e0:	9b08      	ldr	r3, [sp, #32]
 80062e2:	001a      	movs	r2, r3
 80062e4:	3a01      	subs	r2, #1
 80062e6:	9208      	str	r2, [sp, #32]
 80062e8:	7812      	ldrb	r2, [r2, #0]
 80062ea:	2a30      	cmp	r2, #48	; 0x30
 80062ec:	d0f8      	beq.n	80062e0 <_dtoa_r+0x66c>
 80062ee:	9308      	str	r3, [sp, #32]
 80062f0:	9602      	str	r6, [sp, #8]
 80062f2:	e055      	b.n	80063a0 <_dtoa_r+0x72c>
 80062f4:	2200      	movs	r2, #0
 80062f6:	4b06      	ldr	r3, [pc, #24]	; (8006310 <_dtoa_r+0x69c>)
 80062f8:	f7fb fe4e 	bl	8001f98 <__aeabi_dmul>
 80062fc:	0004      	movs	r4, r0
 80062fe:	000d      	movs	r5, r1
 8006300:	e7b2      	b.n	8006268 <_dtoa_r+0x5f4>
 8006302:	46c0      	nop			; (mov r8, r8)
 8006304:	08008580 	.word	0x08008580
 8006308:	08008558 	.word	0x08008558
 800630c:	3ff00000 	.word	0x3ff00000
 8006310:	40240000 	.word	0x40240000
 8006314:	401c0000 	.word	0x401c0000
 8006318:	fcc00000 	.word	0xfcc00000
 800631c:	40140000 	.word	0x40140000
 8006320:	7cc00000 	.word	0x7cc00000
 8006324:	3fe00000 	.word	0x3fe00000
 8006328:	9b07      	ldr	r3, [sp, #28]
 800632a:	9e06      	ldr	r6, [sp, #24]
 800632c:	3b01      	subs	r3, #1
 800632e:	199b      	adds	r3, r3, r6
 8006330:	930c      	str	r3, [sp, #48]	; 0x30
 8006332:	9c08      	ldr	r4, [sp, #32]
 8006334:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006336:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006338:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800633a:	0020      	movs	r0, r4
 800633c:	0029      	movs	r1, r5
 800633e:	f7fb fa29 	bl	8001794 <__aeabi_ddiv>
 8006342:	f7fc fc45 	bl	8002bd0 <__aeabi_d2iz>
 8006346:	9007      	str	r0, [sp, #28]
 8006348:	f7fc fc78 	bl	8002c3c <__aeabi_i2d>
 800634c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800634e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006350:	f7fb fe22 	bl	8001f98 <__aeabi_dmul>
 8006354:	0002      	movs	r2, r0
 8006356:	000b      	movs	r3, r1
 8006358:	0020      	movs	r0, r4
 800635a:	0029      	movs	r1, r5
 800635c:	f7fc f888 	bl	8002470 <__aeabi_dsub>
 8006360:	0033      	movs	r3, r6
 8006362:	9a07      	ldr	r2, [sp, #28]
 8006364:	3601      	adds	r6, #1
 8006366:	3230      	adds	r2, #48	; 0x30
 8006368:	701a      	strb	r2, [r3, #0]
 800636a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800636c:	9608      	str	r6, [sp, #32]
 800636e:	429a      	cmp	r2, r3
 8006370:	d139      	bne.n	80063e6 <_dtoa_r+0x772>
 8006372:	0002      	movs	r2, r0
 8006374:	000b      	movs	r3, r1
 8006376:	f7fa fed1 	bl	800111c <__aeabi_dadd>
 800637a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800637c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800637e:	0004      	movs	r4, r0
 8006380:	000d      	movs	r5, r1
 8006382:	f7fa f87d 	bl	8000480 <__aeabi_dcmpgt>
 8006386:	2800      	cmp	r0, #0
 8006388:	d11b      	bne.n	80063c2 <_dtoa_r+0x74e>
 800638a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800638c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800638e:	0020      	movs	r0, r4
 8006390:	0029      	movs	r1, r5
 8006392:	f7fa f85b 	bl	800044c <__aeabi_dcmpeq>
 8006396:	2800      	cmp	r0, #0
 8006398:	d002      	beq.n	80063a0 <_dtoa_r+0x72c>
 800639a:	9b07      	ldr	r3, [sp, #28]
 800639c:	07db      	lsls	r3, r3, #31
 800639e:	d410      	bmi.n	80063c2 <_dtoa_r+0x74e>
 80063a0:	0038      	movs	r0, r7
 80063a2:	9905      	ldr	r1, [sp, #20]
 80063a4:	f000 fae6 	bl	8006974 <_Bfree>
 80063a8:	2300      	movs	r3, #0
 80063aa:	9a08      	ldr	r2, [sp, #32]
 80063ac:	9802      	ldr	r0, [sp, #8]
 80063ae:	7013      	strb	r3, [r2, #0]
 80063b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80063b2:	3001      	adds	r0, #1
 80063b4:	6018      	str	r0, [r3, #0]
 80063b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80063b8:	2b00      	cmp	r3, #0
 80063ba:	d100      	bne.n	80063be <_dtoa_r+0x74a>
 80063bc:	e4a6      	b.n	8005d0c <_dtoa_r+0x98>
 80063be:	601a      	str	r2, [r3, #0]
 80063c0:	e4a4      	b.n	8005d0c <_dtoa_r+0x98>
 80063c2:	9e02      	ldr	r6, [sp, #8]
 80063c4:	9b08      	ldr	r3, [sp, #32]
 80063c6:	9308      	str	r3, [sp, #32]
 80063c8:	3b01      	subs	r3, #1
 80063ca:	781a      	ldrb	r2, [r3, #0]
 80063cc:	2a39      	cmp	r2, #57	; 0x39
 80063ce:	d106      	bne.n	80063de <_dtoa_r+0x76a>
 80063d0:	9a06      	ldr	r2, [sp, #24]
 80063d2:	429a      	cmp	r2, r3
 80063d4:	d1f7      	bne.n	80063c6 <_dtoa_r+0x752>
 80063d6:	2230      	movs	r2, #48	; 0x30
 80063d8:	9906      	ldr	r1, [sp, #24]
 80063da:	3601      	adds	r6, #1
 80063dc:	700a      	strb	r2, [r1, #0]
 80063de:	781a      	ldrb	r2, [r3, #0]
 80063e0:	3201      	adds	r2, #1
 80063e2:	701a      	strb	r2, [r3, #0]
 80063e4:	e784      	b.n	80062f0 <_dtoa_r+0x67c>
 80063e6:	2200      	movs	r2, #0
 80063e8:	4baa      	ldr	r3, [pc, #680]	; (8006694 <_dtoa_r+0xa20>)
 80063ea:	f7fb fdd5 	bl	8001f98 <__aeabi_dmul>
 80063ee:	2200      	movs	r2, #0
 80063f0:	2300      	movs	r3, #0
 80063f2:	0004      	movs	r4, r0
 80063f4:	000d      	movs	r5, r1
 80063f6:	f7fa f829 	bl	800044c <__aeabi_dcmpeq>
 80063fa:	2800      	cmp	r0, #0
 80063fc:	d09b      	beq.n	8006336 <_dtoa_r+0x6c2>
 80063fe:	e7cf      	b.n	80063a0 <_dtoa_r+0x72c>
 8006400:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8006402:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8006404:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006406:	2d00      	cmp	r5, #0
 8006408:	d012      	beq.n	8006430 <_dtoa_r+0x7bc>
 800640a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800640c:	2a01      	cmp	r2, #1
 800640e:	dc66      	bgt.n	80064de <_dtoa_r+0x86a>
 8006410:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006412:	2a00      	cmp	r2, #0
 8006414:	d05d      	beq.n	80064d2 <_dtoa_r+0x85e>
 8006416:	4aa0      	ldr	r2, [pc, #640]	; (8006698 <_dtoa_r+0xa24>)
 8006418:	189b      	adds	r3, r3, r2
 800641a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800641c:	2101      	movs	r1, #1
 800641e:	18d2      	adds	r2, r2, r3
 8006420:	920a      	str	r2, [sp, #40]	; 0x28
 8006422:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006424:	0038      	movs	r0, r7
 8006426:	18d3      	adds	r3, r2, r3
 8006428:	930d      	str	r3, [sp, #52]	; 0x34
 800642a:	f000 fb53 	bl	8006ad4 <__i2b>
 800642e:	0005      	movs	r5, r0
 8006430:	2c00      	cmp	r4, #0
 8006432:	dd0e      	ble.n	8006452 <_dtoa_r+0x7de>
 8006434:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006436:	2b00      	cmp	r3, #0
 8006438:	dd0b      	ble.n	8006452 <_dtoa_r+0x7de>
 800643a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800643c:	0023      	movs	r3, r4
 800643e:	4294      	cmp	r4, r2
 8006440:	dd00      	ble.n	8006444 <_dtoa_r+0x7d0>
 8006442:	0013      	movs	r3, r2
 8006444:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006446:	1ae4      	subs	r4, r4, r3
 8006448:	1ad2      	subs	r2, r2, r3
 800644a:	920a      	str	r2, [sp, #40]	; 0x28
 800644c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800644e:	1ad3      	subs	r3, r2, r3
 8006450:	930d      	str	r3, [sp, #52]	; 0x34
 8006452:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006454:	2b00      	cmp	r3, #0
 8006456:	d01f      	beq.n	8006498 <_dtoa_r+0x824>
 8006458:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800645a:	2b00      	cmp	r3, #0
 800645c:	d054      	beq.n	8006508 <_dtoa_r+0x894>
 800645e:	2e00      	cmp	r6, #0
 8006460:	dd11      	ble.n	8006486 <_dtoa_r+0x812>
 8006462:	0029      	movs	r1, r5
 8006464:	0032      	movs	r2, r6
 8006466:	0038      	movs	r0, r7
 8006468:	f000 fbfa 	bl	8006c60 <__pow5mult>
 800646c:	9a05      	ldr	r2, [sp, #20]
 800646e:	0001      	movs	r1, r0
 8006470:	0005      	movs	r5, r0
 8006472:	0038      	movs	r0, r7
 8006474:	f000 fb44 	bl	8006b00 <__multiply>
 8006478:	9905      	ldr	r1, [sp, #20]
 800647a:	9014      	str	r0, [sp, #80]	; 0x50
 800647c:	0038      	movs	r0, r7
 800647e:	f000 fa79 	bl	8006974 <_Bfree>
 8006482:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006484:	9305      	str	r3, [sp, #20]
 8006486:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006488:	1b9a      	subs	r2, r3, r6
 800648a:	42b3      	cmp	r3, r6
 800648c:	d004      	beq.n	8006498 <_dtoa_r+0x824>
 800648e:	0038      	movs	r0, r7
 8006490:	9905      	ldr	r1, [sp, #20]
 8006492:	f000 fbe5 	bl	8006c60 <__pow5mult>
 8006496:	9005      	str	r0, [sp, #20]
 8006498:	2101      	movs	r1, #1
 800649a:	0038      	movs	r0, r7
 800649c:	f000 fb1a 	bl	8006ad4 <__i2b>
 80064a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80064a2:	0006      	movs	r6, r0
 80064a4:	2b00      	cmp	r3, #0
 80064a6:	dd31      	ble.n	800650c <_dtoa_r+0x898>
 80064a8:	001a      	movs	r2, r3
 80064aa:	0001      	movs	r1, r0
 80064ac:	0038      	movs	r0, r7
 80064ae:	f000 fbd7 	bl	8006c60 <__pow5mult>
 80064b2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80064b4:	0006      	movs	r6, r0
 80064b6:	2b01      	cmp	r3, #1
 80064b8:	dd2d      	ble.n	8006516 <_dtoa_r+0x8a2>
 80064ba:	2300      	movs	r3, #0
 80064bc:	930e      	str	r3, [sp, #56]	; 0x38
 80064be:	6933      	ldr	r3, [r6, #16]
 80064c0:	3303      	adds	r3, #3
 80064c2:	009b      	lsls	r3, r3, #2
 80064c4:	18f3      	adds	r3, r6, r3
 80064c6:	6858      	ldr	r0, [r3, #4]
 80064c8:	f000 fabc 	bl	8006a44 <__hi0bits>
 80064cc:	2320      	movs	r3, #32
 80064ce:	1a18      	subs	r0, r3, r0
 80064d0:	e039      	b.n	8006546 <_dtoa_r+0x8d2>
 80064d2:	2336      	movs	r3, #54	; 0x36
 80064d4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80064d6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80064d8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80064da:	1a9b      	subs	r3, r3, r2
 80064dc:	e79d      	b.n	800641a <_dtoa_r+0x7a6>
 80064de:	9b07      	ldr	r3, [sp, #28]
 80064e0:	1e5e      	subs	r6, r3, #1
 80064e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80064e4:	42b3      	cmp	r3, r6
 80064e6:	db07      	blt.n	80064f8 <_dtoa_r+0x884>
 80064e8:	1b9e      	subs	r6, r3, r6
 80064ea:	9b07      	ldr	r3, [sp, #28]
 80064ec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80064ee:	2b00      	cmp	r3, #0
 80064f0:	da93      	bge.n	800641a <_dtoa_r+0x7a6>
 80064f2:	1ae4      	subs	r4, r4, r3
 80064f4:	2300      	movs	r3, #0
 80064f6:	e790      	b.n	800641a <_dtoa_r+0x7a6>
 80064f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80064fa:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80064fc:	1af3      	subs	r3, r6, r3
 80064fe:	18d3      	adds	r3, r2, r3
 8006500:	960e      	str	r6, [sp, #56]	; 0x38
 8006502:	9315      	str	r3, [sp, #84]	; 0x54
 8006504:	2600      	movs	r6, #0
 8006506:	e7f0      	b.n	80064ea <_dtoa_r+0x876>
 8006508:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800650a:	e7c0      	b.n	800648e <_dtoa_r+0x81a>
 800650c:	2300      	movs	r3, #0
 800650e:	930e      	str	r3, [sp, #56]	; 0x38
 8006510:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006512:	2b01      	cmp	r3, #1
 8006514:	dc13      	bgt.n	800653e <_dtoa_r+0x8ca>
 8006516:	2300      	movs	r3, #0
 8006518:	930e      	str	r3, [sp, #56]	; 0x38
 800651a:	9b08      	ldr	r3, [sp, #32]
 800651c:	2b00      	cmp	r3, #0
 800651e:	d10e      	bne.n	800653e <_dtoa_r+0x8ca>
 8006520:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006522:	031b      	lsls	r3, r3, #12
 8006524:	d10b      	bne.n	800653e <_dtoa_r+0x8ca>
 8006526:	4b5d      	ldr	r3, [pc, #372]	; (800669c <_dtoa_r+0xa28>)
 8006528:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800652a:	4213      	tst	r3, r2
 800652c:	d007      	beq.n	800653e <_dtoa_r+0x8ca>
 800652e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006530:	3301      	adds	r3, #1
 8006532:	930a      	str	r3, [sp, #40]	; 0x28
 8006534:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006536:	3301      	adds	r3, #1
 8006538:	930d      	str	r3, [sp, #52]	; 0x34
 800653a:	2301      	movs	r3, #1
 800653c:	930e      	str	r3, [sp, #56]	; 0x38
 800653e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006540:	2001      	movs	r0, #1
 8006542:	2b00      	cmp	r3, #0
 8006544:	d1bb      	bne.n	80064be <_dtoa_r+0x84a>
 8006546:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006548:	221f      	movs	r2, #31
 800654a:	1818      	adds	r0, r3, r0
 800654c:	0003      	movs	r3, r0
 800654e:	4013      	ands	r3, r2
 8006550:	4210      	tst	r0, r2
 8006552:	d046      	beq.n	80065e2 <_dtoa_r+0x96e>
 8006554:	3201      	adds	r2, #1
 8006556:	1ad2      	subs	r2, r2, r3
 8006558:	2a04      	cmp	r2, #4
 800655a:	dd3f      	ble.n	80065dc <_dtoa_r+0x968>
 800655c:	221c      	movs	r2, #28
 800655e:	1ad3      	subs	r3, r2, r3
 8006560:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006562:	18e4      	adds	r4, r4, r3
 8006564:	18d2      	adds	r2, r2, r3
 8006566:	920a      	str	r2, [sp, #40]	; 0x28
 8006568:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800656a:	18d3      	adds	r3, r2, r3
 800656c:	930d      	str	r3, [sp, #52]	; 0x34
 800656e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006570:	2b00      	cmp	r3, #0
 8006572:	dd05      	ble.n	8006580 <_dtoa_r+0x90c>
 8006574:	001a      	movs	r2, r3
 8006576:	0038      	movs	r0, r7
 8006578:	9905      	ldr	r1, [sp, #20]
 800657a:	f000 fbcd 	bl	8006d18 <__lshift>
 800657e:	9005      	str	r0, [sp, #20]
 8006580:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006582:	2b00      	cmp	r3, #0
 8006584:	dd05      	ble.n	8006592 <_dtoa_r+0x91e>
 8006586:	0031      	movs	r1, r6
 8006588:	001a      	movs	r2, r3
 800658a:	0038      	movs	r0, r7
 800658c:	f000 fbc4 	bl	8006d18 <__lshift>
 8006590:	0006      	movs	r6, r0
 8006592:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006594:	2b00      	cmp	r3, #0
 8006596:	d026      	beq.n	80065e6 <_dtoa_r+0x972>
 8006598:	0031      	movs	r1, r6
 800659a:	9805      	ldr	r0, [sp, #20]
 800659c:	f000 fc2a 	bl	8006df4 <__mcmp>
 80065a0:	2800      	cmp	r0, #0
 80065a2:	da20      	bge.n	80065e6 <_dtoa_r+0x972>
 80065a4:	9b02      	ldr	r3, [sp, #8]
 80065a6:	220a      	movs	r2, #10
 80065a8:	3b01      	subs	r3, #1
 80065aa:	9302      	str	r3, [sp, #8]
 80065ac:	0038      	movs	r0, r7
 80065ae:	2300      	movs	r3, #0
 80065b0:	9905      	ldr	r1, [sp, #20]
 80065b2:	f000 fa03 	bl	80069bc <__multadd>
 80065b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80065b8:	9005      	str	r0, [sp, #20]
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d100      	bne.n	80065c0 <_dtoa_r+0x94c>
 80065be:	e166      	b.n	800688e <_dtoa_r+0xc1a>
 80065c0:	2300      	movs	r3, #0
 80065c2:	0029      	movs	r1, r5
 80065c4:	220a      	movs	r2, #10
 80065c6:	0038      	movs	r0, r7
 80065c8:	f000 f9f8 	bl	80069bc <__multadd>
 80065cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80065ce:	0005      	movs	r5, r0
 80065d0:	2b00      	cmp	r3, #0
 80065d2:	dc47      	bgt.n	8006664 <_dtoa_r+0x9f0>
 80065d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80065d6:	2b02      	cmp	r3, #2
 80065d8:	dc0d      	bgt.n	80065f6 <_dtoa_r+0x982>
 80065da:	e043      	b.n	8006664 <_dtoa_r+0x9f0>
 80065dc:	2a04      	cmp	r2, #4
 80065de:	d0c6      	beq.n	800656e <_dtoa_r+0x8fa>
 80065e0:	0013      	movs	r3, r2
 80065e2:	331c      	adds	r3, #28
 80065e4:	e7bc      	b.n	8006560 <_dtoa_r+0x8ec>
 80065e6:	9b07      	ldr	r3, [sp, #28]
 80065e8:	2b00      	cmp	r3, #0
 80065ea:	dc35      	bgt.n	8006658 <_dtoa_r+0x9e4>
 80065ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80065ee:	2b02      	cmp	r3, #2
 80065f0:	dd32      	ble.n	8006658 <_dtoa_r+0x9e4>
 80065f2:	9b07      	ldr	r3, [sp, #28]
 80065f4:	930c      	str	r3, [sp, #48]	; 0x30
 80065f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80065f8:	2b00      	cmp	r3, #0
 80065fa:	d10c      	bne.n	8006616 <_dtoa_r+0x9a2>
 80065fc:	0031      	movs	r1, r6
 80065fe:	2205      	movs	r2, #5
 8006600:	0038      	movs	r0, r7
 8006602:	f000 f9db 	bl	80069bc <__multadd>
 8006606:	0006      	movs	r6, r0
 8006608:	0001      	movs	r1, r0
 800660a:	9805      	ldr	r0, [sp, #20]
 800660c:	f000 fbf2 	bl	8006df4 <__mcmp>
 8006610:	2800      	cmp	r0, #0
 8006612:	dd00      	ble.n	8006616 <_dtoa_r+0x9a2>
 8006614:	e5a5      	b.n	8006162 <_dtoa_r+0x4ee>
 8006616:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006618:	43db      	mvns	r3, r3
 800661a:	9302      	str	r3, [sp, #8]
 800661c:	9b06      	ldr	r3, [sp, #24]
 800661e:	9308      	str	r3, [sp, #32]
 8006620:	2400      	movs	r4, #0
 8006622:	0031      	movs	r1, r6
 8006624:	0038      	movs	r0, r7
 8006626:	f000 f9a5 	bl	8006974 <_Bfree>
 800662a:	2d00      	cmp	r5, #0
 800662c:	d100      	bne.n	8006630 <_dtoa_r+0x9bc>
 800662e:	e6b7      	b.n	80063a0 <_dtoa_r+0x72c>
 8006630:	2c00      	cmp	r4, #0
 8006632:	d005      	beq.n	8006640 <_dtoa_r+0x9cc>
 8006634:	42ac      	cmp	r4, r5
 8006636:	d003      	beq.n	8006640 <_dtoa_r+0x9cc>
 8006638:	0021      	movs	r1, r4
 800663a:	0038      	movs	r0, r7
 800663c:	f000 f99a 	bl	8006974 <_Bfree>
 8006640:	0029      	movs	r1, r5
 8006642:	0038      	movs	r0, r7
 8006644:	f000 f996 	bl	8006974 <_Bfree>
 8006648:	e6aa      	b.n	80063a0 <_dtoa_r+0x72c>
 800664a:	2600      	movs	r6, #0
 800664c:	0035      	movs	r5, r6
 800664e:	e7e2      	b.n	8006616 <_dtoa_r+0x9a2>
 8006650:	9602      	str	r6, [sp, #8]
 8006652:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8006654:	0035      	movs	r5, r6
 8006656:	e584      	b.n	8006162 <_dtoa_r+0x4ee>
 8006658:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800665a:	2b00      	cmp	r3, #0
 800665c:	d100      	bne.n	8006660 <_dtoa_r+0x9ec>
 800665e:	e0ce      	b.n	80067fe <_dtoa_r+0xb8a>
 8006660:	9b07      	ldr	r3, [sp, #28]
 8006662:	930c      	str	r3, [sp, #48]	; 0x30
 8006664:	2c00      	cmp	r4, #0
 8006666:	dd05      	ble.n	8006674 <_dtoa_r+0xa00>
 8006668:	0029      	movs	r1, r5
 800666a:	0022      	movs	r2, r4
 800666c:	0038      	movs	r0, r7
 800666e:	f000 fb53 	bl	8006d18 <__lshift>
 8006672:	0005      	movs	r5, r0
 8006674:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006676:	0028      	movs	r0, r5
 8006678:	2b00      	cmp	r3, #0
 800667a:	d022      	beq.n	80066c2 <_dtoa_r+0xa4e>
 800667c:	0038      	movs	r0, r7
 800667e:	6869      	ldr	r1, [r5, #4]
 8006680:	f000 f934 	bl	80068ec <_Balloc>
 8006684:	1e04      	subs	r4, r0, #0
 8006686:	d10f      	bne.n	80066a8 <_dtoa_r+0xa34>
 8006688:	0002      	movs	r2, r0
 800668a:	4b05      	ldr	r3, [pc, #20]	; (80066a0 <_dtoa_r+0xa2c>)
 800668c:	4905      	ldr	r1, [pc, #20]	; (80066a4 <_dtoa_r+0xa30>)
 800668e:	f7ff fb06 	bl	8005c9e <_dtoa_r+0x2a>
 8006692:	46c0      	nop			; (mov r8, r8)
 8006694:	40240000 	.word	0x40240000
 8006698:	00000433 	.word	0x00000433
 800669c:	7ff00000 	.word	0x7ff00000
 80066a0:	080084e7 	.word	0x080084e7
 80066a4:	000002ea 	.word	0x000002ea
 80066a8:	0029      	movs	r1, r5
 80066aa:	692b      	ldr	r3, [r5, #16]
 80066ac:	310c      	adds	r1, #12
 80066ae:	1c9a      	adds	r2, r3, #2
 80066b0:	0092      	lsls	r2, r2, #2
 80066b2:	300c      	adds	r0, #12
 80066b4:	f000 f911 	bl	80068da <memcpy>
 80066b8:	2201      	movs	r2, #1
 80066ba:	0021      	movs	r1, r4
 80066bc:	0038      	movs	r0, r7
 80066be:	f000 fb2b 	bl	8006d18 <__lshift>
 80066c2:	9b06      	ldr	r3, [sp, #24]
 80066c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80066c6:	930a      	str	r3, [sp, #40]	; 0x28
 80066c8:	3b01      	subs	r3, #1
 80066ca:	189b      	adds	r3, r3, r2
 80066cc:	2201      	movs	r2, #1
 80066ce:	002c      	movs	r4, r5
 80066d0:	0005      	movs	r5, r0
 80066d2:	9314      	str	r3, [sp, #80]	; 0x50
 80066d4:	9b08      	ldr	r3, [sp, #32]
 80066d6:	4013      	ands	r3, r2
 80066d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80066da:	0031      	movs	r1, r6
 80066dc:	9805      	ldr	r0, [sp, #20]
 80066de:	f7ff fa3d 	bl	8005b5c <quorem>
 80066e2:	0003      	movs	r3, r0
 80066e4:	0021      	movs	r1, r4
 80066e6:	3330      	adds	r3, #48	; 0x30
 80066e8:	900d      	str	r0, [sp, #52]	; 0x34
 80066ea:	9805      	ldr	r0, [sp, #20]
 80066ec:	9307      	str	r3, [sp, #28]
 80066ee:	f000 fb81 	bl	8006df4 <__mcmp>
 80066f2:	002a      	movs	r2, r5
 80066f4:	900e      	str	r0, [sp, #56]	; 0x38
 80066f6:	0031      	movs	r1, r6
 80066f8:	0038      	movs	r0, r7
 80066fa:	f000 fb97 	bl	8006e2c <__mdiff>
 80066fe:	68c3      	ldr	r3, [r0, #12]
 8006700:	9008      	str	r0, [sp, #32]
 8006702:	9310      	str	r3, [sp, #64]	; 0x40
 8006704:	2301      	movs	r3, #1
 8006706:	930c      	str	r3, [sp, #48]	; 0x30
 8006708:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800670a:	2b00      	cmp	r3, #0
 800670c:	d104      	bne.n	8006718 <_dtoa_r+0xaa4>
 800670e:	0001      	movs	r1, r0
 8006710:	9805      	ldr	r0, [sp, #20]
 8006712:	f000 fb6f 	bl	8006df4 <__mcmp>
 8006716:	900c      	str	r0, [sp, #48]	; 0x30
 8006718:	0038      	movs	r0, r7
 800671a:	9908      	ldr	r1, [sp, #32]
 800671c:	f000 f92a 	bl	8006974 <_Bfree>
 8006720:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006722:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006724:	3301      	adds	r3, #1
 8006726:	9308      	str	r3, [sp, #32]
 8006728:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800672a:	4313      	orrs	r3, r2
 800672c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800672e:	4313      	orrs	r3, r2
 8006730:	d10c      	bne.n	800674c <_dtoa_r+0xad8>
 8006732:	9b07      	ldr	r3, [sp, #28]
 8006734:	2b39      	cmp	r3, #57	; 0x39
 8006736:	d026      	beq.n	8006786 <_dtoa_r+0xb12>
 8006738:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800673a:	2b00      	cmp	r3, #0
 800673c:	dd02      	ble.n	8006744 <_dtoa_r+0xad0>
 800673e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006740:	3331      	adds	r3, #49	; 0x31
 8006742:	9307      	str	r3, [sp, #28]
 8006744:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006746:	9a07      	ldr	r2, [sp, #28]
 8006748:	701a      	strb	r2, [r3, #0]
 800674a:	e76a      	b.n	8006622 <_dtoa_r+0x9ae>
 800674c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800674e:	2b00      	cmp	r3, #0
 8006750:	db04      	blt.n	800675c <_dtoa_r+0xae8>
 8006752:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8006754:	4313      	orrs	r3, r2
 8006756:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006758:	4313      	orrs	r3, r2
 800675a:	d11f      	bne.n	800679c <_dtoa_r+0xb28>
 800675c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800675e:	2b00      	cmp	r3, #0
 8006760:	ddf0      	ble.n	8006744 <_dtoa_r+0xad0>
 8006762:	9905      	ldr	r1, [sp, #20]
 8006764:	2201      	movs	r2, #1
 8006766:	0038      	movs	r0, r7
 8006768:	f000 fad6 	bl	8006d18 <__lshift>
 800676c:	0031      	movs	r1, r6
 800676e:	9005      	str	r0, [sp, #20]
 8006770:	f000 fb40 	bl	8006df4 <__mcmp>
 8006774:	2800      	cmp	r0, #0
 8006776:	dc03      	bgt.n	8006780 <_dtoa_r+0xb0c>
 8006778:	d1e4      	bne.n	8006744 <_dtoa_r+0xad0>
 800677a:	9b07      	ldr	r3, [sp, #28]
 800677c:	07db      	lsls	r3, r3, #31
 800677e:	d5e1      	bpl.n	8006744 <_dtoa_r+0xad0>
 8006780:	9b07      	ldr	r3, [sp, #28]
 8006782:	2b39      	cmp	r3, #57	; 0x39
 8006784:	d1db      	bne.n	800673e <_dtoa_r+0xaca>
 8006786:	2339      	movs	r3, #57	; 0x39
 8006788:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800678a:	7013      	strb	r3, [r2, #0]
 800678c:	9b08      	ldr	r3, [sp, #32]
 800678e:	9308      	str	r3, [sp, #32]
 8006790:	3b01      	subs	r3, #1
 8006792:	781a      	ldrb	r2, [r3, #0]
 8006794:	2a39      	cmp	r2, #57	; 0x39
 8006796:	d068      	beq.n	800686a <_dtoa_r+0xbf6>
 8006798:	3201      	adds	r2, #1
 800679a:	e7d5      	b.n	8006748 <_dtoa_r+0xad4>
 800679c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800679e:	2b00      	cmp	r3, #0
 80067a0:	dd07      	ble.n	80067b2 <_dtoa_r+0xb3e>
 80067a2:	9b07      	ldr	r3, [sp, #28]
 80067a4:	2b39      	cmp	r3, #57	; 0x39
 80067a6:	d0ee      	beq.n	8006786 <_dtoa_r+0xb12>
 80067a8:	9b07      	ldr	r3, [sp, #28]
 80067aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80067ac:	3301      	adds	r3, #1
 80067ae:	7013      	strb	r3, [r2, #0]
 80067b0:	e737      	b.n	8006622 <_dtoa_r+0x9ae>
 80067b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80067b4:	9a07      	ldr	r2, [sp, #28]
 80067b6:	701a      	strb	r2, [r3, #0]
 80067b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80067ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80067bc:	4293      	cmp	r3, r2
 80067be:	d03e      	beq.n	800683e <_dtoa_r+0xbca>
 80067c0:	2300      	movs	r3, #0
 80067c2:	220a      	movs	r2, #10
 80067c4:	9905      	ldr	r1, [sp, #20]
 80067c6:	0038      	movs	r0, r7
 80067c8:	f000 f8f8 	bl	80069bc <__multadd>
 80067cc:	2300      	movs	r3, #0
 80067ce:	9005      	str	r0, [sp, #20]
 80067d0:	220a      	movs	r2, #10
 80067d2:	0021      	movs	r1, r4
 80067d4:	0038      	movs	r0, r7
 80067d6:	42ac      	cmp	r4, r5
 80067d8:	d106      	bne.n	80067e8 <_dtoa_r+0xb74>
 80067da:	f000 f8ef 	bl	80069bc <__multadd>
 80067de:	0004      	movs	r4, r0
 80067e0:	0005      	movs	r5, r0
 80067e2:	9b08      	ldr	r3, [sp, #32]
 80067e4:	930a      	str	r3, [sp, #40]	; 0x28
 80067e6:	e778      	b.n	80066da <_dtoa_r+0xa66>
 80067e8:	f000 f8e8 	bl	80069bc <__multadd>
 80067ec:	0029      	movs	r1, r5
 80067ee:	0004      	movs	r4, r0
 80067f0:	2300      	movs	r3, #0
 80067f2:	220a      	movs	r2, #10
 80067f4:	0038      	movs	r0, r7
 80067f6:	f000 f8e1 	bl	80069bc <__multadd>
 80067fa:	0005      	movs	r5, r0
 80067fc:	e7f1      	b.n	80067e2 <_dtoa_r+0xb6e>
 80067fe:	9b07      	ldr	r3, [sp, #28]
 8006800:	930c      	str	r3, [sp, #48]	; 0x30
 8006802:	2400      	movs	r4, #0
 8006804:	0031      	movs	r1, r6
 8006806:	9805      	ldr	r0, [sp, #20]
 8006808:	f7ff f9a8 	bl	8005b5c <quorem>
 800680c:	9b06      	ldr	r3, [sp, #24]
 800680e:	3030      	adds	r0, #48	; 0x30
 8006810:	5518      	strb	r0, [r3, r4]
 8006812:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006814:	3401      	adds	r4, #1
 8006816:	9007      	str	r0, [sp, #28]
 8006818:	42a3      	cmp	r3, r4
 800681a:	dd07      	ble.n	800682c <_dtoa_r+0xbb8>
 800681c:	2300      	movs	r3, #0
 800681e:	220a      	movs	r2, #10
 8006820:	0038      	movs	r0, r7
 8006822:	9905      	ldr	r1, [sp, #20]
 8006824:	f000 f8ca 	bl	80069bc <__multadd>
 8006828:	9005      	str	r0, [sp, #20]
 800682a:	e7eb      	b.n	8006804 <_dtoa_r+0xb90>
 800682c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800682e:	2001      	movs	r0, #1
 8006830:	2b00      	cmp	r3, #0
 8006832:	dd00      	ble.n	8006836 <_dtoa_r+0xbc2>
 8006834:	0018      	movs	r0, r3
 8006836:	2400      	movs	r4, #0
 8006838:	9b06      	ldr	r3, [sp, #24]
 800683a:	181b      	adds	r3, r3, r0
 800683c:	9308      	str	r3, [sp, #32]
 800683e:	9905      	ldr	r1, [sp, #20]
 8006840:	2201      	movs	r2, #1
 8006842:	0038      	movs	r0, r7
 8006844:	f000 fa68 	bl	8006d18 <__lshift>
 8006848:	0031      	movs	r1, r6
 800684a:	9005      	str	r0, [sp, #20]
 800684c:	f000 fad2 	bl	8006df4 <__mcmp>
 8006850:	2800      	cmp	r0, #0
 8006852:	dc9b      	bgt.n	800678c <_dtoa_r+0xb18>
 8006854:	d102      	bne.n	800685c <_dtoa_r+0xbe8>
 8006856:	9b07      	ldr	r3, [sp, #28]
 8006858:	07db      	lsls	r3, r3, #31
 800685a:	d497      	bmi.n	800678c <_dtoa_r+0xb18>
 800685c:	9b08      	ldr	r3, [sp, #32]
 800685e:	9308      	str	r3, [sp, #32]
 8006860:	3b01      	subs	r3, #1
 8006862:	781a      	ldrb	r2, [r3, #0]
 8006864:	2a30      	cmp	r2, #48	; 0x30
 8006866:	d0fa      	beq.n	800685e <_dtoa_r+0xbea>
 8006868:	e6db      	b.n	8006622 <_dtoa_r+0x9ae>
 800686a:	9a06      	ldr	r2, [sp, #24]
 800686c:	429a      	cmp	r2, r3
 800686e:	d18e      	bne.n	800678e <_dtoa_r+0xb1a>
 8006870:	9b02      	ldr	r3, [sp, #8]
 8006872:	3301      	adds	r3, #1
 8006874:	9302      	str	r3, [sp, #8]
 8006876:	2331      	movs	r3, #49	; 0x31
 8006878:	e799      	b.n	80067ae <_dtoa_r+0xb3a>
 800687a:	4b09      	ldr	r3, [pc, #36]	; (80068a0 <_dtoa_r+0xc2c>)
 800687c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800687e:	9306      	str	r3, [sp, #24]
 8006880:	4b08      	ldr	r3, [pc, #32]	; (80068a4 <_dtoa_r+0xc30>)
 8006882:	2a00      	cmp	r2, #0
 8006884:	d001      	beq.n	800688a <_dtoa_r+0xc16>
 8006886:	f7ff fa3f 	bl	8005d08 <_dtoa_r+0x94>
 800688a:	f7ff fa3f 	bl	8005d0c <_dtoa_r+0x98>
 800688e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006890:	2b00      	cmp	r3, #0
 8006892:	dcb6      	bgt.n	8006802 <_dtoa_r+0xb8e>
 8006894:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006896:	2b02      	cmp	r3, #2
 8006898:	dd00      	ble.n	800689c <_dtoa_r+0xc28>
 800689a:	e6ac      	b.n	80065f6 <_dtoa_r+0x982>
 800689c:	e7b1      	b.n	8006802 <_dtoa_r+0xb8e>
 800689e:	46c0      	nop			; (mov r8, r8)
 80068a0:	08008468 	.word	0x08008468
 80068a4:	08008470 	.word	0x08008470

080068a8 <_localeconv_r>:
 80068a8:	4800      	ldr	r0, [pc, #0]	; (80068ac <_localeconv_r+0x4>)
 80068aa:	4770      	bx	lr
 80068ac:	200001a0 	.word	0x200001a0

080068b0 <malloc>:
 80068b0:	b510      	push	{r4, lr}
 80068b2:	4b03      	ldr	r3, [pc, #12]	; (80068c0 <malloc+0x10>)
 80068b4:	0001      	movs	r1, r0
 80068b6:	6818      	ldr	r0, [r3, #0]
 80068b8:	f000 fc4c 	bl	8007154 <_malloc_r>
 80068bc:	bd10      	pop	{r4, pc}
 80068be:	46c0      	nop			; (mov r8, r8)
 80068c0:	2000004c 	.word	0x2000004c

080068c4 <memchr>:
 80068c4:	b2c9      	uxtb	r1, r1
 80068c6:	1882      	adds	r2, r0, r2
 80068c8:	4290      	cmp	r0, r2
 80068ca:	d101      	bne.n	80068d0 <memchr+0xc>
 80068cc:	2000      	movs	r0, #0
 80068ce:	4770      	bx	lr
 80068d0:	7803      	ldrb	r3, [r0, #0]
 80068d2:	428b      	cmp	r3, r1
 80068d4:	d0fb      	beq.n	80068ce <memchr+0xa>
 80068d6:	3001      	adds	r0, #1
 80068d8:	e7f6      	b.n	80068c8 <memchr+0x4>

080068da <memcpy>:
 80068da:	2300      	movs	r3, #0
 80068dc:	b510      	push	{r4, lr}
 80068de:	429a      	cmp	r2, r3
 80068e0:	d100      	bne.n	80068e4 <memcpy+0xa>
 80068e2:	bd10      	pop	{r4, pc}
 80068e4:	5ccc      	ldrb	r4, [r1, r3]
 80068e6:	54c4      	strb	r4, [r0, r3]
 80068e8:	3301      	adds	r3, #1
 80068ea:	e7f8      	b.n	80068de <memcpy+0x4>

080068ec <_Balloc>:
 80068ec:	b570      	push	{r4, r5, r6, lr}
 80068ee:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80068f0:	0006      	movs	r6, r0
 80068f2:	000c      	movs	r4, r1
 80068f4:	2d00      	cmp	r5, #0
 80068f6:	d10e      	bne.n	8006916 <_Balloc+0x2a>
 80068f8:	2010      	movs	r0, #16
 80068fa:	f7ff ffd9 	bl	80068b0 <malloc>
 80068fe:	1e02      	subs	r2, r0, #0
 8006900:	6270      	str	r0, [r6, #36]	; 0x24
 8006902:	d104      	bne.n	800690e <_Balloc+0x22>
 8006904:	2166      	movs	r1, #102	; 0x66
 8006906:	4b19      	ldr	r3, [pc, #100]	; (800696c <_Balloc+0x80>)
 8006908:	4819      	ldr	r0, [pc, #100]	; (8006970 <_Balloc+0x84>)
 800690a:	f000 fe0d 	bl	8007528 <__assert_func>
 800690e:	6045      	str	r5, [r0, #4]
 8006910:	6085      	str	r5, [r0, #8]
 8006912:	6005      	str	r5, [r0, #0]
 8006914:	60c5      	str	r5, [r0, #12]
 8006916:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8006918:	68eb      	ldr	r3, [r5, #12]
 800691a:	2b00      	cmp	r3, #0
 800691c:	d013      	beq.n	8006946 <_Balloc+0x5a>
 800691e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8006920:	00a2      	lsls	r2, r4, #2
 8006922:	68db      	ldr	r3, [r3, #12]
 8006924:	189b      	adds	r3, r3, r2
 8006926:	6818      	ldr	r0, [r3, #0]
 8006928:	2800      	cmp	r0, #0
 800692a:	d118      	bne.n	800695e <_Balloc+0x72>
 800692c:	2101      	movs	r1, #1
 800692e:	000d      	movs	r5, r1
 8006930:	40a5      	lsls	r5, r4
 8006932:	1d6a      	adds	r2, r5, #5
 8006934:	0030      	movs	r0, r6
 8006936:	0092      	lsls	r2, r2, #2
 8006938:	f000 fb74 	bl	8007024 <_calloc_r>
 800693c:	2800      	cmp	r0, #0
 800693e:	d00c      	beq.n	800695a <_Balloc+0x6e>
 8006940:	6044      	str	r4, [r0, #4]
 8006942:	6085      	str	r5, [r0, #8]
 8006944:	e00d      	b.n	8006962 <_Balloc+0x76>
 8006946:	2221      	movs	r2, #33	; 0x21
 8006948:	2104      	movs	r1, #4
 800694a:	0030      	movs	r0, r6
 800694c:	f000 fb6a 	bl	8007024 <_calloc_r>
 8006950:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8006952:	60e8      	str	r0, [r5, #12]
 8006954:	68db      	ldr	r3, [r3, #12]
 8006956:	2b00      	cmp	r3, #0
 8006958:	d1e1      	bne.n	800691e <_Balloc+0x32>
 800695a:	2000      	movs	r0, #0
 800695c:	bd70      	pop	{r4, r5, r6, pc}
 800695e:	6802      	ldr	r2, [r0, #0]
 8006960:	601a      	str	r2, [r3, #0]
 8006962:	2300      	movs	r3, #0
 8006964:	6103      	str	r3, [r0, #16]
 8006966:	60c3      	str	r3, [r0, #12]
 8006968:	e7f8      	b.n	800695c <_Balloc+0x70>
 800696a:	46c0      	nop			; (mov r8, r8)
 800696c:	08008475 	.word	0x08008475
 8006970:	080084f8 	.word	0x080084f8

08006974 <_Bfree>:
 8006974:	b570      	push	{r4, r5, r6, lr}
 8006976:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006978:	0005      	movs	r5, r0
 800697a:	000c      	movs	r4, r1
 800697c:	2e00      	cmp	r6, #0
 800697e:	d10e      	bne.n	800699e <_Bfree+0x2a>
 8006980:	2010      	movs	r0, #16
 8006982:	f7ff ff95 	bl	80068b0 <malloc>
 8006986:	1e02      	subs	r2, r0, #0
 8006988:	6268      	str	r0, [r5, #36]	; 0x24
 800698a:	d104      	bne.n	8006996 <_Bfree+0x22>
 800698c:	218a      	movs	r1, #138	; 0x8a
 800698e:	4b09      	ldr	r3, [pc, #36]	; (80069b4 <_Bfree+0x40>)
 8006990:	4809      	ldr	r0, [pc, #36]	; (80069b8 <_Bfree+0x44>)
 8006992:	f000 fdc9 	bl	8007528 <__assert_func>
 8006996:	6046      	str	r6, [r0, #4]
 8006998:	6086      	str	r6, [r0, #8]
 800699a:	6006      	str	r6, [r0, #0]
 800699c:	60c6      	str	r6, [r0, #12]
 800699e:	2c00      	cmp	r4, #0
 80069a0:	d007      	beq.n	80069b2 <_Bfree+0x3e>
 80069a2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80069a4:	6862      	ldr	r2, [r4, #4]
 80069a6:	68db      	ldr	r3, [r3, #12]
 80069a8:	0092      	lsls	r2, r2, #2
 80069aa:	189b      	adds	r3, r3, r2
 80069ac:	681a      	ldr	r2, [r3, #0]
 80069ae:	6022      	str	r2, [r4, #0]
 80069b0:	601c      	str	r4, [r3, #0]
 80069b2:	bd70      	pop	{r4, r5, r6, pc}
 80069b4:	08008475 	.word	0x08008475
 80069b8:	080084f8 	.word	0x080084f8

080069bc <__multadd>:
 80069bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80069be:	000e      	movs	r6, r1
 80069c0:	9001      	str	r0, [sp, #4]
 80069c2:	000c      	movs	r4, r1
 80069c4:	001d      	movs	r5, r3
 80069c6:	2000      	movs	r0, #0
 80069c8:	690f      	ldr	r7, [r1, #16]
 80069ca:	3614      	adds	r6, #20
 80069cc:	6833      	ldr	r3, [r6, #0]
 80069ce:	3001      	adds	r0, #1
 80069d0:	b299      	uxth	r1, r3
 80069d2:	4351      	muls	r1, r2
 80069d4:	0c1b      	lsrs	r3, r3, #16
 80069d6:	4353      	muls	r3, r2
 80069d8:	1949      	adds	r1, r1, r5
 80069da:	0c0d      	lsrs	r5, r1, #16
 80069dc:	195b      	adds	r3, r3, r5
 80069de:	0c1d      	lsrs	r5, r3, #16
 80069e0:	b289      	uxth	r1, r1
 80069e2:	041b      	lsls	r3, r3, #16
 80069e4:	185b      	adds	r3, r3, r1
 80069e6:	c608      	stmia	r6!, {r3}
 80069e8:	4287      	cmp	r7, r0
 80069ea:	dcef      	bgt.n	80069cc <__multadd+0x10>
 80069ec:	2d00      	cmp	r5, #0
 80069ee:	d022      	beq.n	8006a36 <__multadd+0x7a>
 80069f0:	68a3      	ldr	r3, [r4, #8]
 80069f2:	42bb      	cmp	r3, r7
 80069f4:	dc19      	bgt.n	8006a2a <__multadd+0x6e>
 80069f6:	6863      	ldr	r3, [r4, #4]
 80069f8:	9801      	ldr	r0, [sp, #4]
 80069fa:	1c59      	adds	r1, r3, #1
 80069fc:	f7ff ff76 	bl	80068ec <_Balloc>
 8006a00:	1e06      	subs	r6, r0, #0
 8006a02:	d105      	bne.n	8006a10 <__multadd+0x54>
 8006a04:	0002      	movs	r2, r0
 8006a06:	21b5      	movs	r1, #181	; 0xb5
 8006a08:	4b0c      	ldr	r3, [pc, #48]	; (8006a3c <__multadd+0x80>)
 8006a0a:	480d      	ldr	r0, [pc, #52]	; (8006a40 <__multadd+0x84>)
 8006a0c:	f000 fd8c 	bl	8007528 <__assert_func>
 8006a10:	0021      	movs	r1, r4
 8006a12:	6923      	ldr	r3, [r4, #16]
 8006a14:	310c      	adds	r1, #12
 8006a16:	1c9a      	adds	r2, r3, #2
 8006a18:	0092      	lsls	r2, r2, #2
 8006a1a:	300c      	adds	r0, #12
 8006a1c:	f7ff ff5d 	bl	80068da <memcpy>
 8006a20:	0021      	movs	r1, r4
 8006a22:	9801      	ldr	r0, [sp, #4]
 8006a24:	f7ff ffa6 	bl	8006974 <_Bfree>
 8006a28:	0034      	movs	r4, r6
 8006a2a:	1d3b      	adds	r3, r7, #4
 8006a2c:	009b      	lsls	r3, r3, #2
 8006a2e:	18e3      	adds	r3, r4, r3
 8006a30:	605d      	str	r5, [r3, #4]
 8006a32:	1c7b      	adds	r3, r7, #1
 8006a34:	6123      	str	r3, [r4, #16]
 8006a36:	0020      	movs	r0, r4
 8006a38:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006a3a:	46c0      	nop			; (mov r8, r8)
 8006a3c:	080084e7 	.word	0x080084e7
 8006a40:	080084f8 	.word	0x080084f8

08006a44 <__hi0bits>:
 8006a44:	0003      	movs	r3, r0
 8006a46:	0c02      	lsrs	r2, r0, #16
 8006a48:	2000      	movs	r0, #0
 8006a4a:	4282      	cmp	r2, r0
 8006a4c:	d101      	bne.n	8006a52 <__hi0bits+0xe>
 8006a4e:	041b      	lsls	r3, r3, #16
 8006a50:	3010      	adds	r0, #16
 8006a52:	0e1a      	lsrs	r2, r3, #24
 8006a54:	d101      	bne.n	8006a5a <__hi0bits+0x16>
 8006a56:	3008      	adds	r0, #8
 8006a58:	021b      	lsls	r3, r3, #8
 8006a5a:	0f1a      	lsrs	r2, r3, #28
 8006a5c:	d101      	bne.n	8006a62 <__hi0bits+0x1e>
 8006a5e:	3004      	adds	r0, #4
 8006a60:	011b      	lsls	r3, r3, #4
 8006a62:	0f9a      	lsrs	r2, r3, #30
 8006a64:	d101      	bne.n	8006a6a <__hi0bits+0x26>
 8006a66:	3002      	adds	r0, #2
 8006a68:	009b      	lsls	r3, r3, #2
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	db03      	blt.n	8006a76 <__hi0bits+0x32>
 8006a6e:	3001      	adds	r0, #1
 8006a70:	005b      	lsls	r3, r3, #1
 8006a72:	d400      	bmi.n	8006a76 <__hi0bits+0x32>
 8006a74:	2020      	movs	r0, #32
 8006a76:	4770      	bx	lr

08006a78 <__lo0bits>:
 8006a78:	6803      	ldr	r3, [r0, #0]
 8006a7a:	0002      	movs	r2, r0
 8006a7c:	2107      	movs	r1, #7
 8006a7e:	0018      	movs	r0, r3
 8006a80:	4008      	ands	r0, r1
 8006a82:	420b      	tst	r3, r1
 8006a84:	d00d      	beq.n	8006aa2 <__lo0bits+0x2a>
 8006a86:	3906      	subs	r1, #6
 8006a88:	2000      	movs	r0, #0
 8006a8a:	420b      	tst	r3, r1
 8006a8c:	d105      	bne.n	8006a9a <__lo0bits+0x22>
 8006a8e:	3002      	adds	r0, #2
 8006a90:	4203      	tst	r3, r0
 8006a92:	d003      	beq.n	8006a9c <__lo0bits+0x24>
 8006a94:	40cb      	lsrs	r3, r1
 8006a96:	0008      	movs	r0, r1
 8006a98:	6013      	str	r3, [r2, #0]
 8006a9a:	4770      	bx	lr
 8006a9c:	089b      	lsrs	r3, r3, #2
 8006a9e:	6013      	str	r3, [r2, #0]
 8006aa0:	e7fb      	b.n	8006a9a <__lo0bits+0x22>
 8006aa2:	b299      	uxth	r1, r3
 8006aa4:	2900      	cmp	r1, #0
 8006aa6:	d101      	bne.n	8006aac <__lo0bits+0x34>
 8006aa8:	2010      	movs	r0, #16
 8006aaa:	0c1b      	lsrs	r3, r3, #16
 8006aac:	b2d9      	uxtb	r1, r3
 8006aae:	2900      	cmp	r1, #0
 8006ab0:	d101      	bne.n	8006ab6 <__lo0bits+0x3e>
 8006ab2:	3008      	adds	r0, #8
 8006ab4:	0a1b      	lsrs	r3, r3, #8
 8006ab6:	0719      	lsls	r1, r3, #28
 8006ab8:	d101      	bne.n	8006abe <__lo0bits+0x46>
 8006aba:	3004      	adds	r0, #4
 8006abc:	091b      	lsrs	r3, r3, #4
 8006abe:	0799      	lsls	r1, r3, #30
 8006ac0:	d101      	bne.n	8006ac6 <__lo0bits+0x4e>
 8006ac2:	3002      	adds	r0, #2
 8006ac4:	089b      	lsrs	r3, r3, #2
 8006ac6:	07d9      	lsls	r1, r3, #31
 8006ac8:	d4e9      	bmi.n	8006a9e <__lo0bits+0x26>
 8006aca:	3001      	adds	r0, #1
 8006acc:	085b      	lsrs	r3, r3, #1
 8006ace:	d1e6      	bne.n	8006a9e <__lo0bits+0x26>
 8006ad0:	2020      	movs	r0, #32
 8006ad2:	e7e2      	b.n	8006a9a <__lo0bits+0x22>

08006ad4 <__i2b>:
 8006ad4:	b510      	push	{r4, lr}
 8006ad6:	000c      	movs	r4, r1
 8006ad8:	2101      	movs	r1, #1
 8006ada:	f7ff ff07 	bl	80068ec <_Balloc>
 8006ade:	2800      	cmp	r0, #0
 8006ae0:	d106      	bne.n	8006af0 <__i2b+0x1c>
 8006ae2:	21a0      	movs	r1, #160	; 0xa0
 8006ae4:	0002      	movs	r2, r0
 8006ae6:	4b04      	ldr	r3, [pc, #16]	; (8006af8 <__i2b+0x24>)
 8006ae8:	4804      	ldr	r0, [pc, #16]	; (8006afc <__i2b+0x28>)
 8006aea:	0049      	lsls	r1, r1, #1
 8006aec:	f000 fd1c 	bl	8007528 <__assert_func>
 8006af0:	2301      	movs	r3, #1
 8006af2:	6144      	str	r4, [r0, #20]
 8006af4:	6103      	str	r3, [r0, #16]
 8006af6:	bd10      	pop	{r4, pc}
 8006af8:	080084e7 	.word	0x080084e7
 8006afc:	080084f8 	.word	0x080084f8

08006b00 <__multiply>:
 8006b00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b02:	690b      	ldr	r3, [r1, #16]
 8006b04:	0014      	movs	r4, r2
 8006b06:	6912      	ldr	r2, [r2, #16]
 8006b08:	000d      	movs	r5, r1
 8006b0a:	b089      	sub	sp, #36	; 0x24
 8006b0c:	4293      	cmp	r3, r2
 8006b0e:	da01      	bge.n	8006b14 <__multiply+0x14>
 8006b10:	0025      	movs	r5, r4
 8006b12:	000c      	movs	r4, r1
 8006b14:	692f      	ldr	r7, [r5, #16]
 8006b16:	6926      	ldr	r6, [r4, #16]
 8006b18:	6869      	ldr	r1, [r5, #4]
 8006b1a:	19bb      	adds	r3, r7, r6
 8006b1c:	9302      	str	r3, [sp, #8]
 8006b1e:	68ab      	ldr	r3, [r5, #8]
 8006b20:	19ba      	adds	r2, r7, r6
 8006b22:	4293      	cmp	r3, r2
 8006b24:	da00      	bge.n	8006b28 <__multiply+0x28>
 8006b26:	3101      	adds	r1, #1
 8006b28:	f7ff fee0 	bl	80068ec <_Balloc>
 8006b2c:	9001      	str	r0, [sp, #4]
 8006b2e:	2800      	cmp	r0, #0
 8006b30:	d106      	bne.n	8006b40 <__multiply+0x40>
 8006b32:	215e      	movs	r1, #94	; 0x5e
 8006b34:	0002      	movs	r2, r0
 8006b36:	4b48      	ldr	r3, [pc, #288]	; (8006c58 <__multiply+0x158>)
 8006b38:	4848      	ldr	r0, [pc, #288]	; (8006c5c <__multiply+0x15c>)
 8006b3a:	31ff      	adds	r1, #255	; 0xff
 8006b3c:	f000 fcf4 	bl	8007528 <__assert_func>
 8006b40:	9b01      	ldr	r3, [sp, #4]
 8006b42:	2200      	movs	r2, #0
 8006b44:	3314      	adds	r3, #20
 8006b46:	469c      	mov	ip, r3
 8006b48:	19bb      	adds	r3, r7, r6
 8006b4a:	009b      	lsls	r3, r3, #2
 8006b4c:	4463      	add	r3, ip
 8006b4e:	9303      	str	r3, [sp, #12]
 8006b50:	4663      	mov	r3, ip
 8006b52:	9903      	ldr	r1, [sp, #12]
 8006b54:	428b      	cmp	r3, r1
 8006b56:	d32c      	bcc.n	8006bb2 <__multiply+0xb2>
 8006b58:	002b      	movs	r3, r5
 8006b5a:	0022      	movs	r2, r4
 8006b5c:	3314      	adds	r3, #20
 8006b5e:	00bf      	lsls	r7, r7, #2
 8006b60:	3214      	adds	r2, #20
 8006b62:	9306      	str	r3, [sp, #24]
 8006b64:	00b6      	lsls	r6, r6, #2
 8006b66:	19db      	adds	r3, r3, r7
 8006b68:	9304      	str	r3, [sp, #16]
 8006b6a:	1993      	adds	r3, r2, r6
 8006b6c:	9307      	str	r3, [sp, #28]
 8006b6e:	2304      	movs	r3, #4
 8006b70:	9305      	str	r3, [sp, #20]
 8006b72:	002b      	movs	r3, r5
 8006b74:	9904      	ldr	r1, [sp, #16]
 8006b76:	3315      	adds	r3, #21
 8006b78:	9200      	str	r2, [sp, #0]
 8006b7a:	4299      	cmp	r1, r3
 8006b7c:	d305      	bcc.n	8006b8a <__multiply+0x8a>
 8006b7e:	1b4b      	subs	r3, r1, r5
 8006b80:	3b15      	subs	r3, #21
 8006b82:	089b      	lsrs	r3, r3, #2
 8006b84:	3301      	adds	r3, #1
 8006b86:	009b      	lsls	r3, r3, #2
 8006b88:	9305      	str	r3, [sp, #20]
 8006b8a:	9b07      	ldr	r3, [sp, #28]
 8006b8c:	9a00      	ldr	r2, [sp, #0]
 8006b8e:	429a      	cmp	r2, r3
 8006b90:	d311      	bcc.n	8006bb6 <__multiply+0xb6>
 8006b92:	9b02      	ldr	r3, [sp, #8]
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	dd06      	ble.n	8006ba6 <__multiply+0xa6>
 8006b98:	9b03      	ldr	r3, [sp, #12]
 8006b9a:	3b04      	subs	r3, #4
 8006b9c:	9303      	str	r3, [sp, #12]
 8006b9e:	681b      	ldr	r3, [r3, #0]
 8006ba0:	9300      	str	r3, [sp, #0]
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	d053      	beq.n	8006c4e <__multiply+0x14e>
 8006ba6:	9b01      	ldr	r3, [sp, #4]
 8006ba8:	9a02      	ldr	r2, [sp, #8]
 8006baa:	0018      	movs	r0, r3
 8006bac:	611a      	str	r2, [r3, #16]
 8006bae:	b009      	add	sp, #36	; 0x24
 8006bb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006bb2:	c304      	stmia	r3!, {r2}
 8006bb4:	e7cd      	b.n	8006b52 <__multiply+0x52>
 8006bb6:	9b00      	ldr	r3, [sp, #0]
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	b298      	uxth	r0, r3
 8006bbc:	2800      	cmp	r0, #0
 8006bbe:	d01b      	beq.n	8006bf8 <__multiply+0xf8>
 8006bc0:	4667      	mov	r7, ip
 8006bc2:	2400      	movs	r4, #0
 8006bc4:	9e06      	ldr	r6, [sp, #24]
 8006bc6:	ce02      	ldmia	r6!, {r1}
 8006bc8:	683a      	ldr	r2, [r7, #0]
 8006bca:	b28b      	uxth	r3, r1
 8006bcc:	4343      	muls	r3, r0
 8006bce:	b292      	uxth	r2, r2
 8006bd0:	189b      	adds	r3, r3, r2
 8006bd2:	191b      	adds	r3, r3, r4
 8006bd4:	0c0c      	lsrs	r4, r1, #16
 8006bd6:	4344      	muls	r4, r0
 8006bd8:	683a      	ldr	r2, [r7, #0]
 8006bda:	0c11      	lsrs	r1, r2, #16
 8006bdc:	1861      	adds	r1, r4, r1
 8006bde:	0c1c      	lsrs	r4, r3, #16
 8006be0:	1909      	adds	r1, r1, r4
 8006be2:	0c0c      	lsrs	r4, r1, #16
 8006be4:	b29b      	uxth	r3, r3
 8006be6:	0409      	lsls	r1, r1, #16
 8006be8:	430b      	orrs	r3, r1
 8006bea:	c708      	stmia	r7!, {r3}
 8006bec:	9b04      	ldr	r3, [sp, #16]
 8006bee:	42b3      	cmp	r3, r6
 8006bf0:	d8e9      	bhi.n	8006bc6 <__multiply+0xc6>
 8006bf2:	4663      	mov	r3, ip
 8006bf4:	9a05      	ldr	r2, [sp, #20]
 8006bf6:	509c      	str	r4, [r3, r2]
 8006bf8:	9b00      	ldr	r3, [sp, #0]
 8006bfa:	681b      	ldr	r3, [r3, #0]
 8006bfc:	0c1e      	lsrs	r6, r3, #16
 8006bfe:	d020      	beq.n	8006c42 <__multiply+0x142>
 8006c00:	4663      	mov	r3, ip
 8006c02:	002c      	movs	r4, r5
 8006c04:	4660      	mov	r0, ip
 8006c06:	2700      	movs	r7, #0
 8006c08:	681b      	ldr	r3, [r3, #0]
 8006c0a:	3414      	adds	r4, #20
 8006c0c:	6822      	ldr	r2, [r4, #0]
 8006c0e:	b29b      	uxth	r3, r3
 8006c10:	b291      	uxth	r1, r2
 8006c12:	4371      	muls	r1, r6
 8006c14:	6802      	ldr	r2, [r0, #0]
 8006c16:	0c12      	lsrs	r2, r2, #16
 8006c18:	1889      	adds	r1, r1, r2
 8006c1a:	19cf      	adds	r7, r1, r7
 8006c1c:	0439      	lsls	r1, r7, #16
 8006c1e:	430b      	orrs	r3, r1
 8006c20:	6003      	str	r3, [r0, #0]
 8006c22:	cc02      	ldmia	r4!, {r1}
 8006c24:	6843      	ldr	r3, [r0, #4]
 8006c26:	0c09      	lsrs	r1, r1, #16
 8006c28:	4371      	muls	r1, r6
 8006c2a:	b29b      	uxth	r3, r3
 8006c2c:	0c3f      	lsrs	r7, r7, #16
 8006c2e:	18cb      	adds	r3, r1, r3
 8006c30:	9a04      	ldr	r2, [sp, #16]
 8006c32:	19db      	adds	r3, r3, r7
 8006c34:	0c1f      	lsrs	r7, r3, #16
 8006c36:	3004      	adds	r0, #4
 8006c38:	42a2      	cmp	r2, r4
 8006c3a:	d8e7      	bhi.n	8006c0c <__multiply+0x10c>
 8006c3c:	4662      	mov	r2, ip
 8006c3e:	9905      	ldr	r1, [sp, #20]
 8006c40:	5053      	str	r3, [r2, r1]
 8006c42:	9b00      	ldr	r3, [sp, #0]
 8006c44:	3304      	adds	r3, #4
 8006c46:	9300      	str	r3, [sp, #0]
 8006c48:	2304      	movs	r3, #4
 8006c4a:	449c      	add	ip, r3
 8006c4c:	e79d      	b.n	8006b8a <__multiply+0x8a>
 8006c4e:	9b02      	ldr	r3, [sp, #8]
 8006c50:	3b01      	subs	r3, #1
 8006c52:	9302      	str	r3, [sp, #8]
 8006c54:	e79d      	b.n	8006b92 <__multiply+0x92>
 8006c56:	46c0      	nop			; (mov r8, r8)
 8006c58:	080084e7 	.word	0x080084e7
 8006c5c:	080084f8 	.word	0x080084f8

08006c60 <__pow5mult>:
 8006c60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c62:	2303      	movs	r3, #3
 8006c64:	0015      	movs	r5, r2
 8006c66:	0007      	movs	r7, r0
 8006c68:	000e      	movs	r6, r1
 8006c6a:	401a      	ands	r2, r3
 8006c6c:	421d      	tst	r5, r3
 8006c6e:	d008      	beq.n	8006c82 <__pow5mult+0x22>
 8006c70:	4925      	ldr	r1, [pc, #148]	; (8006d08 <__pow5mult+0xa8>)
 8006c72:	3a01      	subs	r2, #1
 8006c74:	0092      	lsls	r2, r2, #2
 8006c76:	5852      	ldr	r2, [r2, r1]
 8006c78:	2300      	movs	r3, #0
 8006c7a:	0031      	movs	r1, r6
 8006c7c:	f7ff fe9e 	bl	80069bc <__multadd>
 8006c80:	0006      	movs	r6, r0
 8006c82:	10ad      	asrs	r5, r5, #2
 8006c84:	d03d      	beq.n	8006d02 <__pow5mult+0xa2>
 8006c86:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8006c88:	2c00      	cmp	r4, #0
 8006c8a:	d10f      	bne.n	8006cac <__pow5mult+0x4c>
 8006c8c:	2010      	movs	r0, #16
 8006c8e:	f7ff fe0f 	bl	80068b0 <malloc>
 8006c92:	1e02      	subs	r2, r0, #0
 8006c94:	6278      	str	r0, [r7, #36]	; 0x24
 8006c96:	d105      	bne.n	8006ca4 <__pow5mult+0x44>
 8006c98:	21d7      	movs	r1, #215	; 0xd7
 8006c9a:	4b1c      	ldr	r3, [pc, #112]	; (8006d0c <__pow5mult+0xac>)
 8006c9c:	481c      	ldr	r0, [pc, #112]	; (8006d10 <__pow5mult+0xb0>)
 8006c9e:	0049      	lsls	r1, r1, #1
 8006ca0:	f000 fc42 	bl	8007528 <__assert_func>
 8006ca4:	6044      	str	r4, [r0, #4]
 8006ca6:	6084      	str	r4, [r0, #8]
 8006ca8:	6004      	str	r4, [r0, #0]
 8006caa:	60c4      	str	r4, [r0, #12]
 8006cac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cae:	689c      	ldr	r4, [r3, #8]
 8006cb0:	9301      	str	r3, [sp, #4]
 8006cb2:	2c00      	cmp	r4, #0
 8006cb4:	d108      	bne.n	8006cc8 <__pow5mult+0x68>
 8006cb6:	0038      	movs	r0, r7
 8006cb8:	4916      	ldr	r1, [pc, #88]	; (8006d14 <__pow5mult+0xb4>)
 8006cba:	f7ff ff0b 	bl	8006ad4 <__i2b>
 8006cbe:	9b01      	ldr	r3, [sp, #4]
 8006cc0:	0004      	movs	r4, r0
 8006cc2:	6098      	str	r0, [r3, #8]
 8006cc4:	2300      	movs	r3, #0
 8006cc6:	6003      	str	r3, [r0, #0]
 8006cc8:	2301      	movs	r3, #1
 8006cca:	421d      	tst	r5, r3
 8006ccc:	d00a      	beq.n	8006ce4 <__pow5mult+0x84>
 8006cce:	0031      	movs	r1, r6
 8006cd0:	0022      	movs	r2, r4
 8006cd2:	0038      	movs	r0, r7
 8006cd4:	f7ff ff14 	bl	8006b00 <__multiply>
 8006cd8:	0031      	movs	r1, r6
 8006cda:	9001      	str	r0, [sp, #4]
 8006cdc:	0038      	movs	r0, r7
 8006cde:	f7ff fe49 	bl	8006974 <_Bfree>
 8006ce2:	9e01      	ldr	r6, [sp, #4]
 8006ce4:	106d      	asrs	r5, r5, #1
 8006ce6:	d00c      	beq.n	8006d02 <__pow5mult+0xa2>
 8006ce8:	6820      	ldr	r0, [r4, #0]
 8006cea:	2800      	cmp	r0, #0
 8006cec:	d107      	bne.n	8006cfe <__pow5mult+0x9e>
 8006cee:	0022      	movs	r2, r4
 8006cf0:	0021      	movs	r1, r4
 8006cf2:	0038      	movs	r0, r7
 8006cf4:	f7ff ff04 	bl	8006b00 <__multiply>
 8006cf8:	2300      	movs	r3, #0
 8006cfa:	6020      	str	r0, [r4, #0]
 8006cfc:	6003      	str	r3, [r0, #0]
 8006cfe:	0004      	movs	r4, r0
 8006d00:	e7e2      	b.n	8006cc8 <__pow5mult+0x68>
 8006d02:	0030      	movs	r0, r6
 8006d04:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006d06:	46c0      	nop			; (mov r8, r8)
 8006d08:	08008648 	.word	0x08008648
 8006d0c:	08008475 	.word	0x08008475
 8006d10:	080084f8 	.word	0x080084f8
 8006d14:	00000271 	.word	0x00000271

08006d18 <__lshift>:
 8006d18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d1a:	000c      	movs	r4, r1
 8006d1c:	0017      	movs	r7, r2
 8006d1e:	6923      	ldr	r3, [r4, #16]
 8006d20:	1155      	asrs	r5, r2, #5
 8006d22:	b087      	sub	sp, #28
 8006d24:	18eb      	adds	r3, r5, r3
 8006d26:	9302      	str	r3, [sp, #8]
 8006d28:	3301      	adds	r3, #1
 8006d2a:	9301      	str	r3, [sp, #4]
 8006d2c:	6849      	ldr	r1, [r1, #4]
 8006d2e:	68a3      	ldr	r3, [r4, #8]
 8006d30:	9004      	str	r0, [sp, #16]
 8006d32:	9a01      	ldr	r2, [sp, #4]
 8006d34:	4293      	cmp	r3, r2
 8006d36:	db10      	blt.n	8006d5a <__lshift+0x42>
 8006d38:	9804      	ldr	r0, [sp, #16]
 8006d3a:	f7ff fdd7 	bl	80068ec <_Balloc>
 8006d3e:	2300      	movs	r3, #0
 8006d40:	0002      	movs	r2, r0
 8006d42:	0006      	movs	r6, r0
 8006d44:	0019      	movs	r1, r3
 8006d46:	3214      	adds	r2, #20
 8006d48:	4298      	cmp	r0, r3
 8006d4a:	d10c      	bne.n	8006d66 <__lshift+0x4e>
 8006d4c:	21da      	movs	r1, #218	; 0xda
 8006d4e:	0002      	movs	r2, r0
 8006d50:	4b26      	ldr	r3, [pc, #152]	; (8006dec <__lshift+0xd4>)
 8006d52:	4827      	ldr	r0, [pc, #156]	; (8006df0 <__lshift+0xd8>)
 8006d54:	31ff      	adds	r1, #255	; 0xff
 8006d56:	f000 fbe7 	bl	8007528 <__assert_func>
 8006d5a:	3101      	adds	r1, #1
 8006d5c:	005b      	lsls	r3, r3, #1
 8006d5e:	e7e8      	b.n	8006d32 <__lshift+0x1a>
 8006d60:	0098      	lsls	r0, r3, #2
 8006d62:	5011      	str	r1, [r2, r0]
 8006d64:	3301      	adds	r3, #1
 8006d66:	42ab      	cmp	r3, r5
 8006d68:	dbfa      	blt.n	8006d60 <__lshift+0x48>
 8006d6a:	43eb      	mvns	r3, r5
 8006d6c:	17db      	asrs	r3, r3, #31
 8006d6e:	401d      	ands	r5, r3
 8006d70:	211f      	movs	r1, #31
 8006d72:	0023      	movs	r3, r4
 8006d74:	0038      	movs	r0, r7
 8006d76:	00ad      	lsls	r5, r5, #2
 8006d78:	1955      	adds	r5, r2, r5
 8006d7a:	6922      	ldr	r2, [r4, #16]
 8006d7c:	3314      	adds	r3, #20
 8006d7e:	0092      	lsls	r2, r2, #2
 8006d80:	4008      	ands	r0, r1
 8006d82:	4684      	mov	ip, r0
 8006d84:	189a      	adds	r2, r3, r2
 8006d86:	420f      	tst	r7, r1
 8006d88:	d02a      	beq.n	8006de0 <__lshift+0xc8>
 8006d8a:	3101      	adds	r1, #1
 8006d8c:	1a09      	subs	r1, r1, r0
 8006d8e:	9105      	str	r1, [sp, #20]
 8006d90:	2100      	movs	r1, #0
 8006d92:	9503      	str	r5, [sp, #12]
 8006d94:	4667      	mov	r7, ip
 8006d96:	6818      	ldr	r0, [r3, #0]
 8006d98:	40b8      	lsls	r0, r7
 8006d9a:	4301      	orrs	r1, r0
 8006d9c:	9803      	ldr	r0, [sp, #12]
 8006d9e:	c002      	stmia	r0!, {r1}
 8006da0:	cb02      	ldmia	r3!, {r1}
 8006da2:	9003      	str	r0, [sp, #12]
 8006da4:	9805      	ldr	r0, [sp, #20]
 8006da6:	40c1      	lsrs	r1, r0
 8006da8:	429a      	cmp	r2, r3
 8006daa:	d8f3      	bhi.n	8006d94 <__lshift+0x7c>
 8006dac:	0020      	movs	r0, r4
 8006dae:	3015      	adds	r0, #21
 8006db0:	2304      	movs	r3, #4
 8006db2:	4282      	cmp	r2, r0
 8006db4:	d304      	bcc.n	8006dc0 <__lshift+0xa8>
 8006db6:	1b13      	subs	r3, r2, r4
 8006db8:	3b15      	subs	r3, #21
 8006dba:	089b      	lsrs	r3, r3, #2
 8006dbc:	3301      	adds	r3, #1
 8006dbe:	009b      	lsls	r3, r3, #2
 8006dc0:	50e9      	str	r1, [r5, r3]
 8006dc2:	2900      	cmp	r1, #0
 8006dc4:	d002      	beq.n	8006dcc <__lshift+0xb4>
 8006dc6:	9b02      	ldr	r3, [sp, #8]
 8006dc8:	3302      	adds	r3, #2
 8006dca:	9301      	str	r3, [sp, #4]
 8006dcc:	9b01      	ldr	r3, [sp, #4]
 8006dce:	9804      	ldr	r0, [sp, #16]
 8006dd0:	3b01      	subs	r3, #1
 8006dd2:	0021      	movs	r1, r4
 8006dd4:	6133      	str	r3, [r6, #16]
 8006dd6:	f7ff fdcd 	bl	8006974 <_Bfree>
 8006dda:	0030      	movs	r0, r6
 8006ddc:	b007      	add	sp, #28
 8006dde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006de0:	cb02      	ldmia	r3!, {r1}
 8006de2:	c502      	stmia	r5!, {r1}
 8006de4:	429a      	cmp	r2, r3
 8006de6:	d8fb      	bhi.n	8006de0 <__lshift+0xc8>
 8006de8:	e7f0      	b.n	8006dcc <__lshift+0xb4>
 8006dea:	46c0      	nop			; (mov r8, r8)
 8006dec:	080084e7 	.word	0x080084e7
 8006df0:	080084f8 	.word	0x080084f8

08006df4 <__mcmp>:
 8006df4:	6902      	ldr	r2, [r0, #16]
 8006df6:	690b      	ldr	r3, [r1, #16]
 8006df8:	b530      	push	{r4, r5, lr}
 8006dfa:	0004      	movs	r4, r0
 8006dfc:	1ad0      	subs	r0, r2, r3
 8006dfe:	429a      	cmp	r2, r3
 8006e00:	d10d      	bne.n	8006e1e <__mcmp+0x2a>
 8006e02:	009b      	lsls	r3, r3, #2
 8006e04:	3414      	adds	r4, #20
 8006e06:	3114      	adds	r1, #20
 8006e08:	18e2      	adds	r2, r4, r3
 8006e0a:	18c9      	adds	r1, r1, r3
 8006e0c:	3a04      	subs	r2, #4
 8006e0e:	3904      	subs	r1, #4
 8006e10:	6815      	ldr	r5, [r2, #0]
 8006e12:	680b      	ldr	r3, [r1, #0]
 8006e14:	429d      	cmp	r5, r3
 8006e16:	d003      	beq.n	8006e20 <__mcmp+0x2c>
 8006e18:	2001      	movs	r0, #1
 8006e1a:	429d      	cmp	r5, r3
 8006e1c:	d303      	bcc.n	8006e26 <__mcmp+0x32>
 8006e1e:	bd30      	pop	{r4, r5, pc}
 8006e20:	4294      	cmp	r4, r2
 8006e22:	d3f3      	bcc.n	8006e0c <__mcmp+0x18>
 8006e24:	e7fb      	b.n	8006e1e <__mcmp+0x2a>
 8006e26:	4240      	negs	r0, r0
 8006e28:	e7f9      	b.n	8006e1e <__mcmp+0x2a>
	...

08006e2c <__mdiff>:
 8006e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e2e:	000e      	movs	r6, r1
 8006e30:	0007      	movs	r7, r0
 8006e32:	0011      	movs	r1, r2
 8006e34:	0030      	movs	r0, r6
 8006e36:	b087      	sub	sp, #28
 8006e38:	0014      	movs	r4, r2
 8006e3a:	f7ff ffdb 	bl	8006df4 <__mcmp>
 8006e3e:	1e05      	subs	r5, r0, #0
 8006e40:	d110      	bne.n	8006e64 <__mdiff+0x38>
 8006e42:	0001      	movs	r1, r0
 8006e44:	0038      	movs	r0, r7
 8006e46:	f7ff fd51 	bl	80068ec <_Balloc>
 8006e4a:	1e02      	subs	r2, r0, #0
 8006e4c:	d104      	bne.n	8006e58 <__mdiff+0x2c>
 8006e4e:	4b40      	ldr	r3, [pc, #256]	; (8006f50 <__mdiff+0x124>)
 8006e50:	4940      	ldr	r1, [pc, #256]	; (8006f54 <__mdiff+0x128>)
 8006e52:	4841      	ldr	r0, [pc, #260]	; (8006f58 <__mdiff+0x12c>)
 8006e54:	f000 fb68 	bl	8007528 <__assert_func>
 8006e58:	2301      	movs	r3, #1
 8006e5a:	6145      	str	r5, [r0, #20]
 8006e5c:	6103      	str	r3, [r0, #16]
 8006e5e:	0010      	movs	r0, r2
 8006e60:	b007      	add	sp, #28
 8006e62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e64:	2301      	movs	r3, #1
 8006e66:	9301      	str	r3, [sp, #4]
 8006e68:	2800      	cmp	r0, #0
 8006e6a:	db04      	blt.n	8006e76 <__mdiff+0x4a>
 8006e6c:	0023      	movs	r3, r4
 8006e6e:	0034      	movs	r4, r6
 8006e70:	001e      	movs	r6, r3
 8006e72:	2300      	movs	r3, #0
 8006e74:	9301      	str	r3, [sp, #4]
 8006e76:	0038      	movs	r0, r7
 8006e78:	6861      	ldr	r1, [r4, #4]
 8006e7a:	f7ff fd37 	bl	80068ec <_Balloc>
 8006e7e:	1e02      	subs	r2, r0, #0
 8006e80:	d103      	bne.n	8006e8a <__mdiff+0x5e>
 8006e82:	2190      	movs	r1, #144	; 0x90
 8006e84:	4b32      	ldr	r3, [pc, #200]	; (8006f50 <__mdiff+0x124>)
 8006e86:	0089      	lsls	r1, r1, #2
 8006e88:	e7e3      	b.n	8006e52 <__mdiff+0x26>
 8006e8a:	9b01      	ldr	r3, [sp, #4]
 8006e8c:	2700      	movs	r7, #0
 8006e8e:	60c3      	str	r3, [r0, #12]
 8006e90:	6920      	ldr	r0, [r4, #16]
 8006e92:	3414      	adds	r4, #20
 8006e94:	9401      	str	r4, [sp, #4]
 8006e96:	9b01      	ldr	r3, [sp, #4]
 8006e98:	0084      	lsls	r4, r0, #2
 8006e9a:	191b      	adds	r3, r3, r4
 8006e9c:	0034      	movs	r4, r6
 8006e9e:	9302      	str	r3, [sp, #8]
 8006ea0:	6933      	ldr	r3, [r6, #16]
 8006ea2:	3414      	adds	r4, #20
 8006ea4:	0099      	lsls	r1, r3, #2
 8006ea6:	1863      	adds	r3, r4, r1
 8006ea8:	9303      	str	r3, [sp, #12]
 8006eaa:	0013      	movs	r3, r2
 8006eac:	3314      	adds	r3, #20
 8006eae:	469c      	mov	ip, r3
 8006eb0:	9305      	str	r3, [sp, #20]
 8006eb2:	9b01      	ldr	r3, [sp, #4]
 8006eb4:	9304      	str	r3, [sp, #16]
 8006eb6:	9b04      	ldr	r3, [sp, #16]
 8006eb8:	cc02      	ldmia	r4!, {r1}
 8006eba:	cb20      	ldmia	r3!, {r5}
 8006ebc:	9304      	str	r3, [sp, #16]
 8006ebe:	b2ab      	uxth	r3, r5
 8006ec0:	19df      	adds	r7, r3, r7
 8006ec2:	b28b      	uxth	r3, r1
 8006ec4:	1afb      	subs	r3, r7, r3
 8006ec6:	0c09      	lsrs	r1, r1, #16
 8006ec8:	0c2d      	lsrs	r5, r5, #16
 8006eca:	1a6d      	subs	r5, r5, r1
 8006ecc:	1419      	asrs	r1, r3, #16
 8006ece:	186d      	adds	r5, r5, r1
 8006ed0:	4661      	mov	r1, ip
 8006ed2:	142f      	asrs	r7, r5, #16
 8006ed4:	b29b      	uxth	r3, r3
 8006ed6:	042d      	lsls	r5, r5, #16
 8006ed8:	432b      	orrs	r3, r5
 8006eda:	c108      	stmia	r1!, {r3}
 8006edc:	9b03      	ldr	r3, [sp, #12]
 8006ede:	468c      	mov	ip, r1
 8006ee0:	42a3      	cmp	r3, r4
 8006ee2:	d8e8      	bhi.n	8006eb6 <__mdiff+0x8a>
 8006ee4:	0031      	movs	r1, r6
 8006ee6:	9c03      	ldr	r4, [sp, #12]
 8006ee8:	3115      	adds	r1, #21
 8006eea:	2304      	movs	r3, #4
 8006eec:	428c      	cmp	r4, r1
 8006eee:	d304      	bcc.n	8006efa <__mdiff+0xce>
 8006ef0:	1ba3      	subs	r3, r4, r6
 8006ef2:	3b15      	subs	r3, #21
 8006ef4:	089b      	lsrs	r3, r3, #2
 8006ef6:	3301      	adds	r3, #1
 8006ef8:	009b      	lsls	r3, r3, #2
 8006efa:	9901      	ldr	r1, [sp, #4]
 8006efc:	18cc      	adds	r4, r1, r3
 8006efe:	9905      	ldr	r1, [sp, #20]
 8006f00:	0026      	movs	r6, r4
 8006f02:	18cb      	adds	r3, r1, r3
 8006f04:	469c      	mov	ip, r3
 8006f06:	9902      	ldr	r1, [sp, #8]
 8006f08:	428e      	cmp	r6, r1
 8006f0a:	d310      	bcc.n	8006f2e <__mdiff+0x102>
 8006f0c:	9e02      	ldr	r6, [sp, #8]
 8006f0e:	1ee1      	subs	r1, r4, #3
 8006f10:	2500      	movs	r5, #0
 8006f12:	428e      	cmp	r6, r1
 8006f14:	d304      	bcc.n	8006f20 <__mdiff+0xf4>
 8006f16:	0031      	movs	r1, r6
 8006f18:	3103      	adds	r1, #3
 8006f1a:	1b0c      	subs	r4, r1, r4
 8006f1c:	08a4      	lsrs	r4, r4, #2
 8006f1e:	00a5      	lsls	r5, r4, #2
 8006f20:	195b      	adds	r3, r3, r5
 8006f22:	3b04      	subs	r3, #4
 8006f24:	6819      	ldr	r1, [r3, #0]
 8006f26:	2900      	cmp	r1, #0
 8006f28:	d00f      	beq.n	8006f4a <__mdiff+0x11e>
 8006f2a:	6110      	str	r0, [r2, #16]
 8006f2c:	e797      	b.n	8006e5e <__mdiff+0x32>
 8006f2e:	ce02      	ldmia	r6!, {r1}
 8006f30:	b28d      	uxth	r5, r1
 8006f32:	19ed      	adds	r5, r5, r7
 8006f34:	0c0f      	lsrs	r7, r1, #16
 8006f36:	1429      	asrs	r1, r5, #16
 8006f38:	1879      	adds	r1, r7, r1
 8006f3a:	140f      	asrs	r7, r1, #16
 8006f3c:	b2ad      	uxth	r5, r5
 8006f3e:	0409      	lsls	r1, r1, #16
 8006f40:	430d      	orrs	r5, r1
 8006f42:	4661      	mov	r1, ip
 8006f44:	c120      	stmia	r1!, {r5}
 8006f46:	468c      	mov	ip, r1
 8006f48:	e7dd      	b.n	8006f06 <__mdiff+0xda>
 8006f4a:	3801      	subs	r0, #1
 8006f4c:	e7e9      	b.n	8006f22 <__mdiff+0xf6>
 8006f4e:	46c0      	nop			; (mov r8, r8)
 8006f50:	080084e7 	.word	0x080084e7
 8006f54:	00000232 	.word	0x00000232
 8006f58:	080084f8 	.word	0x080084f8

08006f5c <__d2b>:
 8006f5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006f5e:	2101      	movs	r1, #1
 8006f60:	0014      	movs	r4, r2
 8006f62:	001e      	movs	r6, r3
 8006f64:	9f08      	ldr	r7, [sp, #32]
 8006f66:	f7ff fcc1 	bl	80068ec <_Balloc>
 8006f6a:	1e05      	subs	r5, r0, #0
 8006f6c:	d105      	bne.n	8006f7a <__d2b+0x1e>
 8006f6e:	0002      	movs	r2, r0
 8006f70:	4b26      	ldr	r3, [pc, #152]	; (800700c <__d2b+0xb0>)
 8006f72:	4927      	ldr	r1, [pc, #156]	; (8007010 <__d2b+0xb4>)
 8006f74:	4827      	ldr	r0, [pc, #156]	; (8007014 <__d2b+0xb8>)
 8006f76:	f000 fad7 	bl	8007528 <__assert_func>
 8006f7a:	0333      	lsls	r3, r6, #12
 8006f7c:	0076      	lsls	r6, r6, #1
 8006f7e:	0b1b      	lsrs	r3, r3, #12
 8006f80:	0d76      	lsrs	r6, r6, #21
 8006f82:	d124      	bne.n	8006fce <__d2b+0x72>
 8006f84:	9301      	str	r3, [sp, #4]
 8006f86:	2c00      	cmp	r4, #0
 8006f88:	d027      	beq.n	8006fda <__d2b+0x7e>
 8006f8a:	4668      	mov	r0, sp
 8006f8c:	9400      	str	r4, [sp, #0]
 8006f8e:	f7ff fd73 	bl	8006a78 <__lo0bits>
 8006f92:	9c00      	ldr	r4, [sp, #0]
 8006f94:	2800      	cmp	r0, #0
 8006f96:	d01e      	beq.n	8006fd6 <__d2b+0x7a>
 8006f98:	9b01      	ldr	r3, [sp, #4]
 8006f9a:	2120      	movs	r1, #32
 8006f9c:	001a      	movs	r2, r3
 8006f9e:	1a09      	subs	r1, r1, r0
 8006fa0:	408a      	lsls	r2, r1
 8006fa2:	40c3      	lsrs	r3, r0
 8006fa4:	4322      	orrs	r2, r4
 8006fa6:	616a      	str	r2, [r5, #20]
 8006fa8:	9301      	str	r3, [sp, #4]
 8006faa:	9c01      	ldr	r4, [sp, #4]
 8006fac:	61ac      	str	r4, [r5, #24]
 8006fae:	1e63      	subs	r3, r4, #1
 8006fb0:	419c      	sbcs	r4, r3
 8006fb2:	3401      	adds	r4, #1
 8006fb4:	612c      	str	r4, [r5, #16]
 8006fb6:	2e00      	cmp	r6, #0
 8006fb8:	d018      	beq.n	8006fec <__d2b+0x90>
 8006fba:	4b17      	ldr	r3, [pc, #92]	; (8007018 <__d2b+0xbc>)
 8006fbc:	18f6      	adds	r6, r6, r3
 8006fbe:	2335      	movs	r3, #53	; 0x35
 8006fc0:	1836      	adds	r6, r6, r0
 8006fc2:	1a18      	subs	r0, r3, r0
 8006fc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006fc6:	603e      	str	r6, [r7, #0]
 8006fc8:	6018      	str	r0, [r3, #0]
 8006fca:	0028      	movs	r0, r5
 8006fcc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006fce:	2280      	movs	r2, #128	; 0x80
 8006fd0:	0352      	lsls	r2, r2, #13
 8006fd2:	4313      	orrs	r3, r2
 8006fd4:	e7d6      	b.n	8006f84 <__d2b+0x28>
 8006fd6:	616c      	str	r4, [r5, #20]
 8006fd8:	e7e7      	b.n	8006faa <__d2b+0x4e>
 8006fda:	a801      	add	r0, sp, #4
 8006fdc:	f7ff fd4c 	bl	8006a78 <__lo0bits>
 8006fe0:	2401      	movs	r4, #1
 8006fe2:	9b01      	ldr	r3, [sp, #4]
 8006fe4:	612c      	str	r4, [r5, #16]
 8006fe6:	616b      	str	r3, [r5, #20]
 8006fe8:	3020      	adds	r0, #32
 8006fea:	e7e4      	b.n	8006fb6 <__d2b+0x5a>
 8006fec:	4b0b      	ldr	r3, [pc, #44]	; (800701c <__d2b+0xc0>)
 8006fee:	18c0      	adds	r0, r0, r3
 8006ff0:	4b0b      	ldr	r3, [pc, #44]	; (8007020 <__d2b+0xc4>)
 8006ff2:	6038      	str	r0, [r7, #0]
 8006ff4:	18e3      	adds	r3, r4, r3
 8006ff6:	009b      	lsls	r3, r3, #2
 8006ff8:	18eb      	adds	r3, r5, r3
 8006ffa:	6958      	ldr	r0, [r3, #20]
 8006ffc:	f7ff fd22 	bl	8006a44 <__hi0bits>
 8007000:	0164      	lsls	r4, r4, #5
 8007002:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007004:	1a24      	subs	r4, r4, r0
 8007006:	601c      	str	r4, [r3, #0]
 8007008:	e7df      	b.n	8006fca <__d2b+0x6e>
 800700a:	46c0      	nop			; (mov r8, r8)
 800700c:	080084e7 	.word	0x080084e7
 8007010:	0000030a 	.word	0x0000030a
 8007014:	080084f8 	.word	0x080084f8
 8007018:	fffffbcd 	.word	0xfffffbcd
 800701c:	fffffbce 	.word	0xfffffbce
 8007020:	3fffffff 	.word	0x3fffffff

08007024 <_calloc_r>:
 8007024:	b570      	push	{r4, r5, r6, lr}
 8007026:	0c13      	lsrs	r3, r2, #16
 8007028:	0c0d      	lsrs	r5, r1, #16
 800702a:	d11e      	bne.n	800706a <_calloc_r+0x46>
 800702c:	2b00      	cmp	r3, #0
 800702e:	d10c      	bne.n	800704a <_calloc_r+0x26>
 8007030:	b289      	uxth	r1, r1
 8007032:	b294      	uxth	r4, r2
 8007034:	434c      	muls	r4, r1
 8007036:	0021      	movs	r1, r4
 8007038:	f000 f88c 	bl	8007154 <_malloc_r>
 800703c:	1e05      	subs	r5, r0, #0
 800703e:	d01b      	beq.n	8007078 <_calloc_r+0x54>
 8007040:	0022      	movs	r2, r4
 8007042:	2100      	movs	r1, #0
 8007044:	f7fe f8dc 	bl	8005200 <memset>
 8007048:	e016      	b.n	8007078 <_calloc_r+0x54>
 800704a:	1c1d      	adds	r5, r3, #0
 800704c:	1c0b      	adds	r3, r1, #0
 800704e:	b292      	uxth	r2, r2
 8007050:	b289      	uxth	r1, r1
 8007052:	b29c      	uxth	r4, r3
 8007054:	4351      	muls	r1, r2
 8007056:	b2ab      	uxth	r3, r5
 8007058:	4363      	muls	r3, r4
 800705a:	0c0c      	lsrs	r4, r1, #16
 800705c:	191c      	adds	r4, r3, r4
 800705e:	0c22      	lsrs	r2, r4, #16
 8007060:	d107      	bne.n	8007072 <_calloc_r+0x4e>
 8007062:	0424      	lsls	r4, r4, #16
 8007064:	b289      	uxth	r1, r1
 8007066:	430c      	orrs	r4, r1
 8007068:	e7e5      	b.n	8007036 <_calloc_r+0x12>
 800706a:	2b00      	cmp	r3, #0
 800706c:	d101      	bne.n	8007072 <_calloc_r+0x4e>
 800706e:	1c13      	adds	r3, r2, #0
 8007070:	e7ed      	b.n	800704e <_calloc_r+0x2a>
 8007072:	230c      	movs	r3, #12
 8007074:	2500      	movs	r5, #0
 8007076:	6003      	str	r3, [r0, #0]
 8007078:	0028      	movs	r0, r5
 800707a:	bd70      	pop	{r4, r5, r6, pc}

0800707c <_free_r>:
 800707c:	b570      	push	{r4, r5, r6, lr}
 800707e:	0005      	movs	r5, r0
 8007080:	2900      	cmp	r1, #0
 8007082:	d010      	beq.n	80070a6 <_free_r+0x2a>
 8007084:	1f0c      	subs	r4, r1, #4
 8007086:	6823      	ldr	r3, [r4, #0]
 8007088:	2b00      	cmp	r3, #0
 800708a:	da00      	bge.n	800708e <_free_r+0x12>
 800708c:	18e4      	adds	r4, r4, r3
 800708e:	0028      	movs	r0, r5
 8007090:	f000 fa9e 	bl	80075d0 <__malloc_lock>
 8007094:	4a1d      	ldr	r2, [pc, #116]	; (800710c <_free_r+0x90>)
 8007096:	6813      	ldr	r3, [r2, #0]
 8007098:	2b00      	cmp	r3, #0
 800709a:	d105      	bne.n	80070a8 <_free_r+0x2c>
 800709c:	6063      	str	r3, [r4, #4]
 800709e:	6014      	str	r4, [r2, #0]
 80070a0:	0028      	movs	r0, r5
 80070a2:	f000 fa9d 	bl	80075e0 <__malloc_unlock>
 80070a6:	bd70      	pop	{r4, r5, r6, pc}
 80070a8:	42a3      	cmp	r3, r4
 80070aa:	d908      	bls.n	80070be <_free_r+0x42>
 80070ac:	6821      	ldr	r1, [r4, #0]
 80070ae:	1860      	adds	r0, r4, r1
 80070b0:	4283      	cmp	r3, r0
 80070b2:	d1f3      	bne.n	800709c <_free_r+0x20>
 80070b4:	6818      	ldr	r0, [r3, #0]
 80070b6:	685b      	ldr	r3, [r3, #4]
 80070b8:	1841      	adds	r1, r0, r1
 80070ba:	6021      	str	r1, [r4, #0]
 80070bc:	e7ee      	b.n	800709c <_free_r+0x20>
 80070be:	001a      	movs	r2, r3
 80070c0:	685b      	ldr	r3, [r3, #4]
 80070c2:	2b00      	cmp	r3, #0
 80070c4:	d001      	beq.n	80070ca <_free_r+0x4e>
 80070c6:	42a3      	cmp	r3, r4
 80070c8:	d9f9      	bls.n	80070be <_free_r+0x42>
 80070ca:	6811      	ldr	r1, [r2, #0]
 80070cc:	1850      	adds	r0, r2, r1
 80070ce:	42a0      	cmp	r0, r4
 80070d0:	d10b      	bne.n	80070ea <_free_r+0x6e>
 80070d2:	6820      	ldr	r0, [r4, #0]
 80070d4:	1809      	adds	r1, r1, r0
 80070d6:	1850      	adds	r0, r2, r1
 80070d8:	6011      	str	r1, [r2, #0]
 80070da:	4283      	cmp	r3, r0
 80070dc:	d1e0      	bne.n	80070a0 <_free_r+0x24>
 80070de:	6818      	ldr	r0, [r3, #0]
 80070e0:	685b      	ldr	r3, [r3, #4]
 80070e2:	1841      	adds	r1, r0, r1
 80070e4:	6011      	str	r1, [r2, #0]
 80070e6:	6053      	str	r3, [r2, #4]
 80070e8:	e7da      	b.n	80070a0 <_free_r+0x24>
 80070ea:	42a0      	cmp	r0, r4
 80070ec:	d902      	bls.n	80070f4 <_free_r+0x78>
 80070ee:	230c      	movs	r3, #12
 80070f0:	602b      	str	r3, [r5, #0]
 80070f2:	e7d5      	b.n	80070a0 <_free_r+0x24>
 80070f4:	6821      	ldr	r1, [r4, #0]
 80070f6:	1860      	adds	r0, r4, r1
 80070f8:	4283      	cmp	r3, r0
 80070fa:	d103      	bne.n	8007104 <_free_r+0x88>
 80070fc:	6818      	ldr	r0, [r3, #0]
 80070fe:	685b      	ldr	r3, [r3, #4]
 8007100:	1841      	adds	r1, r0, r1
 8007102:	6021      	str	r1, [r4, #0]
 8007104:	6063      	str	r3, [r4, #4]
 8007106:	6054      	str	r4, [r2, #4]
 8007108:	e7ca      	b.n	80070a0 <_free_r+0x24>
 800710a:	46c0      	nop			; (mov r8, r8)
 800710c:	2000037c 	.word	0x2000037c

08007110 <sbrk_aligned>:
 8007110:	b570      	push	{r4, r5, r6, lr}
 8007112:	4e0f      	ldr	r6, [pc, #60]	; (8007150 <sbrk_aligned+0x40>)
 8007114:	000d      	movs	r5, r1
 8007116:	6831      	ldr	r1, [r6, #0]
 8007118:	0004      	movs	r4, r0
 800711a:	2900      	cmp	r1, #0
 800711c:	d102      	bne.n	8007124 <sbrk_aligned+0x14>
 800711e:	f000 f9f1 	bl	8007504 <_sbrk_r>
 8007122:	6030      	str	r0, [r6, #0]
 8007124:	0029      	movs	r1, r5
 8007126:	0020      	movs	r0, r4
 8007128:	f000 f9ec 	bl	8007504 <_sbrk_r>
 800712c:	1c43      	adds	r3, r0, #1
 800712e:	d00a      	beq.n	8007146 <sbrk_aligned+0x36>
 8007130:	2303      	movs	r3, #3
 8007132:	1cc5      	adds	r5, r0, #3
 8007134:	439d      	bics	r5, r3
 8007136:	42a8      	cmp	r0, r5
 8007138:	d007      	beq.n	800714a <sbrk_aligned+0x3a>
 800713a:	1a29      	subs	r1, r5, r0
 800713c:	0020      	movs	r0, r4
 800713e:	f000 f9e1 	bl	8007504 <_sbrk_r>
 8007142:	1c43      	adds	r3, r0, #1
 8007144:	d101      	bne.n	800714a <sbrk_aligned+0x3a>
 8007146:	2501      	movs	r5, #1
 8007148:	426d      	negs	r5, r5
 800714a:	0028      	movs	r0, r5
 800714c:	bd70      	pop	{r4, r5, r6, pc}
 800714e:	46c0      	nop			; (mov r8, r8)
 8007150:	20000380 	.word	0x20000380

08007154 <_malloc_r>:
 8007154:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007156:	2203      	movs	r2, #3
 8007158:	1ccb      	adds	r3, r1, #3
 800715a:	4393      	bics	r3, r2
 800715c:	3308      	adds	r3, #8
 800715e:	0006      	movs	r6, r0
 8007160:	001f      	movs	r7, r3
 8007162:	2b0c      	cmp	r3, #12
 8007164:	d232      	bcs.n	80071cc <_malloc_r+0x78>
 8007166:	270c      	movs	r7, #12
 8007168:	42b9      	cmp	r1, r7
 800716a:	d831      	bhi.n	80071d0 <_malloc_r+0x7c>
 800716c:	0030      	movs	r0, r6
 800716e:	f000 fa2f 	bl	80075d0 <__malloc_lock>
 8007172:	4d32      	ldr	r5, [pc, #200]	; (800723c <_malloc_r+0xe8>)
 8007174:	682b      	ldr	r3, [r5, #0]
 8007176:	001c      	movs	r4, r3
 8007178:	2c00      	cmp	r4, #0
 800717a:	d12e      	bne.n	80071da <_malloc_r+0x86>
 800717c:	0039      	movs	r1, r7
 800717e:	0030      	movs	r0, r6
 8007180:	f7ff ffc6 	bl	8007110 <sbrk_aligned>
 8007184:	0004      	movs	r4, r0
 8007186:	1c43      	adds	r3, r0, #1
 8007188:	d11e      	bne.n	80071c8 <_malloc_r+0x74>
 800718a:	682c      	ldr	r4, [r5, #0]
 800718c:	0025      	movs	r5, r4
 800718e:	2d00      	cmp	r5, #0
 8007190:	d14a      	bne.n	8007228 <_malloc_r+0xd4>
 8007192:	6823      	ldr	r3, [r4, #0]
 8007194:	0029      	movs	r1, r5
 8007196:	18e3      	adds	r3, r4, r3
 8007198:	0030      	movs	r0, r6
 800719a:	9301      	str	r3, [sp, #4]
 800719c:	f000 f9b2 	bl	8007504 <_sbrk_r>
 80071a0:	9b01      	ldr	r3, [sp, #4]
 80071a2:	4283      	cmp	r3, r0
 80071a4:	d143      	bne.n	800722e <_malloc_r+0xda>
 80071a6:	6823      	ldr	r3, [r4, #0]
 80071a8:	3703      	adds	r7, #3
 80071aa:	1aff      	subs	r7, r7, r3
 80071ac:	2303      	movs	r3, #3
 80071ae:	439f      	bics	r7, r3
 80071b0:	3708      	adds	r7, #8
 80071b2:	2f0c      	cmp	r7, #12
 80071b4:	d200      	bcs.n	80071b8 <_malloc_r+0x64>
 80071b6:	270c      	movs	r7, #12
 80071b8:	0039      	movs	r1, r7
 80071ba:	0030      	movs	r0, r6
 80071bc:	f7ff ffa8 	bl	8007110 <sbrk_aligned>
 80071c0:	1c43      	adds	r3, r0, #1
 80071c2:	d034      	beq.n	800722e <_malloc_r+0xda>
 80071c4:	6823      	ldr	r3, [r4, #0]
 80071c6:	19df      	adds	r7, r3, r7
 80071c8:	6027      	str	r7, [r4, #0]
 80071ca:	e013      	b.n	80071f4 <_malloc_r+0xa0>
 80071cc:	2b00      	cmp	r3, #0
 80071ce:	dacb      	bge.n	8007168 <_malloc_r+0x14>
 80071d0:	230c      	movs	r3, #12
 80071d2:	2500      	movs	r5, #0
 80071d4:	6033      	str	r3, [r6, #0]
 80071d6:	0028      	movs	r0, r5
 80071d8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80071da:	6822      	ldr	r2, [r4, #0]
 80071dc:	1bd1      	subs	r1, r2, r7
 80071de:	d420      	bmi.n	8007222 <_malloc_r+0xce>
 80071e0:	290b      	cmp	r1, #11
 80071e2:	d917      	bls.n	8007214 <_malloc_r+0xc0>
 80071e4:	19e2      	adds	r2, r4, r7
 80071e6:	6027      	str	r7, [r4, #0]
 80071e8:	42a3      	cmp	r3, r4
 80071ea:	d111      	bne.n	8007210 <_malloc_r+0xbc>
 80071ec:	602a      	str	r2, [r5, #0]
 80071ee:	6863      	ldr	r3, [r4, #4]
 80071f0:	6011      	str	r1, [r2, #0]
 80071f2:	6053      	str	r3, [r2, #4]
 80071f4:	0030      	movs	r0, r6
 80071f6:	0025      	movs	r5, r4
 80071f8:	f000 f9f2 	bl	80075e0 <__malloc_unlock>
 80071fc:	2207      	movs	r2, #7
 80071fe:	350b      	adds	r5, #11
 8007200:	1d23      	adds	r3, r4, #4
 8007202:	4395      	bics	r5, r2
 8007204:	1aea      	subs	r2, r5, r3
 8007206:	429d      	cmp	r5, r3
 8007208:	d0e5      	beq.n	80071d6 <_malloc_r+0x82>
 800720a:	1b5b      	subs	r3, r3, r5
 800720c:	50a3      	str	r3, [r4, r2]
 800720e:	e7e2      	b.n	80071d6 <_malloc_r+0x82>
 8007210:	605a      	str	r2, [r3, #4]
 8007212:	e7ec      	b.n	80071ee <_malloc_r+0x9a>
 8007214:	6862      	ldr	r2, [r4, #4]
 8007216:	42a3      	cmp	r3, r4
 8007218:	d101      	bne.n	800721e <_malloc_r+0xca>
 800721a:	602a      	str	r2, [r5, #0]
 800721c:	e7ea      	b.n	80071f4 <_malloc_r+0xa0>
 800721e:	605a      	str	r2, [r3, #4]
 8007220:	e7e8      	b.n	80071f4 <_malloc_r+0xa0>
 8007222:	0023      	movs	r3, r4
 8007224:	6864      	ldr	r4, [r4, #4]
 8007226:	e7a7      	b.n	8007178 <_malloc_r+0x24>
 8007228:	002c      	movs	r4, r5
 800722a:	686d      	ldr	r5, [r5, #4]
 800722c:	e7af      	b.n	800718e <_malloc_r+0x3a>
 800722e:	230c      	movs	r3, #12
 8007230:	0030      	movs	r0, r6
 8007232:	6033      	str	r3, [r6, #0]
 8007234:	f000 f9d4 	bl	80075e0 <__malloc_unlock>
 8007238:	e7cd      	b.n	80071d6 <_malloc_r+0x82>
 800723a:	46c0      	nop			; (mov r8, r8)
 800723c:	2000037c 	.word	0x2000037c

08007240 <__ssputs_r>:
 8007240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007242:	688e      	ldr	r6, [r1, #8]
 8007244:	b085      	sub	sp, #20
 8007246:	0007      	movs	r7, r0
 8007248:	000c      	movs	r4, r1
 800724a:	9203      	str	r2, [sp, #12]
 800724c:	9301      	str	r3, [sp, #4]
 800724e:	429e      	cmp	r6, r3
 8007250:	d83c      	bhi.n	80072cc <__ssputs_r+0x8c>
 8007252:	2390      	movs	r3, #144	; 0x90
 8007254:	898a      	ldrh	r2, [r1, #12]
 8007256:	00db      	lsls	r3, r3, #3
 8007258:	421a      	tst	r2, r3
 800725a:	d034      	beq.n	80072c6 <__ssputs_r+0x86>
 800725c:	6909      	ldr	r1, [r1, #16]
 800725e:	6823      	ldr	r3, [r4, #0]
 8007260:	6960      	ldr	r0, [r4, #20]
 8007262:	1a5b      	subs	r3, r3, r1
 8007264:	9302      	str	r3, [sp, #8]
 8007266:	2303      	movs	r3, #3
 8007268:	4343      	muls	r3, r0
 800726a:	0fdd      	lsrs	r5, r3, #31
 800726c:	18ed      	adds	r5, r5, r3
 800726e:	9b01      	ldr	r3, [sp, #4]
 8007270:	9802      	ldr	r0, [sp, #8]
 8007272:	3301      	adds	r3, #1
 8007274:	181b      	adds	r3, r3, r0
 8007276:	106d      	asrs	r5, r5, #1
 8007278:	42ab      	cmp	r3, r5
 800727a:	d900      	bls.n	800727e <__ssputs_r+0x3e>
 800727c:	001d      	movs	r5, r3
 800727e:	0553      	lsls	r3, r2, #21
 8007280:	d532      	bpl.n	80072e8 <__ssputs_r+0xa8>
 8007282:	0029      	movs	r1, r5
 8007284:	0038      	movs	r0, r7
 8007286:	f7ff ff65 	bl	8007154 <_malloc_r>
 800728a:	1e06      	subs	r6, r0, #0
 800728c:	d109      	bne.n	80072a2 <__ssputs_r+0x62>
 800728e:	230c      	movs	r3, #12
 8007290:	603b      	str	r3, [r7, #0]
 8007292:	2340      	movs	r3, #64	; 0x40
 8007294:	2001      	movs	r0, #1
 8007296:	89a2      	ldrh	r2, [r4, #12]
 8007298:	4240      	negs	r0, r0
 800729a:	4313      	orrs	r3, r2
 800729c:	81a3      	strh	r3, [r4, #12]
 800729e:	b005      	add	sp, #20
 80072a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80072a2:	9a02      	ldr	r2, [sp, #8]
 80072a4:	6921      	ldr	r1, [r4, #16]
 80072a6:	f7ff fb18 	bl	80068da <memcpy>
 80072aa:	89a3      	ldrh	r3, [r4, #12]
 80072ac:	4a14      	ldr	r2, [pc, #80]	; (8007300 <__ssputs_r+0xc0>)
 80072ae:	401a      	ands	r2, r3
 80072b0:	2380      	movs	r3, #128	; 0x80
 80072b2:	4313      	orrs	r3, r2
 80072b4:	81a3      	strh	r3, [r4, #12]
 80072b6:	9b02      	ldr	r3, [sp, #8]
 80072b8:	6126      	str	r6, [r4, #16]
 80072ba:	18f6      	adds	r6, r6, r3
 80072bc:	6026      	str	r6, [r4, #0]
 80072be:	6165      	str	r5, [r4, #20]
 80072c0:	9e01      	ldr	r6, [sp, #4]
 80072c2:	1aed      	subs	r5, r5, r3
 80072c4:	60a5      	str	r5, [r4, #8]
 80072c6:	9b01      	ldr	r3, [sp, #4]
 80072c8:	429e      	cmp	r6, r3
 80072ca:	d900      	bls.n	80072ce <__ssputs_r+0x8e>
 80072cc:	9e01      	ldr	r6, [sp, #4]
 80072ce:	0032      	movs	r2, r6
 80072d0:	9903      	ldr	r1, [sp, #12]
 80072d2:	6820      	ldr	r0, [r4, #0]
 80072d4:	f000 f968 	bl	80075a8 <memmove>
 80072d8:	68a3      	ldr	r3, [r4, #8]
 80072da:	2000      	movs	r0, #0
 80072dc:	1b9b      	subs	r3, r3, r6
 80072de:	60a3      	str	r3, [r4, #8]
 80072e0:	6823      	ldr	r3, [r4, #0]
 80072e2:	199e      	adds	r6, r3, r6
 80072e4:	6026      	str	r6, [r4, #0]
 80072e6:	e7da      	b.n	800729e <__ssputs_r+0x5e>
 80072e8:	002a      	movs	r2, r5
 80072ea:	0038      	movs	r0, r7
 80072ec:	f000 f980 	bl	80075f0 <_realloc_r>
 80072f0:	1e06      	subs	r6, r0, #0
 80072f2:	d1e0      	bne.n	80072b6 <__ssputs_r+0x76>
 80072f4:	0038      	movs	r0, r7
 80072f6:	6921      	ldr	r1, [r4, #16]
 80072f8:	f7ff fec0 	bl	800707c <_free_r>
 80072fc:	e7c7      	b.n	800728e <__ssputs_r+0x4e>
 80072fe:	46c0      	nop			; (mov r8, r8)
 8007300:	fffffb7f 	.word	0xfffffb7f

08007304 <_svfiprintf_r>:
 8007304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007306:	b0a1      	sub	sp, #132	; 0x84
 8007308:	9003      	str	r0, [sp, #12]
 800730a:	001d      	movs	r5, r3
 800730c:	898b      	ldrh	r3, [r1, #12]
 800730e:	000f      	movs	r7, r1
 8007310:	0016      	movs	r6, r2
 8007312:	061b      	lsls	r3, r3, #24
 8007314:	d511      	bpl.n	800733a <_svfiprintf_r+0x36>
 8007316:	690b      	ldr	r3, [r1, #16]
 8007318:	2b00      	cmp	r3, #0
 800731a:	d10e      	bne.n	800733a <_svfiprintf_r+0x36>
 800731c:	2140      	movs	r1, #64	; 0x40
 800731e:	f7ff ff19 	bl	8007154 <_malloc_r>
 8007322:	6038      	str	r0, [r7, #0]
 8007324:	6138      	str	r0, [r7, #16]
 8007326:	2800      	cmp	r0, #0
 8007328:	d105      	bne.n	8007336 <_svfiprintf_r+0x32>
 800732a:	230c      	movs	r3, #12
 800732c:	9a03      	ldr	r2, [sp, #12]
 800732e:	3801      	subs	r0, #1
 8007330:	6013      	str	r3, [r2, #0]
 8007332:	b021      	add	sp, #132	; 0x84
 8007334:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007336:	2340      	movs	r3, #64	; 0x40
 8007338:	617b      	str	r3, [r7, #20]
 800733a:	2300      	movs	r3, #0
 800733c:	ac08      	add	r4, sp, #32
 800733e:	6163      	str	r3, [r4, #20]
 8007340:	3320      	adds	r3, #32
 8007342:	7663      	strb	r3, [r4, #25]
 8007344:	3310      	adds	r3, #16
 8007346:	76a3      	strb	r3, [r4, #26]
 8007348:	9507      	str	r5, [sp, #28]
 800734a:	0035      	movs	r5, r6
 800734c:	782b      	ldrb	r3, [r5, #0]
 800734e:	2b00      	cmp	r3, #0
 8007350:	d001      	beq.n	8007356 <_svfiprintf_r+0x52>
 8007352:	2b25      	cmp	r3, #37	; 0x25
 8007354:	d147      	bne.n	80073e6 <_svfiprintf_r+0xe2>
 8007356:	1bab      	subs	r3, r5, r6
 8007358:	9305      	str	r3, [sp, #20]
 800735a:	42b5      	cmp	r5, r6
 800735c:	d00c      	beq.n	8007378 <_svfiprintf_r+0x74>
 800735e:	0032      	movs	r2, r6
 8007360:	0039      	movs	r1, r7
 8007362:	9803      	ldr	r0, [sp, #12]
 8007364:	f7ff ff6c 	bl	8007240 <__ssputs_r>
 8007368:	1c43      	adds	r3, r0, #1
 800736a:	d100      	bne.n	800736e <_svfiprintf_r+0x6a>
 800736c:	e0ae      	b.n	80074cc <_svfiprintf_r+0x1c8>
 800736e:	6962      	ldr	r2, [r4, #20]
 8007370:	9b05      	ldr	r3, [sp, #20]
 8007372:	4694      	mov	ip, r2
 8007374:	4463      	add	r3, ip
 8007376:	6163      	str	r3, [r4, #20]
 8007378:	782b      	ldrb	r3, [r5, #0]
 800737a:	2b00      	cmp	r3, #0
 800737c:	d100      	bne.n	8007380 <_svfiprintf_r+0x7c>
 800737e:	e0a5      	b.n	80074cc <_svfiprintf_r+0x1c8>
 8007380:	2201      	movs	r2, #1
 8007382:	2300      	movs	r3, #0
 8007384:	4252      	negs	r2, r2
 8007386:	6062      	str	r2, [r4, #4]
 8007388:	a904      	add	r1, sp, #16
 800738a:	3254      	adds	r2, #84	; 0x54
 800738c:	1852      	adds	r2, r2, r1
 800738e:	1c6e      	adds	r6, r5, #1
 8007390:	6023      	str	r3, [r4, #0]
 8007392:	60e3      	str	r3, [r4, #12]
 8007394:	60a3      	str	r3, [r4, #8]
 8007396:	7013      	strb	r3, [r2, #0]
 8007398:	65a3      	str	r3, [r4, #88]	; 0x58
 800739a:	2205      	movs	r2, #5
 800739c:	7831      	ldrb	r1, [r6, #0]
 800739e:	4854      	ldr	r0, [pc, #336]	; (80074f0 <_svfiprintf_r+0x1ec>)
 80073a0:	f7ff fa90 	bl	80068c4 <memchr>
 80073a4:	1c75      	adds	r5, r6, #1
 80073a6:	2800      	cmp	r0, #0
 80073a8:	d11f      	bne.n	80073ea <_svfiprintf_r+0xe6>
 80073aa:	6822      	ldr	r2, [r4, #0]
 80073ac:	06d3      	lsls	r3, r2, #27
 80073ae:	d504      	bpl.n	80073ba <_svfiprintf_r+0xb6>
 80073b0:	2353      	movs	r3, #83	; 0x53
 80073b2:	a904      	add	r1, sp, #16
 80073b4:	185b      	adds	r3, r3, r1
 80073b6:	2120      	movs	r1, #32
 80073b8:	7019      	strb	r1, [r3, #0]
 80073ba:	0713      	lsls	r3, r2, #28
 80073bc:	d504      	bpl.n	80073c8 <_svfiprintf_r+0xc4>
 80073be:	2353      	movs	r3, #83	; 0x53
 80073c0:	a904      	add	r1, sp, #16
 80073c2:	185b      	adds	r3, r3, r1
 80073c4:	212b      	movs	r1, #43	; 0x2b
 80073c6:	7019      	strb	r1, [r3, #0]
 80073c8:	7833      	ldrb	r3, [r6, #0]
 80073ca:	2b2a      	cmp	r3, #42	; 0x2a
 80073cc:	d016      	beq.n	80073fc <_svfiprintf_r+0xf8>
 80073ce:	0035      	movs	r5, r6
 80073d0:	2100      	movs	r1, #0
 80073d2:	200a      	movs	r0, #10
 80073d4:	68e3      	ldr	r3, [r4, #12]
 80073d6:	782a      	ldrb	r2, [r5, #0]
 80073d8:	1c6e      	adds	r6, r5, #1
 80073da:	3a30      	subs	r2, #48	; 0x30
 80073dc:	2a09      	cmp	r2, #9
 80073de:	d94e      	bls.n	800747e <_svfiprintf_r+0x17a>
 80073e0:	2900      	cmp	r1, #0
 80073e2:	d111      	bne.n	8007408 <_svfiprintf_r+0x104>
 80073e4:	e017      	b.n	8007416 <_svfiprintf_r+0x112>
 80073e6:	3501      	adds	r5, #1
 80073e8:	e7b0      	b.n	800734c <_svfiprintf_r+0x48>
 80073ea:	4b41      	ldr	r3, [pc, #260]	; (80074f0 <_svfiprintf_r+0x1ec>)
 80073ec:	6822      	ldr	r2, [r4, #0]
 80073ee:	1ac0      	subs	r0, r0, r3
 80073f0:	2301      	movs	r3, #1
 80073f2:	4083      	lsls	r3, r0
 80073f4:	4313      	orrs	r3, r2
 80073f6:	002e      	movs	r6, r5
 80073f8:	6023      	str	r3, [r4, #0]
 80073fa:	e7ce      	b.n	800739a <_svfiprintf_r+0x96>
 80073fc:	9b07      	ldr	r3, [sp, #28]
 80073fe:	1d19      	adds	r1, r3, #4
 8007400:	681b      	ldr	r3, [r3, #0]
 8007402:	9107      	str	r1, [sp, #28]
 8007404:	2b00      	cmp	r3, #0
 8007406:	db01      	blt.n	800740c <_svfiprintf_r+0x108>
 8007408:	930b      	str	r3, [sp, #44]	; 0x2c
 800740a:	e004      	b.n	8007416 <_svfiprintf_r+0x112>
 800740c:	425b      	negs	r3, r3
 800740e:	60e3      	str	r3, [r4, #12]
 8007410:	2302      	movs	r3, #2
 8007412:	4313      	orrs	r3, r2
 8007414:	6023      	str	r3, [r4, #0]
 8007416:	782b      	ldrb	r3, [r5, #0]
 8007418:	2b2e      	cmp	r3, #46	; 0x2e
 800741a:	d10a      	bne.n	8007432 <_svfiprintf_r+0x12e>
 800741c:	786b      	ldrb	r3, [r5, #1]
 800741e:	2b2a      	cmp	r3, #42	; 0x2a
 8007420:	d135      	bne.n	800748e <_svfiprintf_r+0x18a>
 8007422:	9b07      	ldr	r3, [sp, #28]
 8007424:	3502      	adds	r5, #2
 8007426:	1d1a      	adds	r2, r3, #4
 8007428:	681b      	ldr	r3, [r3, #0]
 800742a:	9207      	str	r2, [sp, #28]
 800742c:	2b00      	cmp	r3, #0
 800742e:	db2b      	blt.n	8007488 <_svfiprintf_r+0x184>
 8007430:	9309      	str	r3, [sp, #36]	; 0x24
 8007432:	4e30      	ldr	r6, [pc, #192]	; (80074f4 <_svfiprintf_r+0x1f0>)
 8007434:	2203      	movs	r2, #3
 8007436:	0030      	movs	r0, r6
 8007438:	7829      	ldrb	r1, [r5, #0]
 800743a:	f7ff fa43 	bl	80068c4 <memchr>
 800743e:	2800      	cmp	r0, #0
 8007440:	d006      	beq.n	8007450 <_svfiprintf_r+0x14c>
 8007442:	2340      	movs	r3, #64	; 0x40
 8007444:	1b80      	subs	r0, r0, r6
 8007446:	4083      	lsls	r3, r0
 8007448:	6822      	ldr	r2, [r4, #0]
 800744a:	3501      	adds	r5, #1
 800744c:	4313      	orrs	r3, r2
 800744e:	6023      	str	r3, [r4, #0]
 8007450:	7829      	ldrb	r1, [r5, #0]
 8007452:	2206      	movs	r2, #6
 8007454:	4828      	ldr	r0, [pc, #160]	; (80074f8 <_svfiprintf_r+0x1f4>)
 8007456:	1c6e      	adds	r6, r5, #1
 8007458:	7621      	strb	r1, [r4, #24]
 800745a:	f7ff fa33 	bl	80068c4 <memchr>
 800745e:	2800      	cmp	r0, #0
 8007460:	d03c      	beq.n	80074dc <_svfiprintf_r+0x1d8>
 8007462:	4b26      	ldr	r3, [pc, #152]	; (80074fc <_svfiprintf_r+0x1f8>)
 8007464:	2b00      	cmp	r3, #0
 8007466:	d125      	bne.n	80074b4 <_svfiprintf_r+0x1b0>
 8007468:	2207      	movs	r2, #7
 800746a:	9b07      	ldr	r3, [sp, #28]
 800746c:	3307      	adds	r3, #7
 800746e:	4393      	bics	r3, r2
 8007470:	3308      	adds	r3, #8
 8007472:	9307      	str	r3, [sp, #28]
 8007474:	6963      	ldr	r3, [r4, #20]
 8007476:	9a04      	ldr	r2, [sp, #16]
 8007478:	189b      	adds	r3, r3, r2
 800747a:	6163      	str	r3, [r4, #20]
 800747c:	e765      	b.n	800734a <_svfiprintf_r+0x46>
 800747e:	4343      	muls	r3, r0
 8007480:	0035      	movs	r5, r6
 8007482:	2101      	movs	r1, #1
 8007484:	189b      	adds	r3, r3, r2
 8007486:	e7a6      	b.n	80073d6 <_svfiprintf_r+0xd2>
 8007488:	2301      	movs	r3, #1
 800748a:	425b      	negs	r3, r3
 800748c:	e7d0      	b.n	8007430 <_svfiprintf_r+0x12c>
 800748e:	2300      	movs	r3, #0
 8007490:	200a      	movs	r0, #10
 8007492:	001a      	movs	r2, r3
 8007494:	3501      	adds	r5, #1
 8007496:	6063      	str	r3, [r4, #4]
 8007498:	7829      	ldrb	r1, [r5, #0]
 800749a:	1c6e      	adds	r6, r5, #1
 800749c:	3930      	subs	r1, #48	; 0x30
 800749e:	2909      	cmp	r1, #9
 80074a0:	d903      	bls.n	80074aa <_svfiprintf_r+0x1a6>
 80074a2:	2b00      	cmp	r3, #0
 80074a4:	d0c5      	beq.n	8007432 <_svfiprintf_r+0x12e>
 80074a6:	9209      	str	r2, [sp, #36]	; 0x24
 80074a8:	e7c3      	b.n	8007432 <_svfiprintf_r+0x12e>
 80074aa:	4342      	muls	r2, r0
 80074ac:	0035      	movs	r5, r6
 80074ae:	2301      	movs	r3, #1
 80074b0:	1852      	adds	r2, r2, r1
 80074b2:	e7f1      	b.n	8007498 <_svfiprintf_r+0x194>
 80074b4:	ab07      	add	r3, sp, #28
 80074b6:	9300      	str	r3, [sp, #0]
 80074b8:	003a      	movs	r2, r7
 80074ba:	0021      	movs	r1, r4
 80074bc:	4b10      	ldr	r3, [pc, #64]	; (8007500 <_svfiprintf_r+0x1fc>)
 80074be:	9803      	ldr	r0, [sp, #12]
 80074c0:	f7fd ff50 	bl	8005364 <_printf_float>
 80074c4:	9004      	str	r0, [sp, #16]
 80074c6:	9b04      	ldr	r3, [sp, #16]
 80074c8:	3301      	adds	r3, #1
 80074ca:	d1d3      	bne.n	8007474 <_svfiprintf_r+0x170>
 80074cc:	89bb      	ldrh	r3, [r7, #12]
 80074ce:	980d      	ldr	r0, [sp, #52]	; 0x34
 80074d0:	065b      	lsls	r3, r3, #25
 80074d2:	d400      	bmi.n	80074d6 <_svfiprintf_r+0x1d2>
 80074d4:	e72d      	b.n	8007332 <_svfiprintf_r+0x2e>
 80074d6:	2001      	movs	r0, #1
 80074d8:	4240      	negs	r0, r0
 80074da:	e72a      	b.n	8007332 <_svfiprintf_r+0x2e>
 80074dc:	ab07      	add	r3, sp, #28
 80074de:	9300      	str	r3, [sp, #0]
 80074e0:	003a      	movs	r2, r7
 80074e2:	0021      	movs	r1, r4
 80074e4:	4b06      	ldr	r3, [pc, #24]	; (8007500 <_svfiprintf_r+0x1fc>)
 80074e6:	9803      	ldr	r0, [sp, #12]
 80074e8:	f7fe f9ee 	bl	80058c8 <_printf_i>
 80074ec:	e7ea      	b.n	80074c4 <_svfiprintf_r+0x1c0>
 80074ee:	46c0      	nop			; (mov r8, r8)
 80074f0:	08008654 	.word	0x08008654
 80074f4:	0800865a 	.word	0x0800865a
 80074f8:	0800865e 	.word	0x0800865e
 80074fc:	08005365 	.word	0x08005365
 8007500:	08007241 	.word	0x08007241

08007504 <_sbrk_r>:
 8007504:	2300      	movs	r3, #0
 8007506:	b570      	push	{r4, r5, r6, lr}
 8007508:	4d06      	ldr	r5, [pc, #24]	; (8007524 <_sbrk_r+0x20>)
 800750a:	0004      	movs	r4, r0
 800750c:	0008      	movs	r0, r1
 800750e:	602b      	str	r3, [r5, #0]
 8007510:	f7fb fe52 	bl	80031b8 <_sbrk>
 8007514:	1c43      	adds	r3, r0, #1
 8007516:	d103      	bne.n	8007520 <_sbrk_r+0x1c>
 8007518:	682b      	ldr	r3, [r5, #0]
 800751a:	2b00      	cmp	r3, #0
 800751c:	d000      	beq.n	8007520 <_sbrk_r+0x1c>
 800751e:	6023      	str	r3, [r4, #0]
 8007520:	bd70      	pop	{r4, r5, r6, pc}
 8007522:	46c0      	nop			; (mov r8, r8)
 8007524:	20000384 	.word	0x20000384

08007528 <__assert_func>:
 8007528:	b530      	push	{r4, r5, lr}
 800752a:	0014      	movs	r4, r2
 800752c:	001a      	movs	r2, r3
 800752e:	4b09      	ldr	r3, [pc, #36]	; (8007554 <__assert_func+0x2c>)
 8007530:	0005      	movs	r5, r0
 8007532:	681b      	ldr	r3, [r3, #0]
 8007534:	b085      	sub	sp, #20
 8007536:	68d8      	ldr	r0, [r3, #12]
 8007538:	4b07      	ldr	r3, [pc, #28]	; (8007558 <__assert_func+0x30>)
 800753a:	2c00      	cmp	r4, #0
 800753c:	d101      	bne.n	8007542 <__assert_func+0x1a>
 800753e:	4b07      	ldr	r3, [pc, #28]	; (800755c <__assert_func+0x34>)
 8007540:	001c      	movs	r4, r3
 8007542:	9301      	str	r3, [sp, #4]
 8007544:	9100      	str	r1, [sp, #0]
 8007546:	002b      	movs	r3, r5
 8007548:	4905      	ldr	r1, [pc, #20]	; (8007560 <__assert_func+0x38>)
 800754a:	9402      	str	r4, [sp, #8]
 800754c:	f000 f80a 	bl	8007564 <fiprintf>
 8007550:	f000 faba 	bl	8007ac8 <abort>
 8007554:	2000004c 	.word	0x2000004c
 8007558:	08008665 	.word	0x08008665
 800755c:	080086a0 	.word	0x080086a0
 8007560:	08008672 	.word	0x08008672

08007564 <fiprintf>:
 8007564:	b40e      	push	{r1, r2, r3}
 8007566:	b503      	push	{r0, r1, lr}
 8007568:	0001      	movs	r1, r0
 800756a:	ab03      	add	r3, sp, #12
 800756c:	4804      	ldr	r0, [pc, #16]	; (8007580 <fiprintf+0x1c>)
 800756e:	cb04      	ldmia	r3!, {r2}
 8007570:	6800      	ldr	r0, [r0, #0]
 8007572:	9301      	str	r3, [sp, #4]
 8007574:	f000 f892 	bl	800769c <_vfiprintf_r>
 8007578:	b002      	add	sp, #8
 800757a:	bc08      	pop	{r3}
 800757c:	b003      	add	sp, #12
 800757e:	4718      	bx	r3
 8007580:	2000004c 	.word	0x2000004c

08007584 <__ascii_mbtowc>:
 8007584:	b082      	sub	sp, #8
 8007586:	2900      	cmp	r1, #0
 8007588:	d100      	bne.n	800758c <__ascii_mbtowc+0x8>
 800758a:	a901      	add	r1, sp, #4
 800758c:	1e10      	subs	r0, r2, #0
 800758e:	d006      	beq.n	800759e <__ascii_mbtowc+0x1a>
 8007590:	2b00      	cmp	r3, #0
 8007592:	d006      	beq.n	80075a2 <__ascii_mbtowc+0x1e>
 8007594:	7813      	ldrb	r3, [r2, #0]
 8007596:	600b      	str	r3, [r1, #0]
 8007598:	7810      	ldrb	r0, [r2, #0]
 800759a:	1e43      	subs	r3, r0, #1
 800759c:	4198      	sbcs	r0, r3
 800759e:	b002      	add	sp, #8
 80075a0:	4770      	bx	lr
 80075a2:	2002      	movs	r0, #2
 80075a4:	4240      	negs	r0, r0
 80075a6:	e7fa      	b.n	800759e <__ascii_mbtowc+0x1a>

080075a8 <memmove>:
 80075a8:	b510      	push	{r4, lr}
 80075aa:	4288      	cmp	r0, r1
 80075ac:	d902      	bls.n	80075b4 <memmove+0xc>
 80075ae:	188b      	adds	r3, r1, r2
 80075b0:	4298      	cmp	r0, r3
 80075b2:	d303      	bcc.n	80075bc <memmove+0x14>
 80075b4:	2300      	movs	r3, #0
 80075b6:	e007      	b.n	80075c8 <memmove+0x20>
 80075b8:	5c8b      	ldrb	r3, [r1, r2]
 80075ba:	5483      	strb	r3, [r0, r2]
 80075bc:	3a01      	subs	r2, #1
 80075be:	d2fb      	bcs.n	80075b8 <memmove+0x10>
 80075c0:	bd10      	pop	{r4, pc}
 80075c2:	5ccc      	ldrb	r4, [r1, r3]
 80075c4:	54c4      	strb	r4, [r0, r3]
 80075c6:	3301      	adds	r3, #1
 80075c8:	429a      	cmp	r2, r3
 80075ca:	d1fa      	bne.n	80075c2 <memmove+0x1a>
 80075cc:	e7f8      	b.n	80075c0 <memmove+0x18>
	...

080075d0 <__malloc_lock>:
 80075d0:	b510      	push	{r4, lr}
 80075d2:	4802      	ldr	r0, [pc, #8]	; (80075dc <__malloc_lock+0xc>)
 80075d4:	f000 fc4f 	bl	8007e76 <__retarget_lock_acquire_recursive>
 80075d8:	bd10      	pop	{r4, pc}
 80075da:	46c0      	nop			; (mov r8, r8)
 80075dc:	20000388 	.word	0x20000388

080075e0 <__malloc_unlock>:
 80075e0:	b510      	push	{r4, lr}
 80075e2:	4802      	ldr	r0, [pc, #8]	; (80075ec <__malloc_unlock+0xc>)
 80075e4:	f000 fc48 	bl	8007e78 <__retarget_lock_release_recursive>
 80075e8:	bd10      	pop	{r4, pc}
 80075ea:	46c0      	nop			; (mov r8, r8)
 80075ec:	20000388 	.word	0x20000388

080075f0 <_realloc_r>:
 80075f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80075f2:	0007      	movs	r7, r0
 80075f4:	000e      	movs	r6, r1
 80075f6:	0014      	movs	r4, r2
 80075f8:	2900      	cmp	r1, #0
 80075fa:	d105      	bne.n	8007608 <_realloc_r+0x18>
 80075fc:	0011      	movs	r1, r2
 80075fe:	f7ff fda9 	bl	8007154 <_malloc_r>
 8007602:	0005      	movs	r5, r0
 8007604:	0028      	movs	r0, r5
 8007606:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007608:	2a00      	cmp	r2, #0
 800760a:	d103      	bne.n	8007614 <_realloc_r+0x24>
 800760c:	f7ff fd36 	bl	800707c <_free_r>
 8007610:	0025      	movs	r5, r4
 8007612:	e7f7      	b.n	8007604 <_realloc_r+0x14>
 8007614:	f000 fc9e 	bl	8007f54 <_malloc_usable_size_r>
 8007618:	9001      	str	r0, [sp, #4]
 800761a:	4284      	cmp	r4, r0
 800761c:	d803      	bhi.n	8007626 <_realloc_r+0x36>
 800761e:	0035      	movs	r5, r6
 8007620:	0843      	lsrs	r3, r0, #1
 8007622:	42a3      	cmp	r3, r4
 8007624:	d3ee      	bcc.n	8007604 <_realloc_r+0x14>
 8007626:	0021      	movs	r1, r4
 8007628:	0038      	movs	r0, r7
 800762a:	f7ff fd93 	bl	8007154 <_malloc_r>
 800762e:	1e05      	subs	r5, r0, #0
 8007630:	d0e8      	beq.n	8007604 <_realloc_r+0x14>
 8007632:	9b01      	ldr	r3, [sp, #4]
 8007634:	0022      	movs	r2, r4
 8007636:	429c      	cmp	r4, r3
 8007638:	d900      	bls.n	800763c <_realloc_r+0x4c>
 800763a:	001a      	movs	r2, r3
 800763c:	0031      	movs	r1, r6
 800763e:	0028      	movs	r0, r5
 8007640:	f7ff f94b 	bl	80068da <memcpy>
 8007644:	0031      	movs	r1, r6
 8007646:	0038      	movs	r0, r7
 8007648:	f7ff fd18 	bl	800707c <_free_r>
 800764c:	e7da      	b.n	8007604 <_realloc_r+0x14>

0800764e <__sfputc_r>:
 800764e:	6893      	ldr	r3, [r2, #8]
 8007650:	b510      	push	{r4, lr}
 8007652:	3b01      	subs	r3, #1
 8007654:	6093      	str	r3, [r2, #8]
 8007656:	2b00      	cmp	r3, #0
 8007658:	da04      	bge.n	8007664 <__sfputc_r+0x16>
 800765a:	6994      	ldr	r4, [r2, #24]
 800765c:	42a3      	cmp	r3, r4
 800765e:	db07      	blt.n	8007670 <__sfputc_r+0x22>
 8007660:	290a      	cmp	r1, #10
 8007662:	d005      	beq.n	8007670 <__sfputc_r+0x22>
 8007664:	6813      	ldr	r3, [r2, #0]
 8007666:	1c58      	adds	r0, r3, #1
 8007668:	6010      	str	r0, [r2, #0]
 800766a:	7019      	strb	r1, [r3, #0]
 800766c:	0008      	movs	r0, r1
 800766e:	bd10      	pop	{r4, pc}
 8007670:	f000 f94e 	bl	8007910 <__swbuf_r>
 8007674:	0001      	movs	r1, r0
 8007676:	e7f9      	b.n	800766c <__sfputc_r+0x1e>

08007678 <__sfputs_r>:
 8007678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800767a:	0006      	movs	r6, r0
 800767c:	000f      	movs	r7, r1
 800767e:	0014      	movs	r4, r2
 8007680:	18d5      	adds	r5, r2, r3
 8007682:	42ac      	cmp	r4, r5
 8007684:	d101      	bne.n	800768a <__sfputs_r+0x12>
 8007686:	2000      	movs	r0, #0
 8007688:	e007      	b.n	800769a <__sfputs_r+0x22>
 800768a:	7821      	ldrb	r1, [r4, #0]
 800768c:	003a      	movs	r2, r7
 800768e:	0030      	movs	r0, r6
 8007690:	f7ff ffdd 	bl	800764e <__sfputc_r>
 8007694:	3401      	adds	r4, #1
 8007696:	1c43      	adds	r3, r0, #1
 8007698:	d1f3      	bne.n	8007682 <__sfputs_r+0xa>
 800769a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800769c <_vfiprintf_r>:
 800769c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800769e:	b0a1      	sub	sp, #132	; 0x84
 80076a0:	0006      	movs	r6, r0
 80076a2:	000c      	movs	r4, r1
 80076a4:	001f      	movs	r7, r3
 80076a6:	9203      	str	r2, [sp, #12]
 80076a8:	2800      	cmp	r0, #0
 80076aa:	d004      	beq.n	80076b6 <_vfiprintf_r+0x1a>
 80076ac:	6983      	ldr	r3, [r0, #24]
 80076ae:	2b00      	cmp	r3, #0
 80076b0:	d101      	bne.n	80076b6 <_vfiprintf_r+0x1a>
 80076b2:	f000 fb3f 	bl	8007d34 <__sinit>
 80076b6:	4b8e      	ldr	r3, [pc, #568]	; (80078f0 <_vfiprintf_r+0x254>)
 80076b8:	429c      	cmp	r4, r3
 80076ba:	d11c      	bne.n	80076f6 <_vfiprintf_r+0x5a>
 80076bc:	6874      	ldr	r4, [r6, #4]
 80076be:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80076c0:	07db      	lsls	r3, r3, #31
 80076c2:	d405      	bmi.n	80076d0 <_vfiprintf_r+0x34>
 80076c4:	89a3      	ldrh	r3, [r4, #12]
 80076c6:	059b      	lsls	r3, r3, #22
 80076c8:	d402      	bmi.n	80076d0 <_vfiprintf_r+0x34>
 80076ca:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80076cc:	f000 fbd3 	bl	8007e76 <__retarget_lock_acquire_recursive>
 80076d0:	89a3      	ldrh	r3, [r4, #12]
 80076d2:	071b      	lsls	r3, r3, #28
 80076d4:	d502      	bpl.n	80076dc <_vfiprintf_r+0x40>
 80076d6:	6923      	ldr	r3, [r4, #16]
 80076d8:	2b00      	cmp	r3, #0
 80076da:	d11d      	bne.n	8007718 <_vfiprintf_r+0x7c>
 80076dc:	0021      	movs	r1, r4
 80076de:	0030      	movs	r0, r6
 80076e0:	f000 f97a 	bl	80079d8 <__swsetup_r>
 80076e4:	2800      	cmp	r0, #0
 80076e6:	d017      	beq.n	8007718 <_vfiprintf_r+0x7c>
 80076e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80076ea:	07db      	lsls	r3, r3, #31
 80076ec:	d50d      	bpl.n	800770a <_vfiprintf_r+0x6e>
 80076ee:	2001      	movs	r0, #1
 80076f0:	4240      	negs	r0, r0
 80076f2:	b021      	add	sp, #132	; 0x84
 80076f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80076f6:	4b7f      	ldr	r3, [pc, #508]	; (80078f4 <_vfiprintf_r+0x258>)
 80076f8:	429c      	cmp	r4, r3
 80076fa:	d101      	bne.n	8007700 <_vfiprintf_r+0x64>
 80076fc:	68b4      	ldr	r4, [r6, #8]
 80076fe:	e7de      	b.n	80076be <_vfiprintf_r+0x22>
 8007700:	4b7d      	ldr	r3, [pc, #500]	; (80078f8 <_vfiprintf_r+0x25c>)
 8007702:	429c      	cmp	r4, r3
 8007704:	d1db      	bne.n	80076be <_vfiprintf_r+0x22>
 8007706:	68f4      	ldr	r4, [r6, #12]
 8007708:	e7d9      	b.n	80076be <_vfiprintf_r+0x22>
 800770a:	89a3      	ldrh	r3, [r4, #12]
 800770c:	059b      	lsls	r3, r3, #22
 800770e:	d4ee      	bmi.n	80076ee <_vfiprintf_r+0x52>
 8007710:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007712:	f000 fbb1 	bl	8007e78 <__retarget_lock_release_recursive>
 8007716:	e7ea      	b.n	80076ee <_vfiprintf_r+0x52>
 8007718:	2300      	movs	r3, #0
 800771a:	ad08      	add	r5, sp, #32
 800771c:	616b      	str	r3, [r5, #20]
 800771e:	3320      	adds	r3, #32
 8007720:	766b      	strb	r3, [r5, #25]
 8007722:	3310      	adds	r3, #16
 8007724:	76ab      	strb	r3, [r5, #26]
 8007726:	9707      	str	r7, [sp, #28]
 8007728:	9f03      	ldr	r7, [sp, #12]
 800772a:	783b      	ldrb	r3, [r7, #0]
 800772c:	2b00      	cmp	r3, #0
 800772e:	d001      	beq.n	8007734 <_vfiprintf_r+0x98>
 8007730:	2b25      	cmp	r3, #37	; 0x25
 8007732:	d14e      	bne.n	80077d2 <_vfiprintf_r+0x136>
 8007734:	9b03      	ldr	r3, [sp, #12]
 8007736:	1afb      	subs	r3, r7, r3
 8007738:	9305      	str	r3, [sp, #20]
 800773a:	9b03      	ldr	r3, [sp, #12]
 800773c:	429f      	cmp	r7, r3
 800773e:	d00d      	beq.n	800775c <_vfiprintf_r+0xc0>
 8007740:	9b05      	ldr	r3, [sp, #20]
 8007742:	0021      	movs	r1, r4
 8007744:	0030      	movs	r0, r6
 8007746:	9a03      	ldr	r2, [sp, #12]
 8007748:	f7ff ff96 	bl	8007678 <__sfputs_r>
 800774c:	1c43      	adds	r3, r0, #1
 800774e:	d100      	bne.n	8007752 <_vfiprintf_r+0xb6>
 8007750:	e0b5      	b.n	80078be <_vfiprintf_r+0x222>
 8007752:	696a      	ldr	r2, [r5, #20]
 8007754:	9b05      	ldr	r3, [sp, #20]
 8007756:	4694      	mov	ip, r2
 8007758:	4463      	add	r3, ip
 800775a:	616b      	str	r3, [r5, #20]
 800775c:	783b      	ldrb	r3, [r7, #0]
 800775e:	2b00      	cmp	r3, #0
 8007760:	d100      	bne.n	8007764 <_vfiprintf_r+0xc8>
 8007762:	e0ac      	b.n	80078be <_vfiprintf_r+0x222>
 8007764:	2201      	movs	r2, #1
 8007766:	1c7b      	adds	r3, r7, #1
 8007768:	9303      	str	r3, [sp, #12]
 800776a:	2300      	movs	r3, #0
 800776c:	4252      	negs	r2, r2
 800776e:	606a      	str	r2, [r5, #4]
 8007770:	a904      	add	r1, sp, #16
 8007772:	3254      	adds	r2, #84	; 0x54
 8007774:	1852      	adds	r2, r2, r1
 8007776:	602b      	str	r3, [r5, #0]
 8007778:	60eb      	str	r3, [r5, #12]
 800777a:	60ab      	str	r3, [r5, #8]
 800777c:	7013      	strb	r3, [r2, #0]
 800777e:	65ab      	str	r3, [r5, #88]	; 0x58
 8007780:	9b03      	ldr	r3, [sp, #12]
 8007782:	2205      	movs	r2, #5
 8007784:	7819      	ldrb	r1, [r3, #0]
 8007786:	485d      	ldr	r0, [pc, #372]	; (80078fc <_vfiprintf_r+0x260>)
 8007788:	f7ff f89c 	bl	80068c4 <memchr>
 800778c:	9b03      	ldr	r3, [sp, #12]
 800778e:	1c5f      	adds	r7, r3, #1
 8007790:	2800      	cmp	r0, #0
 8007792:	d120      	bne.n	80077d6 <_vfiprintf_r+0x13a>
 8007794:	682a      	ldr	r2, [r5, #0]
 8007796:	06d3      	lsls	r3, r2, #27
 8007798:	d504      	bpl.n	80077a4 <_vfiprintf_r+0x108>
 800779a:	2353      	movs	r3, #83	; 0x53
 800779c:	a904      	add	r1, sp, #16
 800779e:	185b      	adds	r3, r3, r1
 80077a0:	2120      	movs	r1, #32
 80077a2:	7019      	strb	r1, [r3, #0]
 80077a4:	0713      	lsls	r3, r2, #28
 80077a6:	d504      	bpl.n	80077b2 <_vfiprintf_r+0x116>
 80077a8:	2353      	movs	r3, #83	; 0x53
 80077aa:	a904      	add	r1, sp, #16
 80077ac:	185b      	adds	r3, r3, r1
 80077ae:	212b      	movs	r1, #43	; 0x2b
 80077b0:	7019      	strb	r1, [r3, #0]
 80077b2:	9b03      	ldr	r3, [sp, #12]
 80077b4:	781b      	ldrb	r3, [r3, #0]
 80077b6:	2b2a      	cmp	r3, #42	; 0x2a
 80077b8:	d016      	beq.n	80077e8 <_vfiprintf_r+0x14c>
 80077ba:	2100      	movs	r1, #0
 80077bc:	68eb      	ldr	r3, [r5, #12]
 80077be:	9f03      	ldr	r7, [sp, #12]
 80077c0:	783a      	ldrb	r2, [r7, #0]
 80077c2:	1c78      	adds	r0, r7, #1
 80077c4:	3a30      	subs	r2, #48	; 0x30
 80077c6:	4684      	mov	ip, r0
 80077c8:	2a09      	cmp	r2, #9
 80077ca:	d94f      	bls.n	800786c <_vfiprintf_r+0x1d0>
 80077cc:	2900      	cmp	r1, #0
 80077ce:	d111      	bne.n	80077f4 <_vfiprintf_r+0x158>
 80077d0:	e017      	b.n	8007802 <_vfiprintf_r+0x166>
 80077d2:	3701      	adds	r7, #1
 80077d4:	e7a9      	b.n	800772a <_vfiprintf_r+0x8e>
 80077d6:	4b49      	ldr	r3, [pc, #292]	; (80078fc <_vfiprintf_r+0x260>)
 80077d8:	682a      	ldr	r2, [r5, #0]
 80077da:	1ac0      	subs	r0, r0, r3
 80077dc:	2301      	movs	r3, #1
 80077de:	4083      	lsls	r3, r0
 80077e0:	4313      	orrs	r3, r2
 80077e2:	602b      	str	r3, [r5, #0]
 80077e4:	9703      	str	r7, [sp, #12]
 80077e6:	e7cb      	b.n	8007780 <_vfiprintf_r+0xe4>
 80077e8:	9b07      	ldr	r3, [sp, #28]
 80077ea:	1d19      	adds	r1, r3, #4
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	9107      	str	r1, [sp, #28]
 80077f0:	2b00      	cmp	r3, #0
 80077f2:	db01      	blt.n	80077f8 <_vfiprintf_r+0x15c>
 80077f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80077f6:	e004      	b.n	8007802 <_vfiprintf_r+0x166>
 80077f8:	425b      	negs	r3, r3
 80077fa:	60eb      	str	r3, [r5, #12]
 80077fc:	2302      	movs	r3, #2
 80077fe:	4313      	orrs	r3, r2
 8007800:	602b      	str	r3, [r5, #0]
 8007802:	783b      	ldrb	r3, [r7, #0]
 8007804:	2b2e      	cmp	r3, #46	; 0x2e
 8007806:	d10a      	bne.n	800781e <_vfiprintf_r+0x182>
 8007808:	787b      	ldrb	r3, [r7, #1]
 800780a:	2b2a      	cmp	r3, #42	; 0x2a
 800780c:	d137      	bne.n	800787e <_vfiprintf_r+0x1e2>
 800780e:	9b07      	ldr	r3, [sp, #28]
 8007810:	3702      	adds	r7, #2
 8007812:	1d1a      	adds	r2, r3, #4
 8007814:	681b      	ldr	r3, [r3, #0]
 8007816:	9207      	str	r2, [sp, #28]
 8007818:	2b00      	cmp	r3, #0
 800781a:	db2d      	blt.n	8007878 <_vfiprintf_r+0x1dc>
 800781c:	9309      	str	r3, [sp, #36]	; 0x24
 800781e:	2203      	movs	r2, #3
 8007820:	7839      	ldrb	r1, [r7, #0]
 8007822:	4837      	ldr	r0, [pc, #220]	; (8007900 <_vfiprintf_r+0x264>)
 8007824:	f7ff f84e 	bl	80068c4 <memchr>
 8007828:	2800      	cmp	r0, #0
 800782a:	d007      	beq.n	800783c <_vfiprintf_r+0x1a0>
 800782c:	4b34      	ldr	r3, [pc, #208]	; (8007900 <_vfiprintf_r+0x264>)
 800782e:	682a      	ldr	r2, [r5, #0]
 8007830:	1ac0      	subs	r0, r0, r3
 8007832:	2340      	movs	r3, #64	; 0x40
 8007834:	4083      	lsls	r3, r0
 8007836:	4313      	orrs	r3, r2
 8007838:	3701      	adds	r7, #1
 800783a:	602b      	str	r3, [r5, #0]
 800783c:	7839      	ldrb	r1, [r7, #0]
 800783e:	1c7b      	adds	r3, r7, #1
 8007840:	2206      	movs	r2, #6
 8007842:	4830      	ldr	r0, [pc, #192]	; (8007904 <_vfiprintf_r+0x268>)
 8007844:	9303      	str	r3, [sp, #12]
 8007846:	7629      	strb	r1, [r5, #24]
 8007848:	f7ff f83c 	bl	80068c4 <memchr>
 800784c:	2800      	cmp	r0, #0
 800784e:	d045      	beq.n	80078dc <_vfiprintf_r+0x240>
 8007850:	4b2d      	ldr	r3, [pc, #180]	; (8007908 <_vfiprintf_r+0x26c>)
 8007852:	2b00      	cmp	r3, #0
 8007854:	d127      	bne.n	80078a6 <_vfiprintf_r+0x20a>
 8007856:	2207      	movs	r2, #7
 8007858:	9b07      	ldr	r3, [sp, #28]
 800785a:	3307      	adds	r3, #7
 800785c:	4393      	bics	r3, r2
 800785e:	3308      	adds	r3, #8
 8007860:	9307      	str	r3, [sp, #28]
 8007862:	696b      	ldr	r3, [r5, #20]
 8007864:	9a04      	ldr	r2, [sp, #16]
 8007866:	189b      	adds	r3, r3, r2
 8007868:	616b      	str	r3, [r5, #20]
 800786a:	e75d      	b.n	8007728 <_vfiprintf_r+0x8c>
 800786c:	210a      	movs	r1, #10
 800786e:	434b      	muls	r3, r1
 8007870:	4667      	mov	r7, ip
 8007872:	189b      	adds	r3, r3, r2
 8007874:	3909      	subs	r1, #9
 8007876:	e7a3      	b.n	80077c0 <_vfiprintf_r+0x124>
 8007878:	2301      	movs	r3, #1
 800787a:	425b      	negs	r3, r3
 800787c:	e7ce      	b.n	800781c <_vfiprintf_r+0x180>
 800787e:	2300      	movs	r3, #0
 8007880:	001a      	movs	r2, r3
 8007882:	3701      	adds	r7, #1
 8007884:	606b      	str	r3, [r5, #4]
 8007886:	7839      	ldrb	r1, [r7, #0]
 8007888:	1c78      	adds	r0, r7, #1
 800788a:	3930      	subs	r1, #48	; 0x30
 800788c:	4684      	mov	ip, r0
 800788e:	2909      	cmp	r1, #9
 8007890:	d903      	bls.n	800789a <_vfiprintf_r+0x1fe>
 8007892:	2b00      	cmp	r3, #0
 8007894:	d0c3      	beq.n	800781e <_vfiprintf_r+0x182>
 8007896:	9209      	str	r2, [sp, #36]	; 0x24
 8007898:	e7c1      	b.n	800781e <_vfiprintf_r+0x182>
 800789a:	230a      	movs	r3, #10
 800789c:	435a      	muls	r2, r3
 800789e:	4667      	mov	r7, ip
 80078a0:	1852      	adds	r2, r2, r1
 80078a2:	3b09      	subs	r3, #9
 80078a4:	e7ef      	b.n	8007886 <_vfiprintf_r+0x1ea>
 80078a6:	ab07      	add	r3, sp, #28
 80078a8:	9300      	str	r3, [sp, #0]
 80078aa:	0022      	movs	r2, r4
 80078ac:	0029      	movs	r1, r5
 80078ae:	0030      	movs	r0, r6
 80078b0:	4b16      	ldr	r3, [pc, #88]	; (800790c <_vfiprintf_r+0x270>)
 80078b2:	f7fd fd57 	bl	8005364 <_printf_float>
 80078b6:	9004      	str	r0, [sp, #16]
 80078b8:	9b04      	ldr	r3, [sp, #16]
 80078ba:	3301      	adds	r3, #1
 80078bc:	d1d1      	bne.n	8007862 <_vfiprintf_r+0x1c6>
 80078be:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80078c0:	07db      	lsls	r3, r3, #31
 80078c2:	d405      	bmi.n	80078d0 <_vfiprintf_r+0x234>
 80078c4:	89a3      	ldrh	r3, [r4, #12]
 80078c6:	059b      	lsls	r3, r3, #22
 80078c8:	d402      	bmi.n	80078d0 <_vfiprintf_r+0x234>
 80078ca:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80078cc:	f000 fad4 	bl	8007e78 <__retarget_lock_release_recursive>
 80078d0:	89a3      	ldrh	r3, [r4, #12]
 80078d2:	065b      	lsls	r3, r3, #25
 80078d4:	d500      	bpl.n	80078d8 <_vfiprintf_r+0x23c>
 80078d6:	e70a      	b.n	80076ee <_vfiprintf_r+0x52>
 80078d8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80078da:	e70a      	b.n	80076f2 <_vfiprintf_r+0x56>
 80078dc:	ab07      	add	r3, sp, #28
 80078de:	9300      	str	r3, [sp, #0]
 80078e0:	0022      	movs	r2, r4
 80078e2:	0029      	movs	r1, r5
 80078e4:	0030      	movs	r0, r6
 80078e6:	4b09      	ldr	r3, [pc, #36]	; (800790c <_vfiprintf_r+0x270>)
 80078e8:	f7fd ffee 	bl	80058c8 <_printf_i>
 80078ec:	e7e3      	b.n	80078b6 <_vfiprintf_r+0x21a>
 80078ee:	46c0      	nop			; (mov r8, r8)
 80078f0:	080087cc 	.word	0x080087cc
 80078f4:	080087ec 	.word	0x080087ec
 80078f8:	080087ac 	.word	0x080087ac
 80078fc:	08008654 	.word	0x08008654
 8007900:	0800865a 	.word	0x0800865a
 8007904:	0800865e 	.word	0x0800865e
 8007908:	08005365 	.word	0x08005365
 800790c:	08007679 	.word	0x08007679

08007910 <__swbuf_r>:
 8007910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007912:	0005      	movs	r5, r0
 8007914:	000e      	movs	r6, r1
 8007916:	0014      	movs	r4, r2
 8007918:	2800      	cmp	r0, #0
 800791a:	d004      	beq.n	8007926 <__swbuf_r+0x16>
 800791c:	6983      	ldr	r3, [r0, #24]
 800791e:	2b00      	cmp	r3, #0
 8007920:	d101      	bne.n	8007926 <__swbuf_r+0x16>
 8007922:	f000 fa07 	bl	8007d34 <__sinit>
 8007926:	4b22      	ldr	r3, [pc, #136]	; (80079b0 <__swbuf_r+0xa0>)
 8007928:	429c      	cmp	r4, r3
 800792a:	d12e      	bne.n	800798a <__swbuf_r+0x7a>
 800792c:	686c      	ldr	r4, [r5, #4]
 800792e:	69a3      	ldr	r3, [r4, #24]
 8007930:	60a3      	str	r3, [r4, #8]
 8007932:	89a3      	ldrh	r3, [r4, #12]
 8007934:	071b      	lsls	r3, r3, #28
 8007936:	d532      	bpl.n	800799e <__swbuf_r+0x8e>
 8007938:	6923      	ldr	r3, [r4, #16]
 800793a:	2b00      	cmp	r3, #0
 800793c:	d02f      	beq.n	800799e <__swbuf_r+0x8e>
 800793e:	6823      	ldr	r3, [r4, #0]
 8007940:	6922      	ldr	r2, [r4, #16]
 8007942:	b2f7      	uxtb	r7, r6
 8007944:	1a98      	subs	r0, r3, r2
 8007946:	6963      	ldr	r3, [r4, #20]
 8007948:	b2f6      	uxtb	r6, r6
 800794a:	4283      	cmp	r3, r0
 800794c:	dc05      	bgt.n	800795a <__swbuf_r+0x4a>
 800794e:	0021      	movs	r1, r4
 8007950:	0028      	movs	r0, r5
 8007952:	f000 f94d 	bl	8007bf0 <_fflush_r>
 8007956:	2800      	cmp	r0, #0
 8007958:	d127      	bne.n	80079aa <__swbuf_r+0x9a>
 800795a:	68a3      	ldr	r3, [r4, #8]
 800795c:	3001      	adds	r0, #1
 800795e:	3b01      	subs	r3, #1
 8007960:	60a3      	str	r3, [r4, #8]
 8007962:	6823      	ldr	r3, [r4, #0]
 8007964:	1c5a      	adds	r2, r3, #1
 8007966:	6022      	str	r2, [r4, #0]
 8007968:	701f      	strb	r7, [r3, #0]
 800796a:	6963      	ldr	r3, [r4, #20]
 800796c:	4283      	cmp	r3, r0
 800796e:	d004      	beq.n	800797a <__swbuf_r+0x6a>
 8007970:	89a3      	ldrh	r3, [r4, #12]
 8007972:	07db      	lsls	r3, r3, #31
 8007974:	d507      	bpl.n	8007986 <__swbuf_r+0x76>
 8007976:	2e0a      	cmp	r6, #10
 8007978:	d105      	bne.n	8007986 <__swbuf_r+0x76>
 800797a:	0021      	movs	r1, r4
 800797c:	0028      	movs	r0, r5
 800797e:	f000 f937 	bl	8007bf0 <_fflush_r>
 8007982:	2800      	cmp	r0, #0
 8007984:	d111      	bne.n	80079aa <__swbuf_r+0x9a>
 8007986:	0030      	movs	r0, r6
 8007988:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800798a:	4b0a      	ldr	r3, [pc, #40]	; (80079b4 <__swbuf_r+0xa4>)
 800798c:	429c      	cmp	r4, r3
 800798e:	d101      	bne.n	8007994 <__swbuf_r+0x84>
 8007990:	68ac      	ldr	r4, [r5, #8]
 8007992:	e7cc      	b.n	800792e <__swbuf_r+0x1e>
 8007994:	4b08      	ldr	r3, [pc, #32]	; (80079b8 <__swbuf_r+0xa8>)
 8007996:	429c      	cmp	r4, r3
 8007998:	d1c9      	bne.n	800792e <__swbuf_r+0x1e>
 800799a:	68ec      	ldr	r4, [r5, #12]
 800799c:	e7c7      	b.n	800792e <__swbuf_r+0x1e>
 800799e:	0021      	movs	r1, r4
 80079a0:	0028      	movs	r0, r5
 80079a2:	f000 f819 	bl	80079d8 <__swsetup_r>
 80079a6:	2800      	cmp	r0, #0
 80079a8:	d0c9      	beq.n	800793e <__swbuf_r+0x2e>
 80079aa:	2601      	movs	r6, #1
 80079ac:	4276      	negs	r6, r6
 80079ae:	e7ea      	b.n	8007986 <__swbuf_r+0x76>
 80079b0:	080087cc 	.word	0x080087cc
 80079b4:	080087ec 	.word	0x080087ec
 80079b8:	080087ac 	.word	0x080087ac

080079bc <__ascii_wctomb>:
 80079bc:	0003      	movs	r3, r0
 80079be:	1e08      	subs	r0, r1, #0
 80079c0:	d005      	beq.n	80079ce <__ascii_wctomb+0x12>
 80079c2:	2aff      	cmp	r2, #255	; 0xff
 80079c4:	d904      	bls.n	80079d0 <__ascii_wctomb+0x14>
 80079c6:	228a      	movs	r2, #138	; 0x8a
 80079c8:	2001      	movs	r0, #1
 80079ca:	601a      	str	r2, [r3, #0]
 80079cc:	4240      	negs	r0, r0
 80079ce:	4770      	bx	lr
 80079d0:	2001      	movs	r0, #1
 80079d2:	700a      	strb	r2, [r1, #0]
 80079d4:	e7fb      	b.n	80079ce <__ascii_wctomb+0x12>
	...

080079d8 <__swsetup_r>:
 80079d8:	4b37      	ldr	r3, [pc, #220]	; (8007ab8 <__swsetup_r+0xe0>)
 80079da:	b570      	push	{r4, r5, r6, lr}
 80079dc:	681d      	ldr	r5, [r3, #0]
 80079de:	0006      	movs	r6, r0
 80079e0:	000c      	movs	r4, r1
 80079e2:	2d00      	cmp	r5, #0
 80079e4:	d005      	beq.n	80079f2 <__swsetup_r+0x1a>
 80079e6:	69ab      	ldr	r3, [r5, #24]
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	d102      	bne.n	80079f2 <__swsetup_r+0x1a>
 80079ec:	0028      	movs	r0, r5
 80079ee:	f000 f9a1 	bl	8007d34 <__sinit>
 80079f2:	4b32      	ldr	r3, [pc, #200]	; (8007abc <__swsetup_r+0xe4>)
 80079f4:	429c      	cmp	r4, r3
 80079f6:	d10f      	bne.n	8007a18 <__swsetup_r+0x40>
 80079f8:	686c      	ldr	r4, [r5, #4]
 80079fa:	230c      	movs	r3, #12
 80079fc:	5ee2      	ldrsh	r2, [r4, r3]
 80079fe:	b293      	uxth	r3, r2
 8007a00:	0711      	lsls	r1, r2, #28
 8007a02:	d42d      	bmi.n	8007a60 <__swsetup_r+0x88>
 8007a04:	06d9      	lsls	r1, r3, #27
 8007a06:	d411      	bmi.n	8007a2c <__swsetup_r+0x54>
 8007a08:	2309      	movs	r3, #9
 8007a0a:	2001      	movs	r0, #1
 8007a0c:	6033      	str	r3, [r6, #0]
 8007a0e:	3337      	adds	r3, #55	; 0x37
 8007a10:	4313      	orrs	r3, r2
 8007a12:	81a3      	strh	r3, [r4, #12]
 8007a14:	4240      	negs	r0, r0
 8007a16:	bd70      	pop	{r4, r5, r6, pc}
 8007a18:	4b29      	ldr	r3, [pc, #164]	; (8007ac0 <__swsetup_r+0xe8>)
 8007a1a:	429c      	cmp	r4, r3
 8007a1c:	d101      	bne.n	8007a22 <__swsetup_r+0x4a>
 8007a1e:	68ac      	ldr	r4, [r5, #8]
 8007a20:	e7eb      	b.n	80079fa <__swsetup_r+0x22>
 8007a22:	4b28      	ldr	r3, [pc, #160]	; (8007ac4 <__swsetup_r+0xec>)
 8007a24:	429c      	cmp	r4, r3
 8007a26:	d1e8      	bne.n	80079fa <__swsetup_r+0x22>
 8007a28:	68ec      	ldr	r4, [r5, #12]
 8007a2a:	e7e6      	b.n	80079fa <__swsetup_r+0x22>
 8007a2c:	075b      	lsls	r3, r3, #29
 8007a2e:	d513      	bpl.n	8007a58 <__swsetup_r+0x80>
 8007a30:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007a32:	2900      	cmp	r1, #0
 8007a34:	d008      	beq.n	8007a48 <__swsetup_r+0x70>
 8007a36:	0023      	movs	r3, r4
 8007a38:	3344      	adds	r3, #68	; 0x44
 8007a3a:	4299      	cmp	r1, r3
 8007a3c:	d002      	beq.n	8007a44 <__swsetup_r+0x6c>
 8007a3e:	0030      	movs	r0, r6
 8007a40:	f7ff fb1c 	bl	800707c <_free_r>
 8007a44:	2300      	movs	r3, #0
 8007a46:	6363      	str	r3, [r4, #52]	; 0x34
 8007a48:	2224      	movs	r2, #36	; 0x24
 8007a4a:	89a3      	ldrh	r3, [r4, #12]
 8007a4c:	4393      	bics	r3, r2
 8007a4e:	81a3      	strh	r3, [r4, #12]
 8007a50:	2300      	movs	r3, #0
 8007a52:	6063      	str	r3, [r4, #4]
 8007a54:	6923      	ldr	r3, [r4, #16]
 8007a56:	6023      	str	r3, [r4, #0]
 8007a58:	2308      	movs	r3, #8
 8007a5a:	89a2      	ldrh	r2, [r4, #12]
 8007a5c:	4313      	orrs	r3, r2
 8007a5e:	81a3      	strh	r3, [r4, #12]
 8007a60:	6923      	ldr	r3, [r4, #16]
 8007a62:	2b00      	cmp	r3, #0
 8007a64:	d10b      	bne.n	8007a7e <__swsetup_r+0xa6>
 8007a66:	21a0      	movs	r1, #160	; 0xa0
 8007a68:	2280      	movs	r2, #128	; 0x80
 8007a6a:	89a3      	ldrh	r3, [r4, #12]
 8007a6c:	0089      	lsls	r1, r1, #2
 8007a6e:	0092      	lsls	r2, r2, #2
 8007a70:	400b      	ands	r3, r1
 8007a72:	4293      	cmp	r3, r2
 8007a74:	d003      	beq.n	8007a7e <__swsetup_r+0xa6>
 8007a76:	0021      	movs	r1, r4
 8007a78:	0030      	movs	r0, r6
 8007a7a:	f000 fa27 	bl	8007ecc <__smakebuf_r>
 8007a7e:	220c      	movs	r2, #12
 8007a80:	5ea3      	ldrsh	r3, [r4, r2]
 8007a82:	2001      	movs	r0, #1
 8007a84:	001a      	movs	r2, r3
 8007a86:	b299      	uxth	r1, r3
 8007a88:	4002      	ands	r2, r0
 8007a8a:	4203      	tst	r3, r0
 8007a8c:	d00f      	beq.n	8007aae <__swsetup_r+0xd6>
 8007a8e:	2200      	movs	r2, #0
 8007a90:	60a2      	str	r2, [r4, #8]
 8007a92:	6962      	ldr	r2, [r4, #20]
 8007a94:	4252      	negs	r2, r2
 8007a96:	61a2      	str	r2, [r4, #24]
 8007a98:	2000      	movs	r0, #0
 8007a9a:	6922      	ldr	r2, [r4, #16]
 8007a9c:	4282      	cmp	r2, r0
 8007a9e:	d1ba      	bne.n	8007a16 <__swsetup_r+0x3e>
 8007aa0:	060a      	lsls	r2, r1, #24
 8007aa2:	d5b8      	bpl.n	8007a16 <__swsetup_r+0x3e>
 8007aa4:	2240      	movs	r2, #64	; 0x40
 8007aa6:	4313      	orrs	r3, r2
 8007aa8:	81a3      	strh	r3, [r4, #12]
 8007aaa:	3801      	subs	r0, #1
 8007aac:	e7b3      	b.n	8007a16 <__swsetup_r+0x3e>
 8007aae:	0788      	lsls	r0, r1, #30
 8007ab0:	d400      	bmi.n	8007ab4 <__swsetup_r+0xdc>
 8007ab2:	6962      	ldr	r2, [r4, #20]
 8007ab4:	60a2      	str	r2, [r4, #8]
 8007ab6:	e7ef      	b.n	8007a98 <__swsetup_r+0xc0>
 8007ab8:	2000004c 	.word	0x2000004c
 8007abc:	080087cc 	.word	0x080087cc
 8007ac0:	080087ec 	.word	0x080087ec
 8007ac4:	080087ac 	.word	0x080087ac

08007ac8 <abort>:
 8007ac8:	2006      	movs	r0, #6
 8007aca:	b510      	push	{r4, lr}
 8007acc:	f000 fa74 	bl	8007fb8 <raise>
 8007ad0:	2001      	movs	r0, #1
 8007ad2:	f7fb fb00 	bl	80030d6 <_exit>
	...

08007ad8 <__sflush_r>:
 8007ad8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ada:	898b      	ldrh	r3, [r1, #12]
 8007adc:	0005      	movs	r5, r0
 8007ade:	000c      	movs	r4, r1
 8007ae0:	071a      	lsls	r2, r3, #28
 8007ae2:	d45f      	bmi.n	8007ba4 <__sflush_r+0xcc>
 8007ae4:	684a      	ldr	r2, [r1, #4]
 8007ae6:	2a00      	cmp	r2, #0
 8007ae8:	dc04      	bgt.n	8007af4 <__sflush_r+0x1c>
 8007aea:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8007aec:	2a00      	cmp	r2, #0
 8007aee:	dc01      	bgt.n	8007af4 <__sflush_r+0x1c>
 8007af0:	2000      	movs	r0, #0
 8007af2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007af4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8007af6:	2f00      	cmp	r7, #0
 8007af8:	d0fa      	beq.n	8007af0 <__sflush_r+0x18>
 8007afa:	2200      	movs	r2, #0
 8007afc:	2180      	movs	r1, #128	; 0x80
 8007afe:	682e      	ldr	r6, [r5, #0]
 8007b00:	602a      	str	r2, [r5, #0]
 8007b02:	001a      	movs	r2, r3
 8007b04:	0149      	lsls	r1, r1, #5
 8007b06:	400a      	ands	r2, r1
 8007b08:	420b      	tst	r3, r1
 8007b0a:	d034      	beq.n	8007b76 <__sflush_r+0x9e>
 8007b0c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007b0e:	89a3      	ldrh	r3, [r4, #12]
 8007b10:	075b      	lsls	r3, r3, #29
 8007b12:	d506      	bpl.n	8007b22 <__sflush_r+0x4a>
 8007b14:	6863      	ldr	r3, [r4, #4]
 8007b16:	1ac0      	subs	r0, r0, r3
 8007b18:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007b1a:	2b00      	cmp	r3, #0
 8007b1c:	d001      	beq.n	8007b22 <__sflush_r+0x4a>
 8007b1e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007b20:	1ac0      	subs	r0, r0, r3
 8007b22:	0002      	movs	r2, r0
 8007b24:	6a21      	ldr	r1, [r4, #32]
 8007b26:	2300      	movs	r3, #0
 8007b28:	0028      	movs	r0, r5
 8007b2a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8007b2c:	47b8      	blx	r7
 8007b2e:	89a1      	ldrh	r1, [r4, #12]
 8007b30:	1c43      	adds	r3, r0, #1
 8007b32:	d106      	bne.n	8007b42 <__sflush_r+0x6a>
 8007b34:	682b      	ldr	r3, [r5, #0]
 8007b36:	2b1d      	cmp	r3, #29
 8007b38:	d831      	bhi.n	8007b9e <__sflush_r+0xc6>
 8007b3a:	4a2c      	ldr	r2, [pc, #176]	; (8007bec <__sflush_r+0x114>)
 8007b3c:	40da      	lsrs	r2, r3
 8007b3e:	07d3      	lsls	r3, r2, #31
 8007b40:	d52d      	bpl.n	8007b9e <__sflush_r+0xc6>
 8007b42:	2300      	movs	r3, #0
 8007b44:	6063      	str	r3, [r4, #4]
 8007b46:	6923      	ldr	r3, [r4, #16]
 8007b48:	6023      	str	r3, [r4, #0]
 8007b4a:	04cb      	lsls	r3, r1, #19
 8007b4c:	d505      	bpl.n	8007b5a <__sflush_r+0x82>
 8007b4e:	1c43      	adds	r3, r0, #1
 8007b50:	d102      	bne.n	8007b58 <__sflush_r+0x80>
 8007b52:	682b      	ldr	r3, [r5, #0]
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	d100      	bne.n	8007b5a <__sflush_r+0x82>
 8007b58:	6560      	str	r0, [r4, #84]	; 0x54
 8007b5a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007b5c:	602e      	str	r6, [r5, #0]
 8007b5e:	2900      	cmp	r1, #0
 8007b60:	d0c6      	beq.n	8007af0 <__sflush_r+0x18>
 8007b62:	0023      	movs	r3, r4
 8007b64:	3344      	adds	r3, #68	; 0x44
 8007b66:	4299      	cmp	r1, r3
 8007b68:	d002      	beq.n	8007b70 <__sflush_r+0x98>
 8007b6a:	0028      	movs	r0, r5
 8007b6c:	f7ff fa86 	bl	800707c <_free_r>
 8007b70:	2000      	movs	r0, #0
 8007b72:	6360      	str	r0, [r4, #52]	; 0x34
 8007b74:	e7bd      	b.n	8007af2 <__sflush_r+0x1a>
 8007b76:	2301      	movs	r3, #1
 8007b78:	0028      	movs	r0, r5
 8007b7a:	6a21      	ldr	r1, [r4, #32]
 8007b7c:	47b8      	blx	r7
 8007b7e:	1c43      	adds	r3, r0, #1
 8007b80:	d1c5      	bne.n	8007b0e <__sflush_r+0x36>
 8007b82:	682b      	ldr	r3, [r5, #0]
 8007b84:	2b00      	cmp	r3, #0
 8007b86:	d0c2      	beq.n	8007b0e <__sflush_r+0x36>
 8007b88:	2b1d      	cmp	r3, #29
 8007b8a:	d001      	beq.n	8007b90 <__sflush_r+0xb8>
 8007b8c:	2b16      	cmp	r3, #22
 8007b8e:	d101      	bne.n	8007b94 <__sflush_r+0xbc>
 8007b90:	602e      	str	r6, [r5, #0]
 8007b92:	e7ad      	b.n	8007af0 <__sflush_r+0x18>
 8007b94:	2340      	movs	r3, #64	; 0x40
 8007b96:	89a2      	ldrh	r2, [r4, #12]
 8007b98:	4313      	orrs	r3, r2
 8007b9a:	81a3      	strh	r3, [r4, #12]
 8007b9c:	e7a9      	b.n	8007af2 <__sflush_r+0x1a>
 8007b9e:	2340      	movs	r3, #64	; 0x40
 8007ba0:	430b      	orrs	r3, r1
 8007ba2:	e7fa      	b.n	8007b9a <__sflush_r+0xc2>
 8007ba4:	690f      	ldr	r7, [r1, #16]
 8007ba6:	2f00      	cmp	r7, #0
 8007ba8:	d0a2      	beq.n	8007af0 <__sflush_r+0x18>
 8007baa:	680a      	ldr	r2, [r1, #0]
 8007bac:	600f      	str	r7, [r1, #0]
 8007bae:	1bd2      	subs	r2, r2, r7
 8007bb0:	9201      	str	r2, [sp, #4]
 8007bb2:	2200      	movs	r2, #0
 8007bb4:	079b      	lsls	r3, r3, #30
 8007bb6:	d100      	bne.n	8007bba <__sflush_r+0xe2>
 8007bb8:	694a      	ldr	r2, [r1, #20]
 8007bba:	60a2      	str	r2, [r4, #8]
 8007bbc:	9b01      	ldr	r3, [sp, #4]
 8007bbe:	2b00      	cmp	r3, #0
 8007bc0:	dc00      	bgt.n	8007bc4 <__sflush_r+0xec>
 8007bc2:	e795      	b.n	8007af0 <__sflush_r+0x18>
 8007bc4:	003a      	movs	r2, r7
 8007bc6:	0028      	movs	r0, r5
 8007bc8:	9b01      	ldr	r3, [sp, #4]
 8007bca:	6a21      	ldr	r1, [r4, #32]
 8007bcc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8007bce:	47b0      	blx	r6
 8007bd0:	2800      	cmp	r0, #0
 8007bd2:	dc06      	bgt.n	8007be2 <__sflush_r+0x10a>
 8007bd4:	2340      	movs	r3, #64	; 0x40
 8007bd6:	2001      	movs	r0, #1
 8007bd8:	89a2      	ldrh	r2, [r4, #12]
 8007bda:	4240      	negs	r0, r0
 8007bdc:	4313      	orrs	r3, r2
 8007bde:	81a3      	strh	r3, [r4, #12]
 8007be0:	e787      	b.n	8007af2 <__sflush_r+0x1a>
 8007be2:	9b01      	ldr	r3, [sp, #4]
 8007be4:	183f      	adds	r7, r7, r0
 8007be6:	1a1b      	subs	r3, r3, r0
 8007be8:	9301      	str	r3, [sp, #4]
 8007bea:	e7e7      	b.n	8007bbc <__sflush_r+0xe4>
 8007bec:	20400001 	.word	0x20400001

08007bf0 <_fflush_r>:
 8007bf0:	690b      	ldr	r3, [r1, #16]
 8007bf2:	b570      	push	{r4, r5, r6, lr}
 8007bf4:	0005      	movs	r5, r0
 8007bf6:	000c      	movs	r4, r1
 8007bf8:	2b00      	cmp	r3, #0
 8007bfa:	d102      	bne.n	8007c02 <_fflush_r+0x12>
 8007bfc:	2500      	movs	r5, #0
 8007bfe:	0028      	movs	r0, r5
 8007c00:	bd70      	pop	{r4, r5, r6, pc}
 8007c02:	2800      	cmp	r0, #0
 8007c04:	d004      	beq.n	8007c10 <_fflush_r+0x20>
 8007c06:	6983      	ldr	r3, [r0, #24]
 8007c08:	2b00      	cmp	r3, #0
 8007c0a:	d101      	bne.n	8007c10 <_fflush_r+0x20>
 8007c0c:	f000 f892 	bl	8007d34 <__sinit>
 8007c10:	4b14      	ldr	r3, [pc, #80]	; (8007c64 <_fflush_r+0x74>)
 8007c12:	429c      	cmp	r4, r3
 8007c14:	d11b      	bne.n	8007c4e <_fflush_r+0x5e>
 8007c16:	686c      	ldr	r4, [r5, #4]
 8007c18:	220c      	movs	r2, #12
 8007c1a:	5ea3      	ldrsh	r3, [r4, r2]
 8007c1c:	2b00      	cmp	r3, #0
 8007c1e:	d0ed      	beq.n	8007bfc <_fflush_r+0xc>
 8007c20:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8007c22:	07d2      	lsls	r2, r2, #31
 8007c24:	d404      	bmi.n	8007c30 <_fflush_r+0x40>
 8007c26:	059b      	lsls	r3, r3, #22
 8007c28:	d402      	bmi.n	8007c30 <_fflush_r+0x40>
 8007c2a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007c2c:	f000 f923 	bl	8007e76 <__retarget_lock_acquire_recursive>
 8007c30:	0028      	movs	r0, r5
 8007c32:	0021      	movs	r1, r4
 8007c34:	f7ff ff50 	bl	8007ad8 <__sflush_r>
 8007c38:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007c3a:	0005      	movs	r5, r0
 8007c3c:	07db      	lsls	r3, r3, #31
 8007c3e:	d4de      	bmi.n	8007bfe <_fflush_r+0xe>
 8007c40:	89a3      	ldrh	r3, [r4, #12]
 8007c42:	059b      	lsls	r3, r3, #22
 8007c44:	d4db      	bmi.n	8007bfe <_fflush_r+0xe>
 8007c46:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007c48:	f000 f916 	bl	8007e78 <__retarget_lock_release_recursive>
 8007c4c:	e7d7      	b.n	8007bfe <_fflush_r+0xe>
 8007c4e:	4b06      	ldr	r3, [pc, #24]	; (8007c68 <_fflush_r+0x78>)
 8007c50:	429c      	cmp	r4, r3
 8007c52:	d101      	bne.n	8007c58 <_fflush_r+0x68>
 8007c54:	68ac      	ldr	r4, [r5, #8]
 8007c56:	e7df      	b.n	8007c18 <_fflush_r+0x28>
 8007c58:	4b04      	ldr	r3, [pc, #16]	; (8007c6c <_fflush_r+0x7c>)
 8007c5a:	429c      	cmp	r4, r3
 8007c5c:	d1dc      	bne.n	8007c18 <_fflush_r+0x28>
 8007c5e:	68ec      	ldr	r4, [r5, #12]
 8007c60:	e7da      	b.n	8007c18 <_fflush_r+0x28>
 8007c62:	46c0      	nop			; (mov r8, r8)
 8007c64:	080087cc 	.word	0x080087cc
 8007c68:	080087ec 	.word	0x080087ec
 8007c6c:	080087ac 	.word	0x080087ac

08007c70 <std>:
 8007c70:	2300      	movs	r3, #0
 8007c72:	b510      	push	{r4, lr}
 8007c74:	0004      	movs	r4, r0
 8007c76:	6003      	str	r3, [r0, #0]
 8007c78:	6043      	str	r3, [r0, #4]
 8007c7a:	6083      	str	r3, [r0, #8]
 8007c7c:	8181      	strh	r1, [r0, #12]
 8007c7e:	6643      	str	r3, [r0, #100]	; 0x64
 8007c80:	0019      	movs	r1, r3
 8007c82:	81c2      	strh	r2, [r0, #14]
 8007c84:	6103      	str	r3, [r0, #16]
 8007c86:	6143      	str	r3, [r0, #20]
 8007c88:	6183      	str	r3, [r0, #24]
 8007c8a:	2208      	movs	r2, #8
 8007c8c:	305c      	adds	r0, #92	; 0x5c
 8007c8e:	f7fd fab7 	bl	8005200 <memset>
 8007c92:	4b05      	ldr	r3, [pc, #20]	; (8007ca8 <std+0x38>)
 8007c94:	6224      	str	r4, [r4, #32]
 8007c96:	6263      	str	r3, [r4, #36]	; 0x24
 8007c98:	4b04      	ldr	r3, [pc, #16]	; (8007cac <std+0x3c>)
 8007c9a:	62a3      	str	r3, [r4, #40]	; 0x28
 8007c9c:	4b04      	ldr	r3, [pc, #16]	; (8007cb0 <std+0x40>)
 8007c9e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007ca0:	4b04      	ldr	r3, [pc, #16]	; (8007cb4 <std+0x44>)
 8007ca2:	6323      	str	r3, [r4, #48]	; 0x30
 8007ca4:	bd10      	pop	{r4, pc}
 8007ca6:	46c0      	nop			; (mov r8, r8)
 8007ca8:	08007ff9 	.word	0x08007ff9
 8007cac:	08008021 	.word	0x08008021
 8007cb0:	08008059 	.word	0x08008059
 8007cb4:	08008085 	.word	0x08008085

08007cb8 <_cleanup_r>:
 8007cb8:	b510      	push	{r4, lr}
 8007cba:	4902      	ldr	r1, [pc, #8]	; (8007cc4 <_cleanup_r+0xc>)
 8007cbc:	f000 f8ba 	bl	8007e34 <_fwalk_reent>
 8007cc0:	bd10      	pop	{r4, pc}
 8007cc2:	46c0      	nop			; (mov r8, r8)
 8007cc4:	08007bf1 	.word	0x08007bf1

08007cc8 <__sfmoreglue>:
 8007cc8:	b570      	push	{r4, r5, r6, lr}
 8007cca:	2568      	movs	r5, #104	; 0x68
 8007ccc:	1e4a      	subs	r2, r1, #1
 8007cce:	4355      	muls	r5, r2
 8007cd0:	000e      	movs	r6, r1
 8007cd2:	0029      	movs	r1, r5
 8007cd4:	3174      	adds	r1, #116	; 0x74
 8007cd6:	f7ff fa3d 	bl	8007154 <_malloc_r>
 8007cda:	1e04      	subs	r4, r0, #0
 8007cdc:	d008      	beq.n	8007cf0 <__sfmoreglue+0x28>
 8007cde:	2100      	movs	r1, #0
 8007ce0:	002a      	movs	r2, r5
 8007ce2:	6001      	str	r1, [r0, #0]
 8007ce4:	6046      	str	r6, [r0, #4]
 8007ce6:	300c      	adds	r0, #12
 8007ce8:	60a0      	str	r0, [r4, #8]
 8007cea:	3268      	adds	r2, #104	; 0x68
 8007cec:	f7fd fa88 	bl	8005200 <memset>
 8007cf0:	0020      	movs	r0, r4
 8007cf2:	bd70      	pop	{r4, r5, r6, pc}

08007cf4 <__sfp_lock_acquire>:
 8007cf4:	b510      	push	{r4, lr}
 8007cf6:	4802      	ldr	r0, [pc, #8]	; (8007d00 <__sfp_lock_acquire+0xc>)
 8007cf8:	f000 f8bd 	bl	8007e76 <__retarget_lock_acquire_recursive>
 8007cfc:	bd10      	pop	{r4, pc}
 8007cfe:	46c0      	nop			; (mov r8, r8)
 8007d00:	20000389 	.word	0x20000389

08007d04 <__sfp_lock_release>:
 8007d04:	b510      	push	{r4, lr}
 8007d06:	4802      	ldr	r0, [pc, #8]	; (8007d10 <__sfp_lock_release+0xc>)
 8007d08:	f000 f8b6 	bl	8007e78 <__retarget_lock_release_recursive>
 8007d0c:	bd10      	pop	{r4, pc}
 8007d0e:	46c0      	nop			; (mov r8, r8)
 8007d10:	20000389 	.word	0x20000389

08007d14 <__sinit_lock_acquire>:
 8007d14:	b510      	push	{r4, lr}
 8007d16:	4802      	ldr	r0, [pc, #8]	; (8007d20 <__sinit_lock_acquire+0xc>)
 8007d18:	f000 f8ad 	bl	8007e76 <__retarget_lock_acquire_recursive>
 8007d1c:	bd10      	pop	{r4, pc}
 8007d1e:	46c0      	nop			; (mov r8, r8)
 8007d20:	2000038a 	.word	0x2000038a

08007d24 <__sinit_lock_release>:
 8007d24:	b510      	push	{r4, lr}
 8007d26:	4802      	ldr	r0, [pc, #8]	; (8007d30 <__sinit_lock_release+0xc>)
 8007d28:	f000 f8a6 	bl	8007e78 <__retarget_lock_release_recursive>
 8007d2c:	bd10      	pop	{r4, pc}
 8007d2e:	46c0      	nop			; (mov r8, r8)
 8007d30:	2000038a 	.word	0x2000038a

08007d34 <__sinit>:
 8007d34:	b513      	push	{r0, r1, r4, lr}
 8007d36:	0004      	movs	r4, r0
 8007d38:	f7ff ffec 	bl	8007d14 <__sinit_lock_acquire>
 8007d3c:	69a3      	ldr	r3, [r4, #24]
 8007d3e:	2b00      	cmp	r3, #0
 8007d40:	d002      	beq.n	8007d48 <__sinit+0x14>
 8007d42:	f7ff ffef 	bl	8007d24 <__sinit_lock_release>
 8007d46:	bd13      	pop	{r0, r1, r4, pc}
 8007d48:	64a3      	str	r3, [r4, #72]	; 0x48
 8007d4a:	64e3      	str	r3, [r4, #76]	; 0x4c
 8007d4c:	6523      	str	r3, [r4, #80]	; 0x50
 8007d4e:	4b13      	ldr	r3, [pc, #76]	; (8007d9c <__sinit+0x68>)
 8007d50:	4a13      	ldr	r2, [pc, #76]	; (8007da0 <__sinit+0x6c>)
 8007d52:	681b      	ldr	r3, [r3, #0]
 8007d54:	62a2      	str	r2, [r4, #40]	; 0x28
 8007d56:	9301      	str	r3, [sp, #4]
 8007d58:	42a3      	cmp	r3, r4
 8007d5a:	d101      	bne.n	8007d60 <__sinit+0x2c>
 8007d5c:	2301      	movs	r3, #1
 8007d5e:	61a3      	str	r3, [r4, #24]
 8007d60:	0020      	movs	r0, r4
 8007d62:	f000 f81f 	bl	8007da4 <__sfp>
 8007d66:	6060      	str	r0, [r4, #4]
 8007d68:	0020      	movs	r0, r4
 8007d6a:	f000 f81b 	bl	8007da4 <__sfp>
 8007d6e:	60a0      	str	r0, [r4, #8]
 8007d70:	0020      	movs	r0, r4
 8007d72:	f000 f817 	bl	8007da4 <__sfp>
 8007d76:	2200      	movs	r2, #0
 8007d78:	2104      	movs	r1, #4
 8007d7a:	60e0      	str	r0, [r4, #12]
 8007d7c:	6860      	ldr	r0, [r4, #4]
 8007d7e:	f7ff ff77 	bl	8007c70 <std>
 8007d82:	2201      	movs	r2, #1
 8007d84:	2109      	movs	r1, #9
 8007d86:	68a0      	ldr	r0, [r4, #8]
 8007d88:	f7ff ff72 	bl	8007c70 <std>
 8007d8c:	2202      	movs	r2, #2
 8007d8e:	2112      	movs	r1, #18
 8007d90:	68e0      	ldr	r0, [r4, #12]
 8007d92:	f7ff ff6d 	bl	8007c70 <std>
 8007d96:	2301      	movs	r3, #1
 8007d98:	61a3      	str	r3, [r4, #24]
 8007d9a:	e7d2      	b.n	8007d42 <__sinit+0xe>
 8007d9c:	08008430 	.word	0x08008430
 8007da0:	08007cb9 	.word	0x08007cb9

08007da4 <__sfp>:
 8007da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007da6:	0007      	movs	r7, r0
 8007da8:	f7ff ffa4 	bl	8007cf4 <__sfp_lock_acquire>
 8007dac:	4b1f      	ldr	r3, [pc, #124]	; (8007e2c <__sfp+0x88>)
 8007dae:	681e      	ldr	r6, [r3, #0]
 8007db0:	69b3      	ldr	r3, [r6, #24]
 8007db2:	2b00      	cmp	r3, #0
 8007db4:	d102      	bne.n	8007dbc <__sfp+0x18>
 8007db6:	0030      	movs	r0, r6
 8007db8:	f7ff ffbc 	bl	8007d34 <__sinit>
 8007dbc:	3648      	adds	r6, #72	; 0x48
 8007dbe:	68b4      	ldr	r4, [r6, #8]
 8007dc0:	6873      	ldr	r3, [r6, #4]
 8007dc2:	3b01      	subs	r3, #1
 8007dc4:	d504      	bpl.n	8007dd0 <__sfp+0x2c>
 8007dc6:	6833      	ldr	r3, [r6, #0]
 8007dc8:	2b00      	cmp	r3, #0
 8007dca:	d022      	beq.n	8007e12 <__sfp+0x6e>
 8007dcc:	6836      	ldr	r6, [r6, #0]
 8007dce:	e7f6      	b.n	8007dbe <__sfp+0x1a>
 8007dd0:	220c      	movs	r2, #12
 8007dd2:	5ea5      	ldrsh	r5, [r4, r2]
 8007dd4:	2d00      	cmp	r5, #0
 8007dd6:	d11a      	bne.n	8007e0e <__sfp+0x6a>
 8007dd8:	0020      	movs	r0, r4
 8007dda:	4b15      	ldr	r3, [pc, #84]	; (8007e30 <__sfp+0x8c>)
 8007ddc:	3058      	adds	r0, #88	; 0x58
 8007dde:	60e3      	str	r3, [r4, #12]
 8007de0:	6665      	str	r5, [r4, #100]	; 0x64
 8007de2:	f000 f847 	bl	8007e74 <__retarget_lock_init_recursive>
 8007de6:	f7ff ff8d 	bl	8007d04 <__sfp_lock_release>
 8007dea:	0020      	movs	r0, r4
 8007dec:	2208      	movs	r2, #8
 8007dee:	0029      	movs	r1, r5
 8007df0:	6025      	str	r5, [r4, #0]
 8007df2:	60a5      	str	r5, [r4, #8]
 8007df4:	6065      	str	r5, [r4, #4]
 8007df6:	6125      	str	r5, [r4, #16]
 8007df8:	6165      	str	r5, [r4, #20]
 8007dfa:	61a5      	str	r5, [r4, #24]
 8007dfc:	305c      	adds	r0, #92	; 0x5c
 8007dfe:	f7fd f9ff 	bl	8005200 <memset>
 8007e02:	6365      	str	r5, [r4, #52]	; 0x34
 8007e04:	63a5      	str	r5, [r4, #56]	; 0x38
 8007e06:	64a5      	str	r5, [r4, #72]	; 0x48
 8007e08:	64e5      	str	r5, [r4, #76]	; 0x4c
 8007e0a:	0020      	movs	r0, r4
 8007e0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007e0e:	3468      	adds	r4, #104	; 0x68
 8007e10:	e7d7      	b.n	8007dc2 <__sfp+0x1e>
 8007e12:	2104      	movs	r1, #4
 8007e14:	0038      	movs	r0, r7
 8007e16:	f7ff ff57 	bl	8007cc8 <__sfmoreglue>
 8007e1a:	1e04      	subs	r4, r0, #0
 8007e1c:	6030      	str	r0, [r6, #0]
 8007e1e:	d1d5      	bne.n	8007dcc <__sfp+0x28>
 8007e20:	f7ff ff70 	bl	8007d04 <__sfp_lock_release>
 8007e24:	230c      	movs	r3, #12
 8007e26:	603b      	str	r3, [r7, #0]
 8007e28:	e7ef      	b.n	8007e0a <__sfp+0x66>
 8007e2a:	46c0      	nop			; (mov r8, r8)
 8007e2c:	08008430 	.word	0x08008430
 8007e30:	ffff0001 	.word	0xffff0001

08007e34 <_fwalk_reent>:
 8007e34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e36:	0004      	movs	r4, r0
 8007e38:	0006      	movs	r6, r0
 8007e3a:	2700      	movs	r7, #0
 8007e3c:	9101      	str	r1, [sp, #4]
 8007e3e:	3448      	adds	r4, #72	; 0x48
 8007e40:	6863      	ldr	r3, [r4, #4]
 8007e42:	68a5      	ldr	r5, [r4, #8]
 8007e44:	9300      	str	r3, [sp, #0]
 8007e46:	9b00      	ldr	r3, [sp, #0]
 8007e48:	3b01      	subs	r3, #1
 8007e4a:	9300      	str	r3, [sp, #0]
 8007e4c:	d504      	bpl.n	8007e58 <_fwalk_reent+0x24>
 8007e4e:	6824      	ldr	r4, [r4, #0]
 8007e50:	2c00      	cmp	r4, #0
 8007e52:	d1f5      	bne.n	8007e40 <_fwalk_reent+0xc>
 8007e54:	0038      	movs	r0, r7
 8007e56:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007e58:	89ab      	ldrh	r3, [r5, #12]
 8007e5a:	2b01      	cmp	r3, #1
 8007e5c:	d908      	bls.n	8007e70 <_fwalk_reent+0x3c>
 8007e5e:	220e      	movs	r2, #14
 8007e60:	5eab      	ldrsh	r3, [r5, r2]
 8007e62:	3301      	adds	r3, #1
 8007e64:	d004      	beq.n	8007e70 <_fwalk_reent+0x3c>
 8007e66:	0029      	movs	r1, r5
 8007e68:	0030      	movs	r0, r6
 8007e6a:	9b01      	ldr	r3, [sp, #4]
 8007e6c:	4798      	blx	r3
 8007e6e:	4307      	orrs	r7, r0
 8007e70:	3568      	adds	r5, #104	; 0x68
 8007e72:	e7e8      	b.n	8007e46 <_fwalk_reent+0x12>

08007e74 <__retarget_lock_init_recursive>:
 8007e74:	4770      	bx	lr

08007e76 <__retarget_lock_acquire_recursive>:
 8007e76:	4770      	bx	lr

08007e78 <__retarget_lock_release_recursive>:
 8007e78:	4770      	bx	lr
	...

08007e7c <__swhatbuf_r>:
 8007e7c:	b570      	push	{r4, r5, r6, lr}
 8007e7e:	000e      	movs	r6, r1
 8007e80:	001d      	movs	r5, r3
 8007e82:	230e      	movs	r3, #14
 8007e84:	5ec9      	ldrsh	r1, [r1, r3]
 8007e86:	0014      	movs	r4, r2
 8007e88:	b096      	sub	sp, #88	; 0x58
 8007e8a:	2900      	cmp	r1, #0
 8007e8c:	da08      	bge.n	8007ea0 <__swhatbuf_r+0x24>
 8007e8e:	220c      	movs	r2, #12
 8007e90:	5eb3      	ldrsh	r3, [r6, r2]
 8007e92:	2200      	movs	r2, #0
 8007e94:	602a      	str	r2, [r5, #0]
 8007e96:	061b      	lsls	r3, r3, #24
 8007e98:	d411      	bmi.n	8007ebe <__swhatbuf_r+0x42>
 8007e9a:	2380      	movs	r3, #128	; 0x80
 8007e9c:	00db      	lsls	r3, r3, #3
 8007e9e:	e00f      	b.n	8007ec0 <__swhatbuf_r+0x44>
 8007ea0:	466a      	mov	r2, sp
 8007ea2:	f000 f91b 	bl	80080dc <_fstat_r>
 8007ea6:	2800      	cmp	r0, #0
 8007ea8:	dbf1      	blt.n	8007e8e <__swhatbuf_r+0x12>
 8007eaa:	23f0      	movs	r3, #240	; 0xf0
 8007eac:	9901      	ldr	r1, [sp, #4]
 8007eae:	021b      	lsls	r3, r3, #8
 8007eb0:	4019      	ands	r1, r3
 8007eb2:	4b05      	ldr	r3, [pc, #20]	; (8007ec8 <__swhatbuf_r+0x4c>)
 8007eb4:	18c9      	adds	r1, r1, r3
 8007eb6:	424b      	negs	r3, r1
 8007eb8:	4159      	adcs	r1, r3
 8007eba:	6029      	str	r1, [r5, #0]
 8007ebc:	e7ed      	b.n	8007e9a <__swhatbuf_r+0x1e>
 8007ebe:	2340      	movs	r3, #64	; 0x40
 8007ec0:	2000      	movs	r0, #0
 8007ec2:	6023      	str	r3, [r4, #0]
 8007ec4:	b016      	add	sp, #88	; 0x58
 8007ec6:	bd70      	pop	{r4, r5, r6, pc}
 8007ec8:	ffffe000 	.word	0xffffe000

08007ecc <__smakebuf_r>:
 8007ecc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ece:	2602      	movs	r6, #2
 8007ed0:	898b      	ldrh	r3, [r1, #12]
 8007ed2:	0005      	movs	r5, r0
 8007ed4:	000c      	movs	r4, r1
 8007ed6:	4233      	tst	r3, r6
 8007ed8:	d006      	beq.n	8007ee8 <__smakebuf_r+0x1c>
 8007eda:	0023      	movs	r3, r4
 8007edc:	3347      	adds	r3, #71	; 0x47
 8007ede:	6023      	str	r3, [r4, #0]
 8007ee0:	6123      	str	r3, [r4, #16]
 8007ee2:	2301      	movs	r3, #1
 8007ee4:	6163      	str	r3, [r4, #20]
 8007ee6:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8007ee8:	466a      	mov	r2, sp
 8007eea:	ab01      	add	r3, sp, #4
 8007eec:	f7ff ffc6 	bl	8007e7c <__swhatbuf_r>
 8007ef0:	9900      	ldr	r1, [sp, #0]
 8007ef2:	0007      	movs	r7, r0
 8007ef4:	0028      	movs	r0, r5
 8007ef6:	f7ff f92d 	bl	8007154 <_malloc_r>
 8007efa:	2800      	cmp	r0, #0
 8007efc:	d108      	bne.n	8007f10 <__smakebuf_r+0x44>
 8007efe:	220c      	movs	r2, #12
 8007f00:	5ea3      	ldrsh	r3, [r4, r2]
 8007f02:	059a      	lsls	r2, r3, #22
 8007f04:	d4ef      	bmi.n	8007ee6 <__smakebuf_r+0x1a>
 8007f06:	2203      	movs	r2, #3
 8007f08:	4393      	bics	r3, r2
 8007f0a:	431e      	orrs	r6, r3
 8007f0c:	81a6      	strh	r6, [r4, #12]
 8007f0e:	e7e4      	b.n	8007eda <__smakebuf_r+0xe>
 8007f10:	4b0f      	ldr	r3, [pc, #60]	; (8007f50 <__smakebuf_r+0x84>)
 8007f12:	62ab      	str	r3, [r5, #40]	; 0x28
 8007f14:	2380      	movs	r3, #128	; 0x80
 8007f16:	89a2      	ldrh	r2, [r4, #12]
 8007f18:	6020      	str	r0, [r4, #0]
 8007f1a:	4313      	orrs	r3, r2
 8007f1c:	81a3      	strh	r3, [r4, #12]
 8007f1e:	9b00      	ldr	r3, [sp, #0]
 8007f20:	6120      	str	r0, [r4, #16]
 8007f22:	6163      	str	r3, [r4, #20]
 8007f24:	9b01      	ldr	r3, [sp, #4]
 8007f26:	2b00      	cmp	r3, #0
 8007f28:	d00d      	beq.n	8007f46 <__smakebuf_r+0x7a>
 8007f2a:	0028      	movs	r0, r5
 8007f2c:	230e      	movs	r3, #14
 8007f2e:	5ee1      	ldrsh	r1, [r4, r3]
 8007f30:	f000 f8e6 	bl	8008100 <_isatty_r>
 8007f34:	2800      	cmp	r0, #0
 8007f36:	d006      	beq.n	8007f46 <__smakebuf_r+0x7a>
 8007f38:	2203      	movs	r2, #3
 8007f3a:	89a3      	ldrh	r3, [r4, #12]
 8007f3c:	4393      	bics	r3, r2
 8007f3e:	001a      	movs	r2, r3
 8007f40:	2301      	movs	r3, #1
 8007f42:	4313      	orrs	r3, r2
 8007f44:	81a3      	strh	r3, [r4, #12]
 8007f46:	89a0      	ldrh	r0, [r4, #12]
 8007f48:	4307      	orrs	r7, r0
 8007f4a:	81a7      	strh	r7, [r4, #12]
 8007f4c:	e7cb      	b.n	8007ee6 <__smakebuf_r+0x1a>
 8007f4e:	46c0      	nop			; (mov r8, r8)
 8007f50:	08007cb9 	.word	0x08007cb9

08007f54 <_malloc_usable_size_r>:
 8007f54:	1f0b      	subs	r3, r1, #4
 8007f56:	681b      	ldr	r3, [r3, #0]
 8007f58:	1f18      	subs	r0, r3, #4
 8007f5a:	2b00      	cmp	r3, #0
 8007f5c:	da01      	bge.n	8007f62 <_malloc_usable_size_r+0xe>
 8007f5e:	580b      	ldr	r3, [r1, r0]
 8007f60:	18c0      	adds	r0, r0, r3
 8007f62:	4770      	bx	lr

08007f64 <_raise_r>:
 8007f64:	b570      	push	{r4, r5, r6, lr}
 8007f66:	0004      	movs	r4, r0
 8007f68:	000d      	movs	r5, r1
 8007f6a:	291f      	cmp	r1, #31
 8007f6c:	d904      	bls.n	8007f78 <_raise_r+0x14>
 8007f6e:	2316      	movs	r3, #22
 8007f70:	6003      	str	r3, [r0, #0]
 8007f72:	2001      	movs	r0, #1
 8007f74:	4240      	negs	r0, r0
 8007f76:	bd70      	pop	{r4, r5, r6, pc}
 8007f78:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8007f7a:	2b00      	cmp	r3, #0
 8007f7c:	d004      	beq.n	8007f88 <_raise_r+0x24>
 8007f7e:	008a      	lsls	r2, r1, #2
 8007f80:	189b      	adds	r3, r3, r2
 8007f82:	681a      	ldr	r2, [r3, #0]
 8007f84:	2a00      	cmp	r2, #0
 8007f86:	d108      	bne.n	8007f9a <_raise_r+0x36>
 8007f88:	0020      	movs	r0, r4
 8007f8a:	f000 f831 	bl	8007ff0 <_getpid_r>
 8007f8e:	002a      	movs	r2, r5
 8007f90:	0001      	movs	r1, r0
 8007f92:	0020      	movs	r0, r4
 8007f94:	f000 f81a 	bl	8007fcc <_kill_r>
 8007f98:	e7ed      	b.n	8007f76 <_raise_r+0x12>
 8007f9a:	2000      	movs	r0, #0
 8007f9c:	2a01      	cmp	r2, #1
 8007f9e:	d0ea      	beq.n	8007f76 <_raise_r+0x12>
 8007fa0:	1c51      	adds	r1, r2, #1
 8007fa2:	d103      	bne.n	8007fac <_raise_r+0x48>
 8007fa4:	2316      	movs	r3, #22
 8007fa6:	3001      	adds	r0, #1
 8007fa8:	6023      	str	r3, [r4, #0]
 8007faa:	e7e4      	b.n	8007f76 <_raise_r+0x12>
 8007fac:	2400      	movs	r4, #0
 8007fae:	0028      	movs	r0, r5
 8007fb0:	601c      	str	r4, [r3, #0]
 8007fb2:	4790      	blx	r2
 8007fb4:	0020      	movs	r0, r4
 8007fb6:	e7de      	b.n	8007f76 <_raise_r+0x12>

08007fb8 <raise>:
 8007fb8:	b510      	push	{r4, lr}
 8007fba:	4b03      	ldr	r3, [pc, #12]	; (8007fc8 <raise+0x10>)
 8007fbc:	0001      	movs	r1, r0
 8007fbe:	6818      	ldr	r0, [r3, #0]
 8007fc0:	f7ff ffd0 	bl	8007f64 <_raise_r>
 8007fc4:	bd10      	pop	{r4, pc}
 8007fc6:	46c0      	nop			; (mov r8, r8)
 8007fc8:	2000004c 	.word	0x2000004c

08007fcc <_kill_r>:
 8007fcc:	2300      	movs	r3, #0
 8007fce:	b570      	push	{r4, r5, r6, lr}
 8007fd0:	4d06      	ldr	r5, [pc, #24]	; (8007fec <_kill_r+0x20>)
 8007fd2:	0004      	movs	r4, r0
 8007fd4:	0008      	movs	r0, r1
 8007fd6:	0011      	movs	r1, r2
 8007fd8:	602b      	str	r3, [r5, #0]
 8007fda:	f7fb f86c 	bl	80030b6 <_kill>
 8007fde:	1c43      	adds	r3, r0, #1
 8007fe0:	d103      	bne.n	8007fea <_kill_r+0x1e>
 8007fe2:	682b      	ldr	r3, [r5, #0]
 8007fe4:	2b00      	cmp	r3, #0
 8007fe6:	d000      	beq.n	8007fea <_kill_r+0x1e>
 8007fe8:	6023      	str	r3, [r4, #0]
 8007fea:	bd70      	pop	{r4, r5, r6, pc}
 8007fec:	20000384 	.word	0x20000384

08007ff0 <_getpid_r>:
 8007ff0:	b510      	push	{r4, lr}
 8007ff2:	f7fb f85a 	bl	80030aa <_getpid>
 8007ff6:	bd10      	pop	{r4, pc}

08007ff8 <__sread>:
 8007ff8:	b570      	push	{r4, r5, r6, lr}
 8007ffa:	000c      	movs	r4, r1
 8007ffc:	250e      	movs	r5, #14
 8007ffe:	5f49      	ldrsh	r1, [r1, r5]
 8008000:	f000 f8a4 	bl	800814c <_read_r>
 8008004:	2800      	cmp	r0, #0
 8008006:	db03      	blt.n	8008010 <__sread+0x18>
 8008008:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800800a:	181b      	adds	r3, r3, r0
 800800c:	6563      	str	r3, [r4, #84]	; 0x54
 800800e:	bd70      	pop	{r4, r5, r6, pc}
 8008010:	89a3      	ldrh	r3, [r4, #12]
 8008012:	4a02      	ldr	r2, [pc, #8]	; (800801c <__sread+0x24>)
 8008014:	4013      	ands	r3, r2
 8008016:	81a3      	strh	r3, [r4, #12]
 8008018:	e7f9      	b.n	800800e <__sread+0x16>
 800801a:	46c0      	nop			; (mov r8, r8)
 800801c:	ffffefff 	.word	0xffffefff

08008020 <__swrite>:
 8008020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008022:	001f      	movs	r7, r3
 8008024:	898b      	ldrh	r3, [r1, #12]
 8008026:	0005      	movs	r5, r0
 8008028:	000c      	movs	r4, r1
 800802a:	0016      	movs	r6, r2
 800802c:	05db      	lsls	r3, r3, #23
 800802e:	d505      	bpl.n	800803c <__swrite+0x1c>
 8008030:	230e      	movs	r3, #14
 8008032:	5ec9      	ldrsh	r1, [r1, r3]
 8008034:	2200      	movs	r2, #0
 8008036:	2302      	movs	r3, #2
 8008038:	f000 f874 	bl	8008124 <_lseek_r>
 800803c:	89a3      	ldrh	r3, [r4, #12]
 800803e:	4a05      	ldr	r2, [pc, #20]	; (8008054 <__swrite+0x34>)
 8008040:	0028      	movs	r0, r5
 8008042:	4013      	ands	r3, r2
 8008044:	81a3      	strh	r3, [r4, #12]
 8008046:	0032      	movs	r2, r6
 8008048:	230e      	movs	r3, #14
 800804a:	5ee1      	ldrsh	r1, [r4, r3]
 800804c:	003b      	movs	r3, r7
 800804e:	f000 f81f 	bl	8008090 <_write_r>
 8008052:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008054:	ffffefff 	.word	0xffffefff

08008058 <__sseek>:
 8008058:	b570      	push	{r4, r5, r6, lr}
 800805a:	000c      	movs	r4, r1
 800805c:	250e      	movs	r5, #14
 800805e:	5f49      	ldrsh	r1, [r1, r5]
 8008060:	f000 f860 	bl	8008124 <_lseek_r>
 8008064:	89a3      	ldrh	r3, [r4, #12]
 8008066:	1c42      	adds	r2, r0, #1
 8008068:	d103      	bne.n	8008072 <__sseek+0x1a>
 800806a:	4a05      	ldr	r2, [pc, #20]	; (8008080 <__sseek+0x28>)
 800806c:	4013      	ands	r3, r2
 800806e:	81a3      	strh	r3, [r4, #12]
 8008070:	bd70      	pop	{r4, r5, r6, pc}
 8008072:	2280      	movs	r2, #128	; 0x80
 8008074:	0152      	lsls	r2, r2, #5
 8008076:	4313      	orrs	r3, r2
 8008078:	81a3      	strh	r3, [r4, #12]
 800807a:	6560      	str	r0, [r4, #84]	; 0x54
 800807c:	e7f8      	b.n	8008070 <__sseek+0x18>
 800807e:	46c0      	nop			; (mov r8, r8)
 8008080:	ffffefff 	.word	0xffffefff

08008084 <__sclose>:
 8008084:	b510      	push	{r4, lr}
 8008086:	230e      	movs	r3, #14
 8008088:	5ec9      	ldrsh	r1, [r1, r3]
 800808a:	f000 f815 	bl	80080b8 <_close_r>
 800808e:	bd10      	pop	{r4, pc}

08008090 <_write_r>:
 8008090:	b570      	push	{r4, r5, r6, lr}
 8008092:	0004      	movs	r4, r0
 8008094:	0008      	movs	r0, r1
 8008096:	0011      	movs	r1, r2
 8008098:	001a      	movs	r2, r3
 800809a:	2300      	movs	r3, #0
 800809c:	4d05      	ldr	r5, [pc, #20]	; (80080b4 <_write_r+0x24>)
 800809e:	602b      	str	r3, [r5, #0]
 80080a0:	f7fb f842 	bl	8003128 <_write>
 80080a4:	1c43      	adds	r3, r0, #1
 80080a6:	d103      	bne.n	80080b0 <_write_r+0x20>
 80080a8:	682b      	ldr	r3, [r5, #0]
 80080aa:	2b00      	cmp	r3, #0
 80080ac:	d000      	beq.n	80080b0 <_write_r+0x20>
 80080ae:	6023      	str	r3, [r4, #0]
 80080b0:	bd70      	pop	{r4, r5, r6, pc}
 80080b2:	46c0      	nop			; (mov r8, r8)
 80080b4:	20000384 	.word	0x20000384

080080b8 <_close_r>:
 80080b8:	2300      	movs	r3, #0
 80080ba:	b570      	push	{r4, r5, r6, lr}
 80080bc:	4d06      	ldr	r5, [pc, #24]	; (80080d8 <_close_r+0x20>)
 80080be:	0004      	movs	r4, r0
 80080c0:	0008      	movs	r0, r1
 80080c2:	602b      	str	r3, [r5, #0]
 80080c4:	f7fb f84c 	bl	8003160 <_close>
 80080c8:	1c43      	adds	r3, r0, #1
 80080ca:	d103      	bne.n	80080d4 <_close_r+0x1c>
 80080cc:	682b      	ldr	r3, [r5, #0]
 80080ce:	2b00      	cmp	r3, #0
 80080d0:	d000      	beq.n	80080d4 <_close_r+0x1c>
 80080d2:	6023      	str	r3, [r4, #0]
 80080d4:	bd70      	pop	{r4, r5, r6, pc}
 80080d6:	46c0      	nop			; (mov r8, r8)
 80080d8:	20000384 	.word	0x20000384

080080dc <_fstat_r>:
 80080dc:	2300      	movs	r3, #0
 80080de:	b570      	push	{r4, r5, r6, lr}
 80080e0:	4d06      	ldr	r5, [pc, #24]	; (80080fc <_fstat_r+0x20>)
 80080e2:	0004      	movs	r4, r0
 80080e4:	0008      	movs	r0, r1
 80080e6:	0011      	movs	r1, r2
 80080e8:	602b      	str	r3, [r5, #0]
 80080ea:	f7fb f843 	bl	8003174 <_fstat>
 80080ee:	1c43      	adds	r3, r0, #1
 80080f0:	d103      	bne.n	80080fa <_fstat_r+0x1e>
 80080f2:	682b      	ldr	r3, [r5, #0]
 80080f4:	2b00      	cmp	r3, #0
 80080f6:	d000      	beq.n	80080fa <_fstat_r+0x1e>
 80080f8:	6023      	str	r3, [r4, #0]
 80080fa:	bd70      	pop	{r4, r5, r6, pc}
 80080fc:	20000384 	.word	0x20000384

08008100 <_isatty_r>:
 8008100:	2300      	movs	r3, #0
 8008102:	b570      	push	{r4, r5, r6, lr}
 8008104:	4d06      	ldr	r5, [pc, #24]	; (8008120 <_isatty_r+0x20>)
 8008106:	0004      	movs	r4, r0
 8008108:	0008      	movs	r0, r1
 800810a:	602b      	str	r3, [r5, #0]
 800810c:	f7fb f840 	bl	8003190 <_isatty>
 8008110:	1c43      	adds	r3, r0, #1
 8008112:	d103      	bne.n	800811c <_isatty_r+0x1c>
 8008114:	682b      	ldr	r3, [r5, #0]
 8008116:	2b00      	cmp	r3, #0
 8008118:	d000      	beq.n	800811c <_isatty_r+0x1c>
 800811a:	6023      	str	r3, [r4, #0]
 800811c:	bd70      	pop	{r4, r5, r6, pc}
 800811e:	46c0      	nop			; (mov r8, r8)
 8008120:	20000384 	.word	0x20000384

08008124 <_lseek_r>:
 8008124:	b570      	push	{r4, r5, r6, lr}
 8008126:	0004      	movs	r4, r0
 8008128:	0008      	movs	r0, r1
 800812a:	0011      	movs	r1, r2
 800812c:	001a      	movs	r2, r3
 800812e:	2300      	movs	r3, #0
 8008130:	4d05      	ldr	r5, [pc, #20]	; (8008148 <_lseek_r+0x24>)
 8008132:	602b      	str	r3, [r5, #0]
 8008134:	f7fb f835 	bl	80031a2 <_lseek>
 8008138:	1c43      	adds	r3, r0, #1
 800813a:	d103      	bne.n	8008144 <_lseek_r+0x20>
 800813c:	682b      	ldr	r3, [r5, #0]
 800813e:	2b00      	cmp	r3, #0
 8008140:	d000      	beq.n	8008144 <_lseek_r+0x20>
 8008142:	6023      	str	r3, [r4, #0]
 8008144:	bd70      	pop	{r4, r5, r6, pc}
 8008146:	46c0      	nop			; (mov r8, r8)
 8008148:	20000384 	.word	0x20000384

0800814c <_read_r>:
 800814c:	b570      	push	{r4, r5, r6, lr}
 800814e:	0004      	movs	r4, r0
 8008150:	0008      	movs	r0, r1
 8008152:	0011      	movs	r1, r2
 8008154:	001a      	movs	r2, r3
 8008156:	2300      	movs	r3, #0
 8008158:	4d05      	ldr	r5, [pc, #20]	; (8008170 <_read_r+0x24>)
 800815a:	602b      	str	r3, [r5, #0]
 800815c:	f7fa ffc7 	bl	80030ee <_read>
 8008160:	1c43      	adds	r3, r0, #1
 8008162:	d103      	bne.n	800816c <_read_r+0x20>
 8008164:	682b      	ldr	r3, [r5, #0]
 8008166:	2b00      	cmp	r3, #0
 8008168:	d000      	beq.n	800816c <_read_r+0x20>
 800816a:	6023      	str	r3, [r4, #0]
 800816c:	bd70      	pop	{r4, r5, r6, pc}
 800816e:	46c0      	nop			; (mov r8, r8)
 8008170:	20000384 	.word	0x20000384

08008174 <_init>:
 8008174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008176:	46c0      	nop			; (mov r8, r8)
 8008178:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800817a:	bc08      	pop	{r3}
 800817c:	469e      	mov	lr, r3
 800817e:	4770      	bx	lr

08008180 <_fini>:
 8008180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008182:	46c0      	nop			; (mov r8, r8)
 8008184:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008186:	bc08      	pop	{r3}
 8008188:	469e      	mov	lr, r3
 800818a:	4770      	bx	lr
